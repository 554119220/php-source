<?php
 class WeixinPay { protected $appid; protected $mch_id; protected $key; protected $openid; protected $out_trade_no; protected $body; protected $total_fee; protected $attach; protected $notify_url; function __construct($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, $attach = 0, $notify_url = "\150\164\164\x70\x3a\x2f\x2f\x77\167\x77\x2e\x77\x65\151\x78\151\156\x2e\161\x71\56\143\157\x6d\x2f\167\x78\160\141\x79\57\160\x61\x79\56\x70\x68\160") { goto AbLpV; vfmLj: $this->body = $body; goto AsdVl; M643D: $this->openid = $openid; goto wvH0v; YmVT0: $this->notify_url = $notify_url; goto tFJqx; yfJaI: $this->attach = $attach; goto YmVT0; AsdVl: $this->total_fee = $total_fee; goto yfJaI; J9s6Z: $this->key = $key; goto DG0Al; DG0Al: $this->out_trade_no = $out_trade_no; goto vfmLj; wvH0v: $this->mch_id = $mch_id; goto J9s6Z; AbLpV: $this->appid = $appid; goto M643D; tFJqx: } public function pay() { $return = $this->weixinapp(); return $return; } private function unifiedorder() { goto adXxV; QZstZ: $xmlData = $this->arrayToXml($parameters); goto RNGbb; adXxV: $url = "\x68\x74\x74\x70\x73\x3a\57\57\x61\x70\x69\x2e\155\143\150\x2e\x77\x65\151\x78\151\156\x2e\161\161\56\x63\x6f\x6d\57\160\141\x79\x2f\x75\x6e\x69\146\151\145\144\157\162\x64\145\x72"; goto VnEtM; VnEtM: $parameters = array("\x61\x70\160\x69\x64" => $this->appid, "\x6d\x63\x68\x5f\151\x64" => $this->mch_id, "\x6e\157\156\143\x65\x5f\163\x74\x72" => $this->createNoncestr(), "\142\x6f\144\171" => $this->body, "\141\x74\x74\x61\143\x68" => $this->attach, "\157\165\x74\x5f\164\x72\141\144\145\x5f\x6e\157" => $this->out_trade_no, "\164\157\164\x61\154\x5f\146\x65\x65" => $this->total_fee, "\x73\x70\x62\151\x6c\x6c\137\143\x72\x65\x61\x74\145\x5f\x69\x70" => $_SERVER["\122\x45\x4d\117\x54\x45\x5f\x41\x44\104\122"], "\x6e\157\164\151\x66\171\137\x75\x72\154" => $this->notify_url, "\x6f\160\x65\x6e\151\144" => $this->openid, "\164\162\141\x64\x65\137\x74\171\160\145" => "\112\x53\101\120\x49"); goto eMpqu; eMpqu: $parameters["\x73\x69\x67\156"] = $this->getSign($parameters); goto QZstZ; RNGbb: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60)); goto UWZNo; UWZNo: return $return; goto yrzT0; yrzT0: } private static function postXmlCurl($xml, $url, $second = 30) { goto mdQCA; Ase89: curl_close($ch); goto ye5U_; NKggd: if ($data) { goto udOE_; } goto OcLMj; i3jjw: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto Ty4jR; uNBS3: $data = curl_exec($ch); goto NKggd; wgywH: udOE_: goto Ase89; e3pBJ: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto PQEnq; ye5U_: return $data; goto w0iKr; mdQCA: $ch = curl_init(); goto dsJMx; RPaa2: throw new WxPayException("\143\x75\162\154\345\x87\272\351\224\x99\xef\274\x8c\351\x94\231\350\257\xaf\xe7\240\201\x3a{$error}"); goto Ykmfw; Qwh9n: curl_setopt($ch, CURLOPT_URL, $url); goto dW9C2; dW9C2: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto h_1JZ; OcLMj: $error = curl_errno($ch); goto Dt1km; Ty4jR: curl_setopt($ch, CURLOPT_POST, TRUE); goto nJ8Fv; Dt1km: curl_close($ch); goto RPaa2; nJ8Fv: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto e3pBJ; w0iKr: Ce1K5: goto qig0v; HTGRs: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto i3jjw; HGrio: set_time_limit(0); goto uNBS3; Ykmfw: goto Ce1K5; goto wgywH; h_1JZ: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto HTGRs; dsJMx: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto Qwh9n; PQEnq: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto HGrio; qig0v: } private function arrayToXml($arr) { goto Nt1eS; zcitZ: $xml .= "\x3c\x2f\x72\x6f\157\164\x3e"; goto epWdH; U0Ayf: foreach ($arr as $key => $val) { goto NFRRt; qSrOK: $xml .= "\x3c" . $key . "\76" . arrayToXml($val) . "\x3c\x2f" . $key . "\x3e"; goto N1vNA; NFRRt: if (is_array($val)) { goto Fgpog; } goto WCJFT; S3Ti7: Fgpog: goto qSrOK; EE9Bz: nvp_d: goto LMLtF; N1vNA: BZli5: goto EE9Bz; WCJFT: $xml .= "\x3c" . $key . "\76" . $val . "\x3c\57" . $key . "\76"; goto PSn9a; PSn9a: goto BZli5; goto S3Ti7; LMLtF: } goto w8Xm_; epWdH: return $xml; goto Q3hE3; w8Xm_: xotjL: goto zcitZ; Nt1eS: $xml = "\x3c\162\x6f\x6f\164\76"; goto U0Ayf; Q3hE3: } private function xmlToArray($xml) { goto OkIk6; XgiLQ: $xmlstring = simplexml_load_string($xml, "\123\x69\155\x70\154\x65\x58\x4d\x4c\105\154\145\155\x65\x6e\164", LIBXML_NOCDATA); goto wlAY9; mszMw: return $val; goto hMu2S; wlAY9: $val = json_decode(json_encode($xmlstring), true); goto mszMw; OkIk6: libxml_disable_entity_loader(true); goto XgiLQ; hMu2S: } private function weixinapp() { goto iiRQc; yrEw3: $parameters["\x70\162\145\160\141\x79\137\x69\144"] = $unifiedorder["\160\162\x65\x70\141\171\137\x69\x64"]; goto M6qrR; M6qrR: return $parameters; goto uXtE6; PYij8: $parameters = array("\x61\160\160\111\x64" => $this->appid, "\x74\x69\x6d\145\x53\164\141\x6d\160" => '' . time() . '', "\156\157\156\x63\145\123\164\x72" => $this->createNoncestr(), "\x70\x61\x63\153\x61\147\x65" => "\160\162\x65\x70\x61\171\x5f\x69\144\75" . $unifiedorder["\160\162\x65\160\x61\171\137\x69\x64"], "\x73\x69\x67\x6e\124\171\160\x65" => "\115\x44\65"); goto MOSKm; MOSKm: $parameters["\x70\141\171\x53\x69\x67\156"] = $this->getSign($parameters); goto yrEw3; iiRQc: $unifiedorder = $this->unifiedorder(); goto PYij8; uXtE6: } private function createNoncestr($length = 32) { goto CzIyH; q61ro: qBE_o: goto yuWjI; CzIyH: $chars = "\x61\142\143\144\x65\x66\147\150\x69\x6a\x6b\154\155\156\x6f\160\161\x72\163\164\165\166\167\170\x79\x7a\x30\61\62\63\64\65\x36\x37\70\71"; goto A7CVJ; yuWjI: if (!($i < $length)) { goto QdEhp; } goto z9Nlh; GDxP3: o6PYW: goto quWt3; z9Nlh: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto GDxP3; quWt3: $i++; goto TNOs0; ant7S: return $str; goto hmk7E; A7CVJ: $str = ''; goto CySY3; TNOs0: goto qBE_o; goto oHdZN; CySY3: $i = 0; goto q61ro; oHdZN: QdEhp: goto ant7S; hmk7E: } private function getSign($Obj) { goto Sx7JV; Sx7JV: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; WQoEo: } goto sHXlC; vVo4c: $String = md5($String); goto zmfE2; yKCwa: $String = $String . "\46\x6b\145\171\x3d" . $this->key; goto vVo4c; zmfE2: $result_ = strtoupper($String); goto KzJbc; KzJbc: return $result_; goto qDEOp; sHXlC: idKps: goto OSlKC; OSlKC: ksort($Parameters); goto PvlK1; PvlK1: $String = $this->formatBizQueryParaMap($Parameters, false); goto yKCwa; qDEOp: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto xLDIf; ik2Iw: $reqPar = substr($buff, 0, strlen($buff) - 1); goto skj0k; RX8yJ: $reqPar; goto h_Fac; h_Fac: if (!(strlen($buff) > 0)) { goto jWxWJ; } goto ik2Iw; kaZwr: ksort($paraMap); goto UOk5g; skj0k: jWxWJ: goto RkyX5; Ihzsd: mGFgB: goto RX8yJ; xLDIf: $buff = ''; goto kaZwr; UOk5g: foreach ($paraMap as $k => $v) { goto JWZHZ; ZhNlI: J7vqV: goto GuWI0; JWZHZ: if (!$urlencode) { goto J7vqV; } goto V4J69; kbQD8: Gb5DT: goto Tik41; GuWI0: $buff .= $k . "\x3d" . $v . "\x26"; goto kbQD8; V4J69: $v = urlencode($v); goto ZhNlI; Tik41: } goto Ihzsd; RkyX5: return $reqPar; goto XpSZN; XpSZN: } }