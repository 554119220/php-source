<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto yGXIl; yGXIl: $this->mch_appid = $mch_appid; goto pgulG; h_OT4: $this->key = $key; goto ugCpI; Qjwuk: $this->apiclient_key = $apiclient_key; goto uNLvE; ZQxMw: $this->amount = $amount; goto ZZg0I; f7Yw1: $this->re_user_name = $re_user_name; goto gnBvK; f6df4: $this->partner_trade_no = $partner_trade_no; goto f7Yw1; gnBvK: $this->desc = $desc; goto ZQxMw; ugCpI: $this->openid = $openid; goto f6df4; pgulG: $this->mchid = $mchid; goto h_OT4; ZZg0I: $this->apiclient_cert = $apiclient_cert; goto Qjwuk; uNLvE: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto ElaZL; ElaZL: $url = "\150\164\164\160\163\x3a\57\x2f\141\x70\x69\56\155\143\x68\56\167\145\x69\x78\x69\156\56\x71\161\56\x63\157\x6d\57\155\x6d\x70\x61\x79\x6d\153\164\164\x72\x61\156\x73\x66\145\x72\163\57\x70\162\x6f\155\x6f\x74\x69\x6f\156\x2f\164\x72\141\x6e\163\x66\x65\162\x73"; goto JYuex; e8IjF: $xmlData = $this->arrayToXml($parameters); goto WS5z9; WS5z9: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto zUlC7; zUlC7: return $return; goto gC88D; JYuex: $parameters = array("\155\x63\150\137\141\160\160\151\x64" => $this->mch_appid, "\x6d\143\150\151\x64" => $this->mchid, "\156\x6f\x6e\x63\145\x5f\x73\x74\162" => $this->createNoncestr(), "\x70\141\162\164\x6e\x65\x72\x5f\x74\x72\141\x64\145\137\156\x6f" => $this->partner_trade_no, "\x6f\160\145\156\151\x64" => $this->openid, "\x63\x68\145\143\153\137\x6e\141\x6d\x65" => "\116\117\x5f\103\110\x45\103\x4b", "\x72\x65\137\x75\163\145\162\137\156\141\x6d\x65" => $this->re_user_name, "\141\155\157\165\x6e\164" => $this->amount, "\144\x65\x73\x63" => $this->desc, "\x73\160\x62\x69\x6c\x6c\x5f\x63\x72\145\141\x74\x65\x5f\x69\x70" => $_SERVER["\x52\105\x4d\117\x54\105\x5f\101\x44\104\x52"]); goto KBo7D; KBo7D: $parameters["\163\151\x67\156"] = $this->getSign($parameters); goto e8IjF; gC88D: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto Je2O1; g0heD: $data = curl_exec($ch); goto xIqe6; Je2O1: $ch = curl_init(); goto Rct3x; Sxbk4: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto J6NjT; l3twx: curl_close($ch); goto TTM1z; Rct3x: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto ONLdx; klxUV: uXhL_: goto pCCam; avO8R: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto N58ki; B0JsT: goto uXhL_; goto lFNtn; xdnMC: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto v3jvd; HI9be: throw new WxPayException("\x63\165\162\154\345\207\xba\351\x94\x99\357\274\214\351\x94\231\xe8\xaf\xaf\347\xa0\201\72{$error}"); goto B0JsT; J6NjT: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto XsI3o; XsI3o: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto QW13Z; R1sfo: $error = curl_errno($ch); goto fgcQC; QW13Z: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto xdnMC; EfKOp: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto YbaKv; fgcQC: curl_close($ch); goto HI9be; N58ki: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto ipvpd; lFNtn: PWiez: goto l3twx; v3jvd: set_time_limit(0); goto g0heD; xIqe6: if ($data) { goto PWiez; } goto R1sfo; YbaKv: curl_setopt($ch, CURLOPT_POST, TRUE); goto Sxbk4; ONLdx: curl_setopt($ch, CURLOPT_URL, $url); goto avO8R; TTM1z: return $data; goto klxUV; ipvpd: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto EfKOp; pCCam: } private function arrayToXml($arr) { goto mhbTF; mhbTF: $xml = "\74\162\x6f\x6f\164\x3e"; goto C2qB8; C2qB8: foreach ($arr as $key => $val) { goto Lh0Fj; tfoWk: goto aoSSn; goto foBZE; foBZE: RVL7n: goto yEfWM; Lh0Fj: if (is_array($val)) { goto RVL7n; } goto bfVDR; bfVDR: $xml .= "\74" . $key . "\76" . $val . "\74\57" . $key . "\76"; goto tfoWk; OKlE8: kuee5: goto H1nmj; UPjH3: aoSSn: goto OKlE8; yEfWM: $xml .= "\74" . $key . "\x3e" . arrayToXml($val) . "\x3c\x2f" . $key . "\76"; goto UPjH3; H1nmj: } goto U9qp6; Z_aB2: $xml .= "\74\x2f\x72\x6f\157\x74\76"; goto dLiOr; dLiOr: return $xml; goto MEiX4; U9qp6: nWQO1: goto Z_aB2; MEiX4: } private function xmlToArray($xml) { goto Xcbgl; LmoxO: $val = json_decode(json_encode($xmlstring), true); goto Ddh_2; bkd2q: $xmlstring = simplexml_load_string($xml, "\x53\x69\x6d\160\154\145\130\115\114\105\154\x65\155\145\156\x74", LIBXML_NOCDATA); goto LmoxO; Ddh_2: return $val; goto ukvcP; Xcbgl: libxml_disable_entity_loader(true); goto bkd2q; ukvcP: } private function createNoncestr($length = 32) { goto a_Mea; K5VMf: if (!($i < $length)) { goto rcM1W; } goto p3KTp; pdy76: izCZI: goto K5VMf; Eg87n: return $str; goto pZL7y; EIg3m: $i++; goto MTgfr; p3KTp: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto ojbvJ; a_Mea: $chars = "\x61\x62\143\x64\x65\146\147\x68\151\x6a\153\x6c\155\x6e\157\160\161\162\x73\164\165\x76\x77\170\171\172\60\61\x32\63\x34\65\x36\67\x38\71"; goto d6A8e; d6A8e: $str = ''; goto de2Qv; de2Qv: $i = 0; goto pdy76; MTgfr: goto izCZI; goto JPntW; ojbvJ: y8xd1: goto EIg3m; JPntW: rcM1W: goto Eg87n; pZL7y: } private function getSign($Obj) { goto aSRRv; cqm6h: ksort($Parameters); goto v6w9a; v6w9a: $String = $this->formatBizQueryParaMap($Parameters, false); goto lHqdh; hWRx_: $result_ = strtoupper($String); goto sQRZ9; aSRRv: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; ZwEN5: } goto wHxOg; wHxOg: Hi3Ft: goto cqm6h; NWYb1: $String = md5($String); goto hWRx_; sQRZ9: return $result_; goto g84DV; lHqdh: $String = $String . "\x26\x6b\145\171\75" . $this->key; goto NWYb1; g84DV: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto HeYvj; KLhYL: $reqPar = substr($buff, 0, strlen($buff) - 1); goto Nwt4F; H1PFQ: foreach ($paraMap as $k => $v) { goto uCPP4; eaJDY: $buff .= $k . "\x3d" . $v . "\x26"; goto eakds; WSqWt: $v = urlencode($v); goto m09uR; eakds: eGWxO: goto PPHRj; uCPP4: if (!$urlencode) { goto Vt4Z1; } goto WSqWt; m09uR: Vt4Z1: goto eaJDY; PPHRj: } goto b0eL2; Su2ed: ksort($paraMap); goto H1PFQ; oUQgk: return $reqPar; goto GOv5K; y35ah: $reqPar; goto zJbT3; zJbT3: if (!(strlen($buff) > 0)) { goto eNCqq; } goto KLhYL; b0eL2: zbcOt: goto y35ah; HeYvj: $buff = ''; goto Su2ed; Nwt4F: eNCqq: goto oUQgk; GOv5K: } }