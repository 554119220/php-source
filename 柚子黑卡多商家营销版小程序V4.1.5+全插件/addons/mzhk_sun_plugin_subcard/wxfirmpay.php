<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto Cqq6m; k7Qp2: $this->openid = $openid; goto v1r51; I1uJl: $this->desc = $desc; goto z3HwX; EU17H: $this->re_user_name = $re_user_name; goto I1uJl; Q_VaU: $this->apiclient_key = $apiclient_key; goto mMmiN; z3HwX: $this->amount = $amount; goto o_vTu; zGlyo: $this->key = $key; goto k7Qp2; o_vTu: $this->apiclient_cert = $apiclient_cert; goto Q_VaU; iPNvS: $this->mchid = $mchid; goto zGlyo; v1r51: $this->partner_trade_no = $partner_trade_no; goto EU17H; Cqq6m: $this->mch_appid = $mch_appid; goto iPNvS; mMmiN: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto TaFyq; HtdPA: $parameters["\x73\151\147\156"] = $this->getSign($parameters); goto RpTwr; qp_XE: $parameters = array("\x6d\143\150\137\141\x70\160\x69\144" => $this->mch_appid, "\155\143\150\x69\x64" => $this->mchid, "\156\x6f\156\x63\145\137\163\164\x72" => $this->createNoncestr(), "\x70\141\162\164\x6e\x65\162\137\164\x72\x61\144\x65\137\156\x6f" => $this->partner_trade_no, "\157\160\145\x6e\x69\x64" => $this->openid, "\143\x68\x65\x63\153\x5f\156\141\155\x65" => "\116\x4f\137\103\110\105\103\113", "\x72\145\x5f\165\x73\x65\162\x5f\x6e\141\155\145" => $this->re_user_name, "\141\x6d\157\x75\x6e\164" => $this->amount, "\144\145\x73\143" => $this->desc, "\163\x70\142\151\154\154\x5f\x63\x72\145\x61\x74\145\137\151\160" => "\61\x32\x30\56\x37\x39\56\x31\65\x32\x2e\61\60\65"); goto HtdPA; TaFyq: $url = "\x68\164\164\x70\x73\x3a\57\x2f\141\x70\151\56\155\x63\150\56\167\x65\x69\x78\x69\x6e\x2e\x71\161\x2e\143\x6f\x6d\57\x6d\x6d\160\141\x79\x6d\153\x74\x74\162\x61\x6e\x73\x66\x65\162\x73\x2f\160\162\157\155\x6f\164\x69\157\x6e\57\x74\162\141\156\163\146\x65\162\163"; goto qp_XE; Suis4: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto lVDvT; lVDvT: return $return; goto m5Twa; RpTwr: $xmlData = $this->arrayToXml($parameters); goto Suis4; m5Twa: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto uuteU; jywKy: $data = curl_exec($ch); goto HpPJD; fKe0r: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto cMa9C; IDUcX: curl_setopt($ch, CURLOPT_POST, TRUE); goto YQGJ4; YQGJ4: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto k0UV9; k0UV9: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto lLFKb; wc3wI: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto XEfo4; HpPJD: if ($data) { goto R9LNZ; } goto z3r9f; E2TGY: curl_close($ch); goto tJ6vz; z3r9f: $error = curl_errno($ch); goto E2TGY; vZeLo: mFwmg: goto GPLLK; y7yDl: goto mFwmg; goto jJAO9; XEfo4: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto hemC4; hemC4: set_time_limit(0); goto jywKy; lLFKb: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto wc3wI; tJ6vz: throw new WxPayException("\143\165\162\x6c\345\207\xba\351\x94\x99\357\274\x8c\xe9\x94\x99\xe8\xaf\257\xe7\240\x81\72{$error}"); goto y7yDl; cMa9C: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto KTTps; IzN5A: return $data; goto vZeLo; mpaGL: curl_close($ch); goto IzN5A; KTTps: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto IDUcX; iEkUn: curl_setopt($ch, CURLOPT_URL, $url); goto kfKdE; uuteU: $ch = curl_init(); goto hBdQ3; kfKdE: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto fKe0r; hBdQ3: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto iEkUn; jJAO9: R9LNZ: goto mpaGL; GPLLK: } private function arrayToXml($arr) { goto bchJp; F3vBa: QF_1b: goto pZ3EV; bchJp: $xml = "\x3c\162\x6f\157\164\76"; goto FbgCF; fBeA7: return $xml; goto yp4Uu; FbgCF: foreach ($arr as $key => $val) { goto XVXQg; r5eH9: VbUkA: goto cGxAk; XVXQg: if (is_array($val)) { goto VbUkA; } goto UWNnb; DXX1X: zqycB: goto apAbr; iW8tZ: goto zqycB; goto r5eH9; apAbr: ndoRp: goto cbdRJ; UWNnb: $xml .= "\x3c" . $key . "\x3e" . $val . "\74\57" . $key . "\76"; goto iW8tZ; cGxAk: $xml .= "\x3c" . $key . "\x3e" . arrayToXml($val) . "\74\57" . $key . "\x3e"; goto DXX1X; cbdRJ: } goto F3vBa; pZ3EV: $xml .= "\x3c\x2f\162\157\x6f\164\76"; goto fBeA7; yp4Uu: } private function xmlToArray($xml) { goto BM0Fe; BM0Fe: libxml_disable_entity_loader(true); goto bLjxv; y2fda: return $val; goto IcuAk; A1FLr: $val = json_decode(json_encode($xmlstring), true); goto y2fda; bLjxv: $xmlstring = simplexml_load_string($xml, "\123\151\155\x70\154\x65\130\115\x4c\105\154\x65\155\145\156\164", LIBXML_NOCDATA); goto A1FLr; IcuAk: } private function createNoncestr($length = 32) { goto T5sfo; y4ukK: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto eddL7; I9Q4m: $i = 0; goto F6nuB; F6nuB: ZWcN7: goto n9Kth; T5sfo: $chars = "\141\x62\143\x64\145\x66\x67\x68\x69\152\153\154\155\x6e\157\160\161\x72\163\x74\165\x76\167\x78\x79\172\60\x31\x32\63\64\x35\x36\x37\x38\71"; goto Z5LXx; T7Bh9: return $str; goto D14qQ; n929m: goto ZWcN7; goto ptOEd; eddL7: CqFSY: goto vXMZt; vXMZt: $i++; goto n929m; ptOEd: gDfOn: goto T7Bh9; n9Kth: if (!($i < $length)) { goto gDfOn; } goto y4ukK; Z5LXx: $str = ''; goto I9Q4m; D14qQ: } private function getSign($Obj) { goto kLA9j; ey4ew: juJWr: goto gJ3rz; cuzmn: $String = $this->formatBizQueryParaMap($Parameters, false); goto zuljJ; kLA9j: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; eJyIl: } goto ey4ew; zuljJ: $String = $String . "\46\x6b\145\171\75" . $this->key; goto RmOOs; GsRNc: return $result_; goto Fif2z; gJ3rz: ksort($Parameters); goto cuzmn; iQVOO: $result_ = strtoupper($String); goto GsRNc; RmOOs: $String = md5($String); goto iQVOO; Fif2z: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto YS7p5; kkloY: $reqPar; goto m0aBy; Dl5X6: IBRdE: goto MQAZF; YS7p5: $buff = ''; goto hnAYP; MQAZF: return $reqPar; goto sScme; mka2o: foreach ($paraMap as $k => $v) { goto E0j6b; AeL2k: $buff .= $k . "\75" . $v . "\46"; goto OPRa3; E0j6b: if (!$urlencode) { goto UvPlF; } goto Jvvfk; OPRa3: K_Esd: goto OwQCE; Jvvfk: $v = urlencode($v); goto d6z0C; d6z0C: UvPlF: goto AeL2k; OwQCE: } goto rcqHA; m0aBy: if (!(strlen($buff) > 0)) { goto IBRdE; } goto K0sRP; K0sRP: $reqPar = substr($buff, 0, strlen($buff) - 1); goto Dl5X6; hnAYP: ksort($paraMap); goto mka2o; rcqHA: akC_5: goto kkloY; sScme: } }