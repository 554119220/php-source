<?php
 namespace Symfony\Bridge\PsrHttpMessage\Tests\Fixtures; use Psr\Http\Message\UriInterface; class Uri implements UriInterface { private $scheme = ''; private $userInfo = ''; private $host = ''; private $port; private $path = ''; private $query = ''; private $fragment = ''; private $uriString; public function __construct($uri = '') { goto RBBbU; kKHvu: $this->host = isset($parts["\x68\157\x73\164"]) ? $parts["\150\x6f\x73\164"] : ''; goto LOz9V; uY4Lx: $this->uriString = $uri; goto jqlPL; etfmc: $this->fragment = isset($parts["\146\x72\141\147\155\x65\x6e\164"]) ? $parts["\x66\x72\141\x67\x6d\145\x6e\x74"] : ''; goto uY4Lx; zrOmy: $this->query = isset($parts["\x71\165\x65\162\171"]) ? $parts["\161\165\x65\x72\171"] : ''; goto etfmc; LOz9V: $this->port = isset($parts["\x70\157\x72\x74"]) ? $parts["\160\157\x72\x74"] : null; goto JFwqk; LJCFw: $this->scheme = isset($parts["\163\x63\x68\145\x6d\x65"]) ? $parts["\x73\x63\150\x65\x6d\145"] : ''; goto XrrDO; XrrDO: $this->userInfo = isset($parts["\165\163\x65\162"]) ? $parts["\165\163\x65\162"] : ''; goto kKHvu; JFwqk: $this->path = isset($parts["\x70\x61\164\150"]) ? $parts["\160\141\164\150"] : ''; goto zrOmy; RBBbU: $parts = parse_url($uri); goto LJCFw; jqlPL: } public function getScheme() { return $this->scheme; } public function getAuthority() { goto JvB1n; JvB1n: if (!empty($this->host)) { goto FK0me; } goto C7awG; rYJJP: $authority = $this->host; goto AK0A5; uOsEw: $authority = $this->userInfo . "\100" . $authority; goto NjBG7; AK0A5: if (empty($this->userInfo)) { goto Z_MSV; } goto uOsEw; Gbs1n: FK0me: goto rYJJP; o3kYW: return $authority; goto xusdf; KOqLG: $authority .= "\72" . $this->port; goto o3kYW; C7awG: return ''; goto Gbs1n; NjBG7: Z_MSV: goto KOqLG; xusdf: } public function getUserInfo() { return $this->userInfo; } public function getHost() { return $this->host; } public function getPort() { return $this->port; } public function getPath() { return $this->path; } public function getQuery() { return $this->query; } public function getFragment() { return $this->fragment; } public function withScheme($scheme) { throw new \BadMethodCallException("\116\x6f\164\40\x69\x6d\160\154\145\155\x65\x6e\x74\x65\144\56"); } public function withUserInfo($user, $password = null) { throw new \BadMethodCallException("\116\x6f\x74\x20\x69\x6d\160\154\145\155\x65\x6e\x74\145\x64\56"); } public function withHost($host) { throw new \BadMethodCallException("\x4e\157\x74\x20\151\x6d\160\x6c\145\x6d\145\156\x74\145\x64\56"); } public function withPort($port) { throw new \BadMethodCallException("\116\x6f\x74\40\151\x6d\x70\154\145\x6d\145\156\x74\x65\x64\56"); } public function withPath($path) { throw new \BadMethodCallException("\x4e\157\x74\x20\x69\x6d\160\154\145\x6d\x65\156\164\x65\x64\x2e"); } public function withQuery($query) { throw new \BadMethodCallException("\x4e\x6f\x74\40\x69\x6d\x70\154\x65\155\x65\156\x74\145\144\56"); } public function withFragment($fragment) { throw new \BadMethodCallException("\x4e\x6f\164\40\151\x6d\160\x6c\x65\155\145\x6e\164\145\x64\56"); } public function __toString() { return $this->uriString; } }