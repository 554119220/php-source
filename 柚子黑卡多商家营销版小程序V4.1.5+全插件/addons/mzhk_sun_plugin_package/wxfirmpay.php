<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto Iiynp; qdcbO: $this->apiclient_key = $apiclient_key; goto PMt4k; UyvN4: $this->desc = $desc; goto c9b1x; Iiynp: $this->mch_appid = $mch_appid; goto Ysvxj; c9b1x: $this->amount = $amount; goto DsTIG; RHi9n: $this->key = $key; goto c9tSI; H8jbK: $this->partner_trade_no = $partner_trade_no; goto kw4vI; DsTIG: $this->apiclient_cert = $apiclient_cert; goto qdcbO; Ysvxj: $this->mchid = $mchid; goto RHi9n; kw4vI: $this->re_user_name = $re_user_name; goto UyvN4; c9tSI: $this->openid = $openid; goto H8jbK; PMt4k: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto EUHH3; xO9Mw: $xmlData = $this->arrayToXml($parameters); goto Rfzmo; AESTu: $parameters = array("\155\143\150\137\141\160\x70\151\144" => $this->mch_appid, "\x6d\143\x68\x69\x64" => $this->mchid, "\x6e\x6f\x6e\x63\x65\137\x73\x74\162" => $this->createNoncestr(), "\x70\x61\162\x74\156\145\162\137\x74\162\141\144\x65\137\x6e\157" => $this->partner_trade_no, "\x6f\x70\x65\x6e\151\144" => $this->openid, "\143\150\145\x63\x6b\137\156\141\x6d\x65" => "\x4e\117\x5f\x43\x48\x45\x43\x4b", "\162\145\137\x75\x73\145\162\x5f\156\141\x6d\x65" => $this->re_user_name, "\x61\155\x6f\x75\x6e\164" => $this->amount, "\144\x65\x73\x63" => $this->desc, "\x73\x70\x62\x69\x6c\154\137\x63\162\x65\141\x74\x65\x5f\151\160" => "\x31\x32\x30\x2e\x37\x39\56\x31\65\x32\x2e\61\x30\65"); goto OyKT2; zj3Ly: return $return; goto Q1JzG; EUHH3: $url = "\150\164\164\160\163\72\x2f\x2f\x61\160\151\56\155\x63\150\56\167\x65\151\x78\151\156\x2e\161\161\56\x63\x6f\155\x2f\x6d\x6d\160\x61\171\155\153\x74\x74\162\x61\156\x73\x66\x65\x72\x73\x2f\x70\162\x6f\155\x6f\x74\151\157\x6e\57\164\x72\x61\156\x73\x66\x65\x72\x73"; goto AESTu; Rfzmo: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto zj3Ly; OyKT2: $parameters["\x73\x69\x67\156"] = $this->getSign($parameters); goto xO9Mw; Q1JzG: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto jWf3L; PBM84: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto dSk5r; Wfo2c: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto oNDYy; p29DP: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto b3nUy; OhHo2: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto Plidd; C3Zsp: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto Wfo2c; b3nUy: set_time_limit(0); goto hNzWd; P_C1n: return $data; goto Kpbk8; pYEwT: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto OhHo2; NkJ6u: throw new WxPayException("\x63\165\x72\x6c\xe5\207\xba\xe9\224\231\357\274\214\351\x94\231\350\257\257\xe7\xa0\x81\72{$error}"); goto ZJFOT; uL0Uc: if ($data) { goto xNqPn; } goto x40cv; oNDYy: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto p29DP; hNzWd: $data = curl_exec($ch); goto uL0Uc; dSk5r: curl_setopt($ch, CURLOPT_URL, $url); goto pYEwT; ZJFOT: goto NMIN3; goto xHyB6; x40cv: $error = curl_errno($ch); goto DdQvx; xHyB6: xNqPn: goto e3R0M; e3R0M: curl_close($ch); goto P_C1n; FY14B: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto yQW3R; Plidd: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto FY14B; DdQvx: curl_close($ch); goto NkJ6u; yQW3R: curl_setopt($ch, CURLOPT_POST, TRUE); goto N9j0W; Kpbk8: NMIN3: goto n_9WL; N9j0W: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto C3Zsp; jWf3L: $ch = curl_init(); goto PBM84; n_9WL: } private function arrayToXml($arr) { goto uAO3l; ItIT5: return $xml; goto YgH6r; uAO3l: $xml = "\74\162\x6f\157\164\76"; goto Sblj7; dXH3Z: RK7mw: goto oLPxn; oLPxn: $xml .= "\74\x2f\162\157\157\x74\76"; goto ItIT5; Sblj7: foreach ($arr as $key => $val) { goto sItFk; HRcno: $xml .= "\74" . $key . "\76" . $val . "\74\57" . $key . "\x3e"; goto Rwgch; QwHAX: tlMJf: goto L0O1b; L0O1b: $xml .= "\74" . $key . "\76" . arrayToXml($val) . "\x3c\x2f" . $key . "\76"; goto TMnXa; sItFk: if (is_array($val)) { goto tlMJf; } goto HRcno; TMnXa: wZhGE: goto QJqVi; Rwgch: goto wZhGE; goto QwHAX; QJqVi: DCU0Z: goto AWXB_; AWXB_: } goto dXH3Z; YgH6r: } private function xmlToArray($xml) { goto TO1Pm; TO1Pm: libxml_disable_entity_loader(true); goto kXcJP; igNi2: $val = json_decode(json_encode($xmlstring), true); goto R49QN; R49QN: return $val; goto UBiTD; kXcJP: $xmlstring = simplexml_load_string($xml, "\123\151\155\160\x6c\x65\x58\x4d\114\105\x6c\145\x6d\145\x6e\164", LIBXML_NOCDATA); goto igNi2; UBiTD: } private function createNoncestr($length = 32) { goto NamSw; WIoem: if (!($i < $length)) { goto xKYCI; } goto sq14e; sq14e: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto nm4et; on2JS: $i++; goto Uci0R; i0xLy: iYOxB: goto WIoem; NamSw: $chars = "\x61\x62\143\144\x65\146\x67\x68\x69\152\153\x6c\x6d\x6e\x6f\160\161\162\x73\164\x75\x76\167\x78\x79\x7a\60\x31\62\63\x34\65\x36\x37\70\71"; goto DXfTn; Uci0R: goto iYOxB; goto ZgYz3; ZgYz3: xKYCI: goto BXtlN; DXfTn: $str = ''; goto poQcg; nm4et: BQS3T: goto on2JS; BXtlN: return $str; goto D0sJH; poQcg: $i = 0; goto i0xLy; D0sJH: } private function getSign($Obj) { goto ofnCE; u71ni: $String = md5($String); goto nKXOP; cneEY: $String = $String . "\46\153\145\171\75" . $this->key; goto u71ni; rr6Tm: TGsba: goto zeE9X; zeE9X: ksort($Parameters); goto nF3rW; EbKTn: return $result_; goto lWluA; ofnCE: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; ONltb: } goto rr6Tm; nKXOP: $result_ = strtoupper($String); goto EbKTn; nF3rW: $String = $this->formatBizQueryParaMap($Parameters, false); goto cneEY; lWluA: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto QBfuj; ppzbP: $reqPar = substr($buff, 0, strlen($buff) - 1); goto mxNUR; l0fSj: ksort($paraMap); goto U9efR; J5sdL: if (!(strlen($buff) > 0)) { goto iGO0l; } goto ppzbP; mxNUR: iGO0l: goto e63tm; z7GrS: fRhOv: goto glARF; U9efR: foreach ($paraMap as $k => $v) { goto ednIv; sNfH4: $buff .= $k . "\75" . $v . "\46"; goto XASmE; J5wd0: $v = urlencode($v); goto qjcNJ; XASmE: nutUZ: goto QcRI2; qjcNJ: cFC1S: goto sNfH4; ednIv: if (!$urlencode) { goto cFC1S; } goto J5wd0; QcRI2: } goto z7GrS; glARF: $reqPar; goto J5sdL; e63tm: return $reqPar; goto AvQoL; QBfuj: $buff = ''; goto l0fSj; AvQoL: } }