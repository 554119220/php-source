<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto JVTp0; aYfdp: $this->openid = $openid; goto BK9cX; BK9cX: $this->partner_trade_no = $partner_trade_no; goto jlmYP; WtRBP: $this->mchid = $mchid; goto XWNGj; hatvf: $this->apiclient_cert = $apiclient_cert; goto jykGv; RDDwD: $this->desc = $desc; goto mAmen; jlmYP: $this->re_user_name = $re_user_name; goto RDDwD; JVTp0: $this->mch_appid = $mch_appid; goto WtRBP; XWNGj: $this->key = $key; goto aYfdp; jykGv: $this->apiclient_key = $apiclient_key; goto Hzk0m; mAmen: $this->amount = $amount; goto hatvf; Hzk0m: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto aPGYF; aPGYF: $url = "\150\164\x74\x70\x73\x3a\57\x2f\141\160\x69\56\x6d\143\x68\x2e\x77\x65\x69\x78\x69\156\x2e\x71\x71\x2e\143\x6f\155\x2f\155\155\160\141\171\x6d\x6b\x74\x74\x72\141\156\x73\146\x65\x72\x73\57\x70\162\x6f\155\x6f\x74\x69\157\156\x2f\164\x72\141\156\163\x66\x65\x72\163"; goto R9Njp; UsRYx: return $return; goto s3KaQ; R9Njp: $parameters = array("\155\143\x68\x5f\x61\160\160\x69\144" => $this->mch_appid, "\155\143\x68\x69\x64" => $this->mchid, "\156\x6f\x6e\x63\145\137\163\164\x72" => $this->createNoncestr(), "\160\141\x72\x74\x6e\x65\x72\x5f\x74\162\141\x64\145\137\156\157" => $this->partner_trade_no, "\157\160\x65\x6e\x69\144" => $this->openid, "\x63\150\145\x63\153\x5f\x6e\x61\x6d\145" => "\x4e\117\x5f\103\x48\105\x43\x4b", "\x72\x65\137\165\x73\x65\x72\x5f\x6e\141\155\145" => $this->re_user_name, "\141\155\x6f\x75\x6e\164" => $this->amount, "\x64\x65\x73\x63" => $this->desc, "\x73\x70\x62\x69\154\154\137\x63\162\x65\x61\x74\145\x5f\x69\160" => "\61\62\60\x2e\x37\71\56\x31\x35\x32\x2e\x31\x30\x35"); goto UB_wk; NwYX6: $xmlData = $this->arrayToXml($parameters); goto tZvQp; tZvQp: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto UsRYx; UB_wk: $parameters["\x73\151\x67\x6e"] = $this->getSign($parameters); goto NwYX6; s3KaQ: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto BaRsn; E0Omp: XukNY: goto ALZPS; V23v1: throw new WxPayException("\143\165\x72\154\xe5\207\272\xe9\x94\x99\357\274\214\xe9\224\231\xe8\xaf\xaf\347\240\x81\x3a{$error}"); goto dzSOx; BaRsn: $ch = curl_init(); goto qOYs6; pR9yc: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto N8w2v; sc3ax: PEOAl: goto n0qzU; L0bE1: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto UMv9o; QagQS: return $data; goto E0Omp; n0qzU: curl_close($ch); goto QagQS; FRSzP: curl_close($ch); goto V23v1; FS5iI: if ($data) { goto PEOAl; } goto Dfg1G; qOYs6: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto UomcB; xxzx6: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto PVH7U; Dfg1G: $error = curl_errno($ch); goto FRSzP; dzSOx: goto XukNY; goto sc3ax; UMv9o: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto kA5Ek; kA5Ek: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto Avfs7; N8w2v: set_time_limit(0); goto j69TG; Avfs7: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto bkyM1; bkyM1: curl_setopt($ch, CURLOPT_POST, TRUE); goto xxzx6; JmWxV: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto kjIdh; UomcB: curl_setopt($ch, CURLOPT_URL, $url); goto L0bE1; j69TG: $data = curl_exec($ch); goto FS5iI; kjIdh: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto pR9yc; PVH7U: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto JmWxV; ALZPS: } private function arrayToXml($arr) { goto kviBD; gO8tC: return $xml; goto H3Jc3; kviBD: $xml = "\74\162\157\157\x74\x3e"; goto AK3V1; AK3V1: foreach ($arr as $key => $val) { goto l1KNW; xQHaw: ekuej: goto IuLsV; l1KNW: if (is_array($val)) { goto l2oUY; } goto e1cc5; zQYoS: goto ekuej; goto yik0p; IuLsV: SW8It: goto yeNV9; yik0p: l2oUY: goto uEkzJ; uEkzJ: $xml .= "\74" . $key . "\76" . arrayToXml($val) . "\74\57" . $key . "\76"; goto xQHaw; e1cc5: $xml .= "\74" . $key . "\76" . $val . "\x3c\x2f" . $key . "\76"; goto zQYoS; yeNV9: } goto i_mp0; i_mp0: CejmE: goto ST0aJ; ST0aJ: $xml .= "\x3c\57\x72\x6f\x6f\164\x3e"; goto gO8tC; H3Jc3: } private function xmlToArray($xml) { goto gcREQ; BAui7: $xmlstring = simplexml_load_string($xml, "\123\x69\x6d\160\154\x65\130\x4d\114\x45\x6c\x65\x6d\145\x6e\x74", LIBXML_NOCDATA); goto IZn_P; IZn_P: $val = json_decode(json_encode($xmlstring), true); goto Mug3L; gcREQ: libxml_disable_entity_loader(true); goto BAui7; Mug3L: return $val; goto hDdzS; hDdzS: } private function createNoncestr($length = 32) { goto MY5Mu; OD0XS: $i++; goto H7ba6; E6XHA: return $str; goto gZT5V; YaI2R: jfI5t: goto OD0XS; weohX: hhmzn: goto E6XHA; Txht2: fPF1W: goto qgCzO; MY5Mu: $chars = "\x61\142\143\144\x65\x66\147\x68\x69\x6a\153\154\x6d\156\157\160\161\x72\163\164\x75\166\x77\x78\171\172\x30\61\62\x33\64\65\66\x37\70\71"; goto Oz1Hc; H7ba6: goto fPF1W; goto weohX; ug13u: $i = 0; goto Txht2; qgCzO: if (!($i < $length)) { goto hhmzn; } goto F2neG; Oz1Hc: $str = ''; goto ug13u; F2neG: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto YaI2R; gZT5V: } private function getSign($Obj) { goto D1201; WXmTg: W5yQt: goto eUbu6; F7YDY: $String = md5($String); goto J8zb7; sk0yb: $String = $this->formatBizQueryParaMap($Parameters, false); goto sGV2B; sGV2B: $String = $String . "\x26\x6b\145\x79\75" . $this->key; goto F7YDY; eUbu6: ksort($Parameters); goto sk0yb; D1201: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; VYoWW: } goto WXmTg; J8zb7: $result_ = strtoupper($String); goto TBjbe; TBjbe: return $result_; goto BlhiF; BlhiF: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto oZiOE; Ewotb: ksort($paraMap); goto Z_E0c; RcTQg: KJCvu: goto Pxwzu; oZiOE: $buff = ''; goto Ewotb; lp6xt: if (!(strlen($buff) > 0)) { goto KJCvu; } goto fM8RS; Pxwzu: return $reqPar; goto Hoc8A; Z_E0c: foreach ($paraMap as $k => $v) { goto KcY2e; GWoJ5: Dzs8k: goto lEIU0; KcY2e: if (!$urlencode) { goto Dzs8k; } goto UKnv2; oTwPh: oqQgb: goto aXGZf; UKnv2: $v = urlencode($v); goto GWoJ5; lEIU0: $buff .= $k . "\x3d" . $v . "\x26"; goto oTwPh; aXGZf: } goto TF1vD; uOilY: $reqPar; goto lp6xt; TF1vD: ga74b: goto uOilY; fM8RS: $reqPar = substr($buff, 0, strlen($buff) - 1); goto RcTQg; Hoc8A: } }