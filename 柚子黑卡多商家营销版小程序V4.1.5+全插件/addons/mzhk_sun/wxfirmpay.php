<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto gtfwT; QAOHo: $this->apiclient_cert = $apiclient_cert; goto vKSBA; YDltu: $this->amount = $amount; goto QAOHo; KyP4D: $this->key = $key; goto FVHnT; vKSBA: $this->apiclient_key = $apiclient_key; goto mrmz6; yp1e0: $this->re_user_name = $re_user_name; goto e7Tbm; FVHnT: $this->openid = $openid; goto RRnas; RRnas: $this->partner_trade_no = $partner_trade_no; goto yp1e0; gtfwT: $this->mch_appid = $mch_appid; goto dGFVk; dGFVk: $this->mchid = $mchid; goto KyP4D; e7Tbm: $this->desc = $desc; goto YDltu; mrmz6: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto B0K3a; S8IIV: $parameters["\x73\x69\147\156"] = $this->getSign($parameters); goto FScT6; IgnRc: $parameters = array("\155\143\150\x5f\x61\160\x70\x69\x64" => $this->mch_appid, "\155\x63\x68\151\144" => $this->mchid, "\156\x6f\156\143\145\x5f\x73\164\x72" => $this->createNoncestr(), "\x70\x61\162\x74\x6e\145\x72\137\164\162\141\x64\145\137\156\157" => $this->partner_trade_no, "\x6f\x70\x65\156\151\x64" => $this->openid, "\x63\x68\145\143\x6b\137\156\x61\155\145" => "\116\117\137\x43\x48\105\103\113", "\162\145\x5f\165\163\x65\162\137\x6e\141\x6d\145" => $this->re_user_name, "\x61\155\157\165\156\164" => $this->amount, "\x64\145\x73\x63" => $this->desc, "\163\x70\x62\x69\154\154\137\x63\162\x65\x61\x74\145\x5f\x69\x70" => "\x31\x32\x30\x2e\67\x39\56\x31\65\x32\x2e\x31\60\x35"); goto S8IIV; B0K3a: $url = "\x68\x74\164\160\x73\x3a\57\x2f\141\x70\151\x2e\x6d\143\150\x2e\167\145\x69\x78\151\x6e\56\161\161\x2e\x63\x6f\155\x2f\155\x6d\x70\141\x79\155\x6b\164\164\162\x61\x6e\x73\x66\145\162\163\57\x70\162\157\155\x6f\164\x69\x6f\x6e\57\164\x72\141\156\x73\x66\145\x72\163"; goto IgnRc; bvisK: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto LZpuj; FScT6: $xmlData = $this->arrayToXml($parameters); goto bvisK; LZpuj: return $return; goto YUOv4; YUOv4: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto CsqY0; qttGY: curl_close($ch); goto DBitO; qWqui: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto s12CY; TQlL2: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto MtD1z; DBitO: return $data; goto UV1RJ; pRmm0: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto MTvO8; s12CY: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto kakJc; MtD1z: set_time_limit(0); goto ABfQU; rJlXB: throw new WxPayException("\143\165\x72\x6c\345\x87\xba\351\224\x99\xef\xbc\x8c\351\224\231\350\xaf\257\xe7\240\x81\72{$error}"); goto Ka8DB; eK5X1: $error = curl_errno($ch); goto dfFGA; dfFGA: curl_close($ch); goto rJlXB; UV1RJ: RAwAU: goto nGOyo; clj28: curl_setopt($ch, CURLOPT_URL, $url); goto pRmm0; fbjDA: aP5s6: goto qttGY; Ka8DB: goto RAwAU; goto fbjDA; ABfQU: $data = curl_exec($ch); goto geLiz; Gu9mu: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto clj28; CsqY0: $ch = curl_init(); goto Gu9mu; kakJc: curl_setopt($ch, CURLOPT_POST, TRUE); goto B3bwV; apbKi: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto FH6xe; v0uCb: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto TQlL2; MTvO8: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto qWqui; FH6xe: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto v0uCb; B3bwV: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto apbKi; geLiz: if ($data) { goto aP5s6; } goto eK5X1; nGOyo: } private function arrayToXml($arr) { goto dIElv; CPQeX: return $xml; goto bkfiF; IXJ3s: W08sC: goto ONkOM; HKl_K: foreach ($arr as $key => $val) { goto fqFkA; EG1Mp: $xml .= "\74" . $key . "\76" . $val . "\74\x2f" . $key . "\x3e"; goto wE4iI; m15Pr: MzWey: goto P6r5Q; Qk7Vq: tRNMc: goto FuGx9; wE4iI: goto cd6HC; goto Qk7Vq; fqFkA: if (is_array($val)) { goto tRNMc; } goto EG1Mp; BhYEj: cd6HC: goto m15Pr; FuGx9: $xml .= "\x3c" . $key . "\x3e" . arrayToXml($val) . "\74\57" . $key . "\x3e"; goto BhYEj; P6r5Q: } goto IXJ3s; dIElv: $xml = "\74\162\157\157\164\x3e"; goto HKl_K; ONkOM: $xml .= "\x3c\57\x72\157\x6f\x74\x3e"; goto CPQeX; bkfiF: } private function xmlToArray($xml) { goto PpiVc; qrNcD: return $val; goto nhDHI; FkSZG: $val = json_decode(json_encode($xmlstring), true); goto qrNcD; WOwqI: $xmlstring = simplexml_load_string($xml, "\x53\x69\x6d\x70\154\145\x58\x4d\114\105\154\145\155\145\156\164", LIBXML_NOCDATA); goto FkSZG; PpiVc: libxml_disable_entity_loader(true); goto WOwqI; nhDHI: } private function createNoncestr($length = 32) { goto Hx4od; YZVc8: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto jgmHU; IsqKt: return $str; goto bgcqg; S3bnt: goto V0tzq; goto AeMY1; JglMC: V0tzq: goto cB1vz; Hx4od: $chars = "\141\x62\143\x64\x65\x66\147\150\151\x6a\153\154\x6d\x6e\157\x70\x71\162\x73\164\165\166\x77\170\x79\x7a\x30\x31\62\x33\64\65\66\67\x38\71"; goto H3DMW; jgmHU: OSofF: goto p1zZY; H3DMW: $str = ''; goto eNvFE; p1zZY: $i++; goto S3bnt; AeMY1: eww7D: goto IsqKt; eNvFE: $i = 0; goto JglMC; cB1vz: if (!($i < $length)) { goto eww7D; } goto YZVc8; bgcqg: } private function getSign($Obj) { goto nUMfw; poa9y: $result_ = strtoupper($String); goto EjMOi; EjMOi: return $result_; goto Q8yfO; vdfHy: ksort($Parameters); goto C11Ud; G_Nlb: $String = $String . "\46\153\145\171\75" . $this->key; goto TKjSY; v6sFb: tNsDT: goto vdfHy; TKjSY: $String = md5($String); goto poa9y; nUMfw: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; muVP2: } goto v6sFb; C11Ud: $String = $this->formatBizQueryParaMap($Parameters, false); goto G_Nlb; Q8yfO: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto tisH3; IGxnF: DzdYX: goto GTR5M; is9iH: ksort($paraMap); goto sQe3t; NzKqc: $reqPar = substr($buff, 0, strlen($buff) - 1); goto Xp8xV; tisH3: $buff = ''; goto is9iH; t09xT: return $reqPar; goto isxJN; GTR5M: $reqPar; goto KpU3d; KpU3d: if (!(strlen($buff) > 0)) { goto vPUek; } goto NzKqc; sQe3t: foreach ($paraMap as $k => $v) { goto lwMLW; cDpl6: dRfVA: goto R4qFr; ukdaH: f9g1U: goto ywcjs; lwMLW: if (!$urlencode) { goto dRfVA; } goto DJClE; R4qFr: $buff .= $k . "\75" . $v . "\46"; goto ukdaH; DJClE: $v = urlencode($v); goto cDpl6; ywcjs: } goto IGxnF; Xp8xV: vPUek: goto t09xT; isxJN: } }