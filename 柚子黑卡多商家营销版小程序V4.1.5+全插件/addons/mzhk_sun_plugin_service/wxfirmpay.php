<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto EIeAg; NBXQ9: $this->key = $key; goto NPP63; nRMs6: $this->re_user_name = $re_user_name; goto ThjbV; M0KzJ: $this->apiclient_cert = $apiclient_cert; goto J6XGd; EIeAg: $this->mch_appid = $mch_appid; goto LUU0n; ThjbV: $this->desc = $desc; goto CHUFO; CHUFO: $this->amount = $amount; goto M0KzJ; J6XGd: $this->apiclient_key = $apiclient_key; goto zeFcl; LUU0n: $this->mchid = $mchid; goto NBXQ9; DWbxy: $this->partner_trade_no = $partner_trade_no; goto nRMs6; NPP63: $this->openid = $openid; goto DWbxy; zeFcl: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto AbXdX; AT33P: $xmlData = $this->arrayToXml($parameters); goto usmyk; lpqE_: return $return; goto t56nL; UKmvA: $parameters["\163\x69\147\156"] = $this->getSign($parameters); goto AT33P; nO5Yv: $parameters = array("\x6d\143\x68\x5f\141\160\160\x69\x64" => $this->mch_appid, "\x6d\143\150\151\144" => $this->mchid, "\156\157\x6e\143\145\137\163\x74\x72" => $this->createNoncestr(), "\160\141\x72\x74\156\x65\x72\x5f\x74\162\141\x64\x65\137\156\157" => $this->partner_trade_no, "\x6f\160\145\x6e\151\x64" => $this->openid, "\x63\x68\145\x63\153\137\156\x61\x6d\x65" => "\116\117\x5f\x43\110\105\103\113", "\x72\145\137\165\163\145\x72\137\x6e\x61\155\145" => $this->re_user_name, "\x61\x6d\x6f\165\x6e\x74" => $this->amount, "\x64\x65\x73\143" => $this->desc, "\x73\160\x62\x69\x6c\154\137\143\x72\x65\x61\164\x65\x5f\151\x70" => "\x31\62\60\x2e\x37\71\56\x31\x35\x32\56\x31\x30\x35"); goto UKmvA; usmyk: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto lpqE_; AbXdX: $url = "\x68\x74\164\x70\x73\72\x2f\x2f\141\160\151\x2e\x6d\143\x68\56\167\145\x69\170\x69\x6e\x2e\x71\161\56\143\157\x6d\x2f\x6d\155\160\x61\171\x6d\x6b\164\x74\162\141\x6e\163\x66\145\x72\x73\x2f\x70\162\157\x6d\x6f\164\151\157\x6e\x2f\164\162\141\x6e\x73\x66\x65\x72\x73"; goto nO5Yv; t56nL: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto zEFo3; DJyic: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto E3qSi; eZtR4: $data = curl_exec($ch); goto q4EBP; kTCXN: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto HCPNj; Zy_hb: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto w1bYx; hLWXc: curl_setopt($ch, CURLOPT_POST, TRUE); goto z4RGZ; E3qSi: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto mDwGI; z4RGZ: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto rqBKF; zEFo3: $ch = curl_init(); goto Zy_hb; JjIFn: goto qSMH3; goto Kc0rX; Kc0rX: PnjnN: goto eZDn5; mDwGI: set_time_limit(0); goto eZtR4; q4EBP: if ($data) { goto PnjnN; } goto q1hM5; q1hM5: $error = curl_errno($ch); goto H6NtQ; IyINy: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto DJyic; CpPB0: throw new WxPayException("\x63\x75\162\154\345\207\xba\xe9\x94\x99\357\274\x8c\351\x94\231\350\xaf\257\347\240\201\72{$error}"); goto JjIFn; zxwzY: qSMH3: goto DsEDG; HCPNj: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto ATF28; eZDn5: curl_close($ch); goto km5Zt; ATF28: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto hLWXc; w1bYx: curl_setopt($ch, CURLOPT_URL, $url); goto FVnMo; FVnMo: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto kTCXN; rqBKF: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto IyINy; H6NtQ: curl_close($ch); goto CpPB0; km5Zt: return $data; goto zxwzY; DsEDG: } private function arrayToXml($arr) { goto AhXwx; WPZJv: $xml .= "\74\57\x72\157\x6f\164\76"; goto EuY2Z; JKPYF: foreach ($arr as $key => $val) { goto Kd_KZ; f9V3M: $xml .= "\74" . $key . "\x3e" . $val . "\x3c\x2f" . $key . "\76"; goto KFE2j; SLJUB: trw_b: goto gUT8H; oBCp3: ikhBM: goto PYRiK; KFE2j: goto BCNpl; goto oBCp3; A64ap: BCNpl: goto SLJUB; Kd_KZ: if (is_array($val)) { goto ikhBM; } goto f9V3M; PYRiK: $xml .= "\74" . $key . "\x3e" . arrayToXml($val) . "\x3c\57" . $key . "\x3e"; goto A64ap; gUT8H: } goto dl9fu; dl9fu: o0_Ch: goto WPZJv; EuY2Z: return $xml; goto cT_eb; AhXwx: $xml = "\x3c\162\x6f\x6f\x74\x3e"; goto JKPYF; cT_eb: } private function xmlToArray($xml) { goto sbfm2; sdqHK: $xmlstring = simplexml_load_string($xml, "\123\151\x6d\160\154\145\x58\x4d\114\105\x6c\145\x6d\145\156\164", LIBXML_NOCDATA); goto SjT8b; EXeZA: return $val; goto TDpmR; SjT8b: $val = json_decode(json_encode($xmlstring), true); goto EXeZA; sbfm2: libxml_disable_entity_loader(true); goto sdqHK; TDpmR: } private function createNoncestr($length = 32) { goto VkXbU; H1rI_: goto Jt78p; goto NjhSO; B0str: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto tMi4K; NjhSO: Edutt: goto FRacN; FRacN: return $str; goto VibhY; V4PUR: if (!($i < $length)) { goto Edutt; } goto B0str; VkXbU: $chars = "\x61\142\143\x64\145\146\147\x68\151\x6a\x6b\154\x6d\156\x6f\160\x71\x72\x73\164\165\166\167\x78\171\172\x30\61\62\x33\64\x35\66\67\70\71"; goto m8yKS; msWLo: $i++; goto H1rI_; tMi4K: EnxMK: goto msWLo; Iy2xf: Jt78p: goto V4PUR; m8yKS: $str = ''; goto joOoQ; joOoQ: $i = 0; goto Iy2xf; VibhY: } private function getSign($Obj) { goto QQKk5; iNRNM: $String = $String . "\46\153\x65\x79\75" . $this->key; goto pDHKD; Yowo7: $String = $this->formatBizQueryParaMap($Parameters, false); goto iNRNM; eotRe: return $result_; goto Wsl1O; UfLzD: $result_ = strtoupper($String); goto eotRe; QQKk5: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; qjh_S: } goto jZ02p; pDHKD: $String = md5($String); goto UfLzD; jZ02p: IKVJJ: goto LJP4u; LJP4u: ksort($Parameters); goto Yowo7; Wsl1O: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto gB6CW; B1Noo: $reqPar = substr($buff, 0, strlen($buff) - 1); goto TOVj9; TOVj9: LFaob: goto GhgIU; GhgIU: return $reqPar; goto gfTL1; aibzk: if (!(strlen($buff) > 0)) { goto LFaob; } goto B1Noo; hmDKw: shEdM: goto y33rM; gB6CW: $buff = ''; goto uSFVi; uSFVi: ksort($paraMap); goto SFCa3; y33rM: $reqPar; goto aibzk; SFCa3: foreach ($paraMap as $k => $v) { goto iZz3O; BD95_: AGWEW: goto hM2e7; z1Qdc: $v = urlencode($v); goto BD95_; hM2e7: $buff .= $k . "\x3d" . $v . "\x26"; goto bD0yt; iZz3O: if (!$urlencode) { goto AGWEW; } goto z1Qdc; bD0yt: q5bnh: goto Wv66y; Wv66y: } goto hmDKw; gfTL1: } }