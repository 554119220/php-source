<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto L2MAC; Rlfzj: $this->mchid = $mchid; goto bvKn6; xDSlQ: $this->re_user_name = $re_user_name; goto WNzFV; nA080: $this->openid = $openid; goto bYxxa; v8OKq: $this->amount = $amount; goto gy9VR; bYxxa: $this->partner_trade_no = $partner_trade_no; goto xDSlQ; gy9VR: $this->apiclient_cert = $apiclient_cert; goto U4bb3; WNzFV: $this->desc = $desc; goto v8OKq; U4bb3: $this->apiclient_key = $apiclient_key; goto bb_IU; bvKn6: $this->key = $key; goto nA080; L2MAC: $this->mch_appid = $mch_appid; goto Rlfzj; bb_IU: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto RZfyH; caPhy: $xmlData = $this->arrayToXml($parameters); goto xu16g; yD8m5: return $return; goto PEVMo; lvI_U: $parameters["\163\151\x67\x6e"] = $this->getSign($parameters); goto caPhy; nE8DC: $parameters = array("\x6d\x63\x68\x5f\141\160\x70\151\144" => $this->mch_appid, "\155\x63\x68\151\144" => $this->mchid, "\156\157\156\x63\145\x5f\x73\164\162" => $this->createNoncestr(), "\160\x61\162\x74\156\145\162\137\x74\x72\141\x64\x65\137\156\x6f" => $this->partner_trade_no, "\x6f\160\x65\156\x69\144" => $this->openid, "\x63\150\x65\143\153\137\x6e\141\x6d\x65" => "\116\x4f\137\x43\x48\x45\x43\x4b", "\162\x65\x5f\x75\163\x65\162\x5f\156\x61\155\x65" => $this->re_user_name, "\x61\155\157\x75\156\x74" => $this->amount, "\144\145\163\143" => $this->desc, "\163\x70\x62\151\x6c\154\137\143\162\145\x61\x74\145\137\151\x70" => "\61\62\x30\x2e\x37\x39\56\x31\65\x32\56\61\x30\x35"); goto lvI_U; xu16g: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto yD8m5; RZfyH: $url = "\150\x74\x74\x70\163\72\x2f\x2f\x61\160\x69\x2e\x6d\143\150\x2e\x77\x65\x69\x78\x69\x6e\x2e\x71\161\x2e\x63\x6f\x6d\57\155\x6d\160\141\x79\x6d\x6b\164\164\162\x61\156\163\146\x65\x72\163\x2f\160\x72\x6f\x6d\x6f\x74\x69\x6f\156\57\164\x72\141\156\163\146\145\162\163"; goto nE8DC; PEVMo: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto CoG95; iGq0A: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto VH3qS; KQfWb: $data = curl_exec($ch); goto yIUM3; Ym2ft: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto oyFJo; fS10p: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto QWche; Kbea7: return $data; goto yNUUl; yIUM3: if ($data) { goto NUj1K; } goto DtnJB; qbutG: curl_setopt($ch, CURLOPT_POST, TRUE); goto fS10p; QWche: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto iGq0A; LLdfo: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto yO1OD; oyFJo: curl_setopt($ch, CURLOPT_URL, $url); goto F0RSD; CoG95: $ch = curl_init(); goto Ym2ft; F0RSD: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto NmA6q; kC6uJ: curl_close($ch); goto Kbea7; yO1OD: set_time_limit(0); goto KQfWb; iY9Cw: goto wFf8S; goto f_Kzo; tq7dX: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto isps8; f_Kzo: NUj1K: goto kC6uJ; VH3qS: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto LLdfo; mXjez: throw new WxPayException("\x63\x75\162\154\345\x87\272\xe9\x94\x99\xef\274\x8c\351\224\x99\xe8\257\xaf\xe7\xa0\201\72{$error}"); goto iY9Cw; DtnJB: $error = curl_errno($ch); goto z_QaF; z_QaF: curl_close($ch); goto mXjez; yNUUl: wFf8S: goto Drhw2; NmA6q: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto tq7dX; isps8: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto qbutG; Drhw2: } private function arrayToXml($arr) { goto ixtqm; OocnC: mJ889: goto MURcQ; ixtqm: $xml = "\74\162\x6f\157\x74\x3e"; goto Gc3LU; Gc3LU: foreach ($arr as $key => $val) { goto DtZhM; H7Mga: QqBb8: goto QXRY7; C2eEz: L_aGI: goto H7Mga; z082A: $xml .= "\74" . $key . "\x3e" . arrayToXml($val) . "\74\x2f" . $key . "\x3e"; goto C2eEz; Wv8Qo: bh6jg: goto z082A; q0w3n: $xml .= "\74" . $key . "\x3e" . $val . "\x3c\57" . $key . "\76"; goto uXkMX; DtZhM: if (is_array($val)) { goto bh6jg; } goto q0w3n; uXkMX: goto L_aGI; goto Wv8Qo; QXRY7: } goto OocnC; MURcQ: $xml .= "\x3c\x2f\162\157\157\164\76"; goto LazkK; LazkK: return $xml; goto XPTYl; XPTYl: } private function xmlToArray($xml) { goto do83x; LQXPc: $xmlstring = simplexml_load_string($xml, "\x53\x69\155\x70\154\x65\130\x4d\x4c\x45\154\145\x6d\x65\156\164", LIBXML_NOCDATA); goto V8uCZ; b61dF: return $val; goto B4P3o; do83x: libxml_disable_entity_loader(true); goto LQXPc; V8uCZ: $val = json_decode(json_encode($xmlstring), true); goto b61dF; B4P3o: } private function createNoncestr($length = 32) { goto EtXNe; gN7BM: $i = 0; goto RhNjl; T__Ev: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto bB03K; EtXNe: $chars = "\x61\142\x63\x64\x65\x66\147\x68\x69\x6a\x6b\x6c\155\x6e\x6f\160\161\x72\163\x74\165\x76\167\x78\x79\172\x30\x31\62\63\x34\65\x36\x37\70\x39"; goto j3TFl; A0Af1: goto xg1fK; goto lQ_Tt; rmEGq: $i++; goto A0Af1; bB03K: MABiC: goto rmEGq; j3TFl: $str = ''; goto gN7BM; RhNjl: xg1fK: goto O4zNo; O4zNo: if (!($i < $length)) { goto I7Cd3; } goto T__Ev; Rtmom: return $str; goto zo2o9; lQ_Tt: I7Cd3: goto Rtmom; zo2o9: } private function getSign($Obj) { goto WWHqx; J1IEN: $String = md5($String); goto eGLw4; ZqD9O: NmvXb: goto b0lUr; b0lUr: ksort($Parameters); goto digid; ax26V: return $result_; goto RTgph; z53Mq: $String = $String . "\46\153\145\x79\x3d" . $this->key; goto J1IEN; WWHqx: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; fba06: } goto ZqD9O; digid: $String = $this->formatBizQueryParaMap($Parameters, false); goto z53Mq; eGLw4: $result_ = strtoupper($String); goto ax26V; RTgph: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto a7Vyo; DsXfS: foreach ($paraMap as $k => $v) { goto G4W9_; kyoBk: $buff .= $k . "\75" . $v . "\x26"; goto yscuy; G4W9_: if (!$urlencode) { goto ZXsR9; } goto pj4YB; yscuy: CPPhq: goto OCcxJ; VFXC2: ZXsR9: goto kyoBk; pj4YB: $v = urlencode($v); goto VFXC2; OCcxJ: } goto vuVMT; ISu56: if (!(strlen($buff) > 0)) { goto b5UHM; } goto K_HxO; S7gkG: $reqPar; goto ISu56; eroyc: return $reqPar; goto OTKbn; doZ6P: b5UHM: goto eroyc; qS_T5: ksort($paraMap); goto DsXfS; K_HxO: $reqPar = substr($buff, 0, strlen($buff) - 1); goto doZ6P; a7Vyo: $buff = ''; goto qS_T5; vuVMT: e48Ot: goto S7gkG; OTKbn: } }