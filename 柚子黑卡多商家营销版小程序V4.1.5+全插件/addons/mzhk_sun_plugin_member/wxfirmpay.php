<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto Opq0i; Rg2fN: $this->apiclient_cert = $apiclient_cert; goto NPP6q; R9GtE: $this->desc = $desc; goto NFcFv; NPP6q: $this->apiclient_key = $apiclient_key; goto kobut; vCB_d: $this->partner_trade_no = $partner_trade_no; goto HByy4; W2rUR: $this->mchid = $mchid; goto ibUvt; tdYhy: $this->openid = $openid; goto vCB_d; ibUvt: $this->key = $key; goto tdYhy; Opq0i: $this->mch_appid = $mch_appid; goto W2rUR; NFcFv: $this->amount = $amount; goto Rg2fN; HByy4: $this->re_user_name = $re_user_name; goto R9GtE; kobut: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto srGs2; h6UPL: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto TIYFG; eOap9: $parameters = array("\155\143\150\x5f\141\160\x70\x69\144" => $this->mch_appid, "\155\x63\x68\x69\144" => $this->mchid, "\156\157\x6e\x63\145\137\x73\x74\162" => $this->createNoncestr(), "\160\x61\x72\x74\x6e\x65\x72\x5f\164\x72\x61\x64\145\x5f\156\157" => $this->partner_trade_no, "\157\x70\x65\x6e\151\x64" => $this->openid, "\x63\150\x65\x63\153\x5f\156\141\155\x65" => "\116\117\137\x43\110\x45\103\x4b", "\162\145\x5f\165\x73\145\162\x5f\x6e\141\155\x65" => $this->re_user_name, "\x61\155\x6f\x75\x6e\164" => $this->amount, "\x64\145\163\143" => $this->desc, "\163\x70\x62\x69\154\154\137\x63\x72\x65\x61\164\145\137\151\160" => "\61\x32\60\x2e\x37\71\56\61\x35\62\x2e\x31\x30\65"); goto At9j5; TIYFG: return $return; goto obYk5; At9j5: $parameters["\x73\151\147\156"] = $this->getSign($parameters); goto onils; onils: $xmlData = $this->arrayToXml($parameters); goto h6UPL; srGs2: $url = "\x68\164\x74\x70\163\72\x2f\57\141\x70\x69\x2e\155\143\x68\56\x77\x65\x69\x78\x69\x6e\x2e\161\x71\56\x63\x6f\x6d\57\x6d\155\160\141\171\155\x6b\x74\x74\162\x61\156\163\x66\x65\162\x73\57\x70\162\157\155\x6f\x74\x69\157\x6e\57\164\x72\x61\156\x73\146\x65\x72\163"; goto eOap9; obYk5: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto r5Wf3; E3c7G: return $data; goto Op3AR; wxW5O: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto y_iJa; A0n_x: curl_setopt($ch, CURLOPT_URL, $url); goto t3BXV; xXPn1: throw new WxPayException("\x63\x75\x72\x6c\xe5\x87\xba\xe9\224\231\357\274\214\xe9\x94\231\350\xaf\xaf\xe7\xa0\201\x3a{$error}"); goto SZhNM; Op3AR: DgS7d: goto myLMk; Yzjw9: curl_close($ch); goto xXPn1; y_iJa: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto r6YlY; O_tTv: if ($data) { goto p6R6E; } goto skd5N; unBed: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto tYbwC; SZhNM: goto DgS7d; goto XkSKZ; fOX7N: $data = curl_exec($ch); goto O_tTv; r5Wf3: $ch = curl_init(); goto uA0iI; skd5N: $error = curl_errno($ch); goto Yzjw9; r6YlY: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto Nqq7s; tYbwC: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto lMPb0; t3BXV: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto wxW5O; bj0L4: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto unBed; lMPb0: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto RY8MJ; RY8MJ: set_time_limit(0); goto fOX7N; XkSKZ: p6R6E: goto KVc0W; KVc0W: curl_close($ch); goto E3c7G; uA0iI: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto A0n_x; Oe3qE: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto bj0L4; Nqq7s: curl_setopt($ch, CURLOPT_POST, TRUE); goto Oe3qE; myLMk: } private function arrayToXml($arr) { goto ipXBv; ipXBv: $xml = "\x3c\162\x6f\x6f\164\x3e"; goto JWAMi; BvX54: return $xml; goto BgNaU; roCTe: $xml .= "\x3c\x2f\x72\157\x6f\164\x3e"; goto BvX54; JWAMi: foreach ($arr as $key => $val) { goto FggZW; Xo3iQ: vsxxl: goto qSjlJ; vF22o: $xml .= "\74" . $key . "\76" . $val . "\x3c\x2f" . $key . "\x3e"; goto k2f_a; FggZW: if (is_array($val)) { goto vsxxl; } goto vF22o; k2f_a: goto xvFnV; goto Xo3iQ; JR4fE: xvFnV: goto YavDn; YavDn: nu0pA: goto tTvQP; qSjlJ: $xml .= "\74" . $key . "\76" . arrayToXml($val) . "\x3c\x2f" . $key . "\76"; goto JR4fE; tTvQP: } goto EMGr3; EMGr3: fZzU_: goto roCTe; BgNaU: } private function xmlToArray($xml) { goto uvFhB; uvFhB: libxml_disable_entity_loader(true); goto uO3zT; uO3zT: $xmlstring = simplexml_load_string($xml, "\123\x69\x6d\x70\x6c\x65\x58\x4d\114\x45\154\145\x6d\145\156\164", LIBXML_NOCDATA); goto oU5b5; oU5b5: $val = json_decode(json_encode($xmlstring), true); goto h9GW4; h9GW4: return $val; goto O1nP0; O1nP0: } private function createNoncestr($length = 32) { goto x4v1Y; ACraM: $i = 0; goto DsWln; nhBS2: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto kzWTz; fjhEs: if (!($i < $length)) { goto iARye; } goto nhBS2; DfJHV: $str = ''; goto ACraM; qEDfB: iARye: goto j_Z1O; kzWTz: ZgnLe: goto AnH2j; enPYK: goto kpr1D; goto qEDfB; x4v1Y: $chars = "\141\x62\x63\144\x65\x66\147\x68\x69\x6a\153\x6c\x6d\x6e\x6f\160\x71\x72\x73\x74\165\166\167\170\171\172\x30\x31\62\x33\x34\x35\66\x37\70\x39"; goto DfJHV; DsWln: kpr1D: goto fjhEs; AnH2j: $i++; goto enPYK; j_Z1O: return $str; goto d3V0I; d3V0I: } private function getSign($Obj) { goto l21hE; SNygO: return $result_; goto ORcHZ; nvt1V: $String = md5($String); goto Ii1xo; Ii1xo: $result_ = strtoupper($String); goto SNygO; l21hE: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; qMSiR: } goto rNALY; ibYRX: ksort($Parameters); goto nm0of; rNALY: et3gk: goto ibYRX; yN1Gu: $String = $String . "\46\x6b\x65\x79\x3d" . $this->key; goto nvt1V; nm0of: $String = $this->formatBizQueryParaMap($Parameters, false); goto yN1Gu; ORcHZ: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto e75aL; tUX3W: $reqPar; goto sk8Va; G2OY_: return $reqPar; goto xRacU; b3YXs: $reqPar = substr($buff, 0, strlen($buff) - 1); goto OLo1B; OLo1B: xoFWN: goto G2OY_; sk8Va: if (!(strlen($buff) > 0)) { goto xoFWN; } goto b3YXs; ZSQap: foreach ($paraMap as $k => $v) { goto oGdSc; QYFim: $v = urlencode($v); goto PkZCh; XH8Cs: Tt569: goto Q8PXi; PkZCh: n1X8Z: goto UORtx; UORtx: $buff .= $k . "\75" . $v . "\46"; goto XH8Cs; oGdSc: if (!$urlencode) { goto n1X8Z; } goto QYFim; Q8PXi: } goto bpnBU; bpnBU: r5VfM: goto tUX3W; x6j64: ksort($paraMap); goto ZSQap; e75aL: $buff = ''; goto x6j64; xRacU: } }