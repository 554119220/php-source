<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto HeAvo; HeAvo: $this->mch_appid = $mch_appid; goto s6jGO; cf4HQ: $this->apiclient_cert = $apiclient_cert; goto gBTTH; gBTTH: $this->apiclient_key = $apiclient_key; goto heC7J; XHOUx: $this->re_user_name = $re_user_name; goto x3t2P; s6jGO: $this->mchid = $mchid; goto YoHC3; x3t2P: $this->desc = $desc; goto Qj4d5; YoHC3: $this->key = $key; goto HvlD7; Qj4d5: $this->amount = $amount; goto cf4HQ; HvlD7: $this->openid = $openid; goto A3v_7; A3v_7: $this->partner_trade_no = $partner_trade_no; goto XHOUx; heC7J: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto twzYy; wGCHp: $xmlData = $this->arrayToXml($parameters); goto iGV9I; twzYy: $url = "\150\x74\164\160\x73\72\57\57\141\x70\x69\56\155\x63\150\x2e\x77\x65\151\x78\151\x6e\x2e\161\161\x2e\143\x6f\155\57\155\x6d\x70\x61\171\155\x6b\164\164\162\141\156\163\x66\x65\162\x73\57\x70\x72\157\x6d\157\x74\151\157\156\57\x74\x72\x61\156\x73\146\145\x72\163"; goto m4EUN; yPu1H: return $return; goto hl7CX; m4EUN: $parameters = array("\155\x63\150\137\x61\x70\x70\151\x64" => $this->mch_appid, "\155\x63\150\x69\x64" => $this->mchid, "\x6e\157\156\x63\x65\x5f\163\x74\162" => $this->createNoncestr(), "\x70\x61\x72\164\x6e\x65\162\137\164\x72\x61\x64\145\x5f\x6e\x6f" => $this->partner_trade_no, "\157\x70\x65\x6e\151\144" => $this->openid, "\143\150\x65\143\153\137\156\141\x6d\x65" => "\x4e\x4f\x5f\103\x48\105\x43\x4b", "\x72\x65\137\165\x73\145\162\x5f\156\x61\x6d\x65" => $this->re_user_name, "\x61\155\157\165\156\164" => $this->amount, "\144\x65\163\x63" => $this->desc, "\x73\160\142\151\154\x6c\137\143\x72\145\x61\x74\145\137\151\160" => "\61\x32\60\x2e\x37\71\56\61\65\x32\56\61\60\65"); goto Ypmmp; Ypmmp: $parameters["\x73\151\147\x6e"] = $this->getSign($parameters); goto wGCHp; iGV9I: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto yPu1H; hl7CX: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto BmFZk; p0tIx: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto y5VwL; SmQOc: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto QSX09; vGOBa: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto DuZqL; PHoxB: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto rz1DT; DuZqL: set_time_limit(0); goto qUHrs; YLozq: curl_close($ch); goto u9KX4; x9kTG: $error = curl_errno($ch); goto yX4ZI; OpreN: if ($data) { goto LQnE_; } goto x9kTG; vhPiA: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto vGOBa; BmFZk: $ch = curl_init(); goto ayp21; ayp21: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto a5UKB; VYSx0: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto PHoxB; u9KX4: return $data; goto pzKlK; y5VwL: curl_setopt($ch, CURLOPT_POST, TRUE); goto p36f4; V90j0: throw new WxPayException("\x63\165\x72\154\345\x87\xba\xe9\224\231\357\xbc\x8c\351\x94\231\350\xaf\xaf\347\xa0\x81\72{$error}"); goto hMe9D; QSX09: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto vhPiA; hMe9D: goto rdDwA; goto VpZ1j; a5UKB: curl_setopt($ch, CURLOPT_URL, $url); goto VYSx0; rz1DT: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto p0tIx; qUHrs: $data = curl_exec($ch); goto OpreN; pzKlK: rdDwA: goto ojaQA; p36f4: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto SmQOc; yX4ZI: curl_close($ch); goto V90j0; VpZ1j: LQnE_: goto YLozq; ojaQA: } private function arrayToXml($arr) { goto NCRmn; uEeE7: $xml .= "\x3c\57\x72\x6f\x6f\x74\x3e"; goto MDevb; tCzSl: B7rI2: goto uEeE7; NCRmn: $xml = "\x3c\x72\x6f\x6f\x74\x3e"; goto v4rkw; MDevb: return $xml; goto fqJos; v4rkw: foreach ($arr as $key => $val) { goto t6cU5; VEq7Z: jYeeB: goto VHG2g; HoMZH: goto MPL0X; goto VEq7Z; t6cU5: if (is_array($val)) { goto jYeeB; } goto XBsSr; VHG2g: $xml .= "\74" . $key . "\76" . arrayToXml($val) . "\x3c\57" . $key . "\76"; goto wGBBJ; RQkdF: KLV__: goto p_uGl; wGBBJ: MPL0X: goto RQkdF; XBsSr: $xml .= "\x3c" . $key . "\x3e" . $val . "\74\57" . $key . "\x3e"; goto HoMZH; p_uGl: } goto tCzSl; fqJos: } private function xmlToArray($xml) { goto jz9LK; JOxZT: $xmlstring = simplexml_load_string($xml, "\123\151\x6d\x70\x6c\145\130\x4d\114\105\x6c\145\155\x65\156\x74", LIBXML_NOCDATA); goto OOKiT; OOKiT: $val = json_decode(json_encode($xmlstring), true); goto wYGJw; jz9LK: libxml_disable_entity_loader(true); goto JOxZT; wYGJw: return $val; goto ew1fr; ew1fr: } private function createNoncestr($length = 32) { goto W5GUN; pONKx: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto LLheB; Jficj: goto aV9Ob; goto die09; LLheB: Va0IV: goto Lrc_F; die09: aJIkj: goto gKfGc; Lrc_F: $i++; goto Jficj; gKfGc: return $str; goto i6AE2; bcLLl: $i = 0; goto IDxx8; AQrTx: if (!($i < $length)) { goto aJIkj; } goto pONKx; IDxx8: aV9Ob: goto AQrTx; VBaHP: $str = ''; goto bcLLl; W5GUN: $chars = "\141\x62\143\144\x65\x66\x67\150\151\152\153\x6c\x6d\x6e\x6f\160\161\162\x73\164\x75\166\x77\x78\171\x7a\60\x31\x32\63\x34\65\x36\x37\x38\x39"; goto VBaHP; i6AE2: } private function getSign($Obj) { goto P4L0P; CPVmf: $String = md5($String); goto iBUNu; ONhly: $String = $String . "\x26\x6b\x65\x79\x3d" . $this->key; goto CPVmf; iBUNu: $result_ = strtoupper($String); goto ZHoAp; ZHoAp: return $result_; goto eEXW3; ng7WM: ksort($Parameters); goto zN0g9; zBL8l: CuWUt: goto ng7WM; P4L0P: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; DF23e: } goto zBL8l; zN0g9: $String = $this->formatBizQueryParaMap($Parameters, false); goto ONhly; eEXW3: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto KIRHv; ulWqq: return $reqPar; goto SuldD; EycX8: vDCeG: goto EroOu; xVU0N: $reqPar = substr($buff, 0, strlen($buff) - 1); goto z8gQ8; EroOu: $reqPar; goto SZ_2G; KIRHv: $buff = ''; goto sc6aZ; sc6aZ: ksort($paraMap); goto Q3UO1; SZ_2G: if (!(strlen($buff) > 0)) { goto ajA1M; } goto xVU0N; z8gQ8: ajA1M: goto ulWqq; Q3UO1: foreach ($paraMap as $k => $v) { goto gojco; n2HVE: KGluX: goto pqlZl; gojco: if (!$urlencode) { goto O6rRy; } goto y4a45; y4a45: $v = urlencode($v); goto xDvsW; xDvsW: O6rRy: goto QcS9P; QcS9P: $buff .= $k . "\x3d" . $v . "\x26"; goto n2HVE; pqlZl: } goto EycX8; SuldD: } }