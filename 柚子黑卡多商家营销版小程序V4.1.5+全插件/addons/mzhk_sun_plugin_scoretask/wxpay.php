<?php
 class WeixinPay { protected $appid; protected $mch_id; protected $key; protected $openid; protected $out_trade_no; protected $body; protected $total_fee; protected $attach; protected $notify_url; function __construct($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, $attach = 0, $notify_url = "\150\x74\164\160\72\57\57\167\x77\167\x2e\167\145\151\x78\x69\x6e\x2e\161\x71\56\143\157\x6d\57\x77\170\160\x61\171\57\x70\x61\171\56\x70\150\160") { goto c2kJ6; dVSbP: $this->body = $body; goto BvLKD; De0Kv: $this->notify_url = $notify_url; goto Zo_0e; mRJSV: $this->attach = $attach; goto De0Kv; WAAFB: $this->mch_id = $mch_id; goto D6O3n; BvLKD: $this->total_fee = $total_fee; goto mRJSV; D6O3n: $this->key = $key; goto DpgKr; c2kJ6: $this->appid = $appid; goto sBweR; DpgKr: $this->out_trade_no = $out_trade_no; goto dVSbP; sBweR: $this->openid = $openid; goto WAAFB; Zo_0e: } public function pay() { $return = $this->weixinapp(); return $return; } private function unifiedorder() { goto CzL5B; CzL5B: $url = "\x68\164\x74\160\x73\72\57\x2f\x61\160\x69\x2e\155\143\150\56\x77\145\x69\x78\151\156\56\161\x71\56\143\x6f\x6d\57\x70\x61\171\57\x75\x6e\x69\146\x69\145\144\x6f\x72\144\145\x72"; goto FSW54; FSW54: $parameters = array("\141\x70\160\151\144" => $this->appid, "\x6d\x63\150\x5f\x69\x64" => $this->mch_id, "\x6e\157\156\x63\145\x5f\x73\x74\x72" => $this->createNoncestr(), "\x62\x6f\144\x79" => $this->body, "\x61\x74\x74\x61\x63\150" => $this->attach, "\157\x75\x74\x5f\x74\162\141\x64\x65\137\x6e\x6f" => $this->out_trade_no, "\164\x6f\x74\x61\x6c\137\x66\x65\x65" => $this->total_fee, "\x73\x70\x62\x69\154\154\x5f\x63\x72\x65\141\x74\145\x5f\151\160" => $_SERVER["\122\105\x4d\x4f\124\105\137\101\x44\x44\122"], "\156\157\164\151\146\x79\x5f\x75\162\x6c" => $this->notify_url, "\x6f\x70\145\x6e\x69\144" => $this->openid, "\x74\162\x61\x64\145\137\164\171\160\x65" => "\112\x53\x41\x50\x49"); goto eVV0V; qTJV3: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60)); goto Di8rf; Di8rf: return $return; goto IHi8Z; t7LcR: $xmlData = $this->arrayToXml($parameters); goto qTJV3; eVV0V: $parameters["\x73\151\147\x6e"] = $this->getSign($parameters); goto t7LcR; IHi8Z: } private static function postXmlCurl($xml, $url, $second = 30) { goto IVD4i; CmROX: tP1o3: goto h2Jpo; IVD4i: $ch = curl_init(); goto CSL1q; RZ7nO: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto gSrMf; NuVC3: curl_close($ch); goto yyJl8; G1eSZ: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto hDG8j; eW7Jq: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto QaleZ; hDG8j: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto gjvIL; gSrMf: set_time_limit(0); goto vMmqx; CSL1q: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto wF58a; G79Z7: $error = curl_errno($ch); goto kbLhL; RB086: goto tP1o3; goto pQPUN; pQPUN: boe1Y: goto NuVC3; QaleZ: curl_setopt($ch, CURLOPT_POST, TRUE); goto savyn; gjvIL: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto eW7Jq; savyn: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto AeI8W; wF58a: curl_setopt($ch, CURLOPT_URL, $url); goto G1eSZ; AeI8W: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto RZ7nO; apIhL: if ($data) { goto boe1Y; } goto G79Z7; kbLhL: curl_close($ch); goto AL3fl; yyJl8: return $data; goto CmROX; vMmqx: $data = curl_exec($ch); goto apIhL; AL3fl: throw new WxPayException("\x63\165\162\x6c\xe5\x87\xba\xe9\x94\231\xef\xbc\214\351\x94\x99\xe8\xaf\xaf\347\xa0\x81\72{$error}"); goto RB086; h2Jpo: } private function arrayToXml($arr) { goto d24bL; cbc5h: ObJBM: goto nc1x3; nc1x3: $xml .= "\74\x2f\162\x6f\157\164\76"; goto i6o57; i6o57: return $xml; goto SWDeU; CFwhU: foreach ($arr as $key => $val) { goto I9eLE; I9eLE: if (is_array($val)) { goto Ja2wR; } goto sQ5zN; sQ5zN: $xml .= "\74" . $key . "\x3e" . $val . "\74\x2f" . $key . "\x3e"; goto mfA2W; wDqsX: Ja2wR: goto DLyP4; FMkd3: CSG0C: goto J4Tux; J4Tux: URbfX: goto DndBG; DLyP4: $xml .= "\74" . $key . "\x3e" . arrayToXml($val) . "\74\57" . $key . "\x3e"; goto FMkd3; mfA2W: goto CSG0C; goto wDqsX; DndBG: } goto cbc5h; d24bL: $xml = "\74\162\x6f\x6f\164\76"; goto CFwhU; SWDeU: } private function xmlToArray($xml) { goto iZrmo; iZrmo: libxml_disable_entity_loader(true); goto Y1xfL; qM8Mi: return $val; goto Qf3M2; Y1xfL: $xmlstring = simplexml_load_string($xml, "\123\151\x6d\160\x6c\145\130\x4d\114\x45\154\145\x6d\x65\156\164", LIBXML_NOCDATA); goto UkIDf; UkIDf: $val = json_decode(json_encode($xmlstring), true); goto qM8Mi; Qf3M2: } private function weixinapp() { goto JCWIc; j4svE: $parameters["\x70\162\145\160\141\x79\x5f\x69\144"] = $unifiedorder["\x70\162\x65\160\x61\x79\x5f\151\144"]; goto tRk1n; JCWIc: $unifiedorder = $this->unifiedorder(); goto XVZog; XVZog: $parameters = array("\x61\x70\160\111\144" => $this->appid, "\164\151\155\145\x53\x74\141\155\x70" => '' . time() . '', "\x6e\157\x6e\143\145\123\x74\162" => $this->createNoncestr(), "\x70\141\143\153\x61\147\x65" => "\x70\162\x65\160\141\171\137\x69\x64\75" . $unifiedorder["\x70\x72\145\x70\141\x79\x5f\x69\144"], "\163\x69\147\x6e\x54\x79\160\x65" => "\115\104\65"); goto X0DHz; tRk1n: return $parameters; goto CvffI; X0DHz: $parameters["\x70\x61\171\123\x69\x67\156"] = $this->getSign($parameters); goto j4svE; CvffI: } private function createNoncestr($length = 32) { goto r_zpJ; v2Ufe: $str = ''; goto dML7p; VvViA: KW9Ra: goto RFqWX; RFqWX: $i++; goto oY2as; r0Bbs: SDDTs: goto QeFLz; QeFLz: if (!($i < $length)) { goto SfYvZ; } goto k0coU; Cx7nH: SfYvZ: goto ZBx_3; k0coU: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto VvViA; r_zpJ: $chars = "\x61\142\143\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\155\156\157\x70\x71\162\x73\164\x75\166\167\x78\x79\x7a\x30\x31\x32\63\x34\65\x36\x37\70\x39"; goto v2Ufe; ZBx_3: return $str; goto gqDWI; oY2as: goto SDDTs; goto Cx7nH; dML7p: $i = 0; goto r0Bbs; gqDWI: } private function getSign($Obj) { goto q_tNl; ysl7M: $String = md5($String); goto o3lni; FTNt6: return $result_; goto gwD6e; LAac_: ksort($Parameters); goto FPVK4; q_tNl: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; qtcr7: } goto HBdtf; HBdtf: i8MzV: goto LAac_; F8pyg: $String = $String . "\46\153\x65\171\75" . $this->key; goto ysl7M; FPVK4: $String = $this->formatBizQueryParaMap($Parameters, false); goto F8pyg; o3lni: $result_ = strtoupper($String); goto FTNt6; gwD6e: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto q8rE3; Ncioj: dZUOu: goto Ic2MK; dE3Ji: $reqPar; goto e7Kg6; Ckw1d: NSGRY: goto dE3Ji; q8rE3: $buff = ''; goto m8fdl; bSaje: $reqPar = substr($buff, 0, strlen($buff) - 1); goto Ncioj; m8fdl: ksort($paraMap); goto y1_jF; Ic2MK: return $reqPar; goto xUtSt; e7Kg6: if (!(strlen($buff) > 0)) { goto dZUOu; } goto bSaje; y1_jF: foreach ($paraMap as $k => $v) { goto n3slp; XdZPd: QHdf4: goto u24LF; uoNnb: $v = urlencode($v); goto NYPLw; n3slp: if (!$urlencode) { goto Al6XY; } goto uoNnb; NYPLw: Al6XY: goto e3fb_; e3fb_: $buff .= $k . "\75" . $v . "\46"; goto XdZPd; u24LF: } goto Ckw1d; xUtSt: } }