<?php
 defined("\111\116\137\111\x41") or exit("\x41\x63\143\145\163\163\40\104\145\x6e\151\145\x64"); class redpack { private $partner_key; private $apiclient_cert; private $apiclient_key; private $rootca; private $values; function __construct($partner_key, $apiclient_cert, $apiclient_key, $rootca) { goto c5VFD; wxD67: $this->apiclient_cert = $apiclient_cert; goto oTAg9; c5VFD: $this->partner_key = $partner_key; goto wxD67; oTAg9: $this->apiclient_key = $apiclient_key; goto jXcXd; jXcXd: } public function pay($parameter) { goto empTS; teXiw: return $this->xmlToArray($result); goto nSGiF; empTS: $parameter["\156\157\x6e\143\145\x5f\x73\x74\162"] = $this->createNonceStr(); goto lQR6Y; VOXcL: $result = $this->curlPost("\150\164\164\160\x73\72\x2f\57\141\x70\x69\x2e\x6d\x63\150\56\x77\x65\151\170\151\x6e\x2e\x71\161\x2e\x63\157\x6d\x2f\155\x6d\x70\141\171\155\153\x74\x74\x72\141\x6e\163\x66\145\162\163\x2f\163\x65\x6e\x64\162\145\x64\x70\x61\143\x6b", $this->arrayToXml()); goto teXiw; AiSHX: $this->values["\163\151\147\156"] = $this->makeSign(); goto VOXcL; lQR6Y: $this->values = $parameter; goto AiSHX; nSGiF: } private function makeSign() { goto NFJND; K5dRZ: $string = md5($string); goto SyOUW; NFJND: ksort($this->values); goto Fw3Gi; SyOUW: $result = strtoupper($string); goto fi6mm; viHQd: $string = $string . "\x26\x6b\x65\x79\x3d" . $this->partner_key; goto K5dRZ; fi6mm: return $result; goto yGKeE; Fw3Gi: $string = $this->toUrlParams(); goto viHQd; yGKeE: } private function createNonceStr($length = 16) { goto rSlbs; HWFpB: LSb7z: goto yJoXr; oPvpP: H9WPI: goto gLc7v; rSlbs: $chars = "\x61\x62\x63\x64\145\x66\147\x68\x69\x6a\x6b\x6c\155\156\x6f\160\161\x72\x73\164\165\166\x77\170\x79\x7a\x41\x42\x43\104\105\x46\107\x48\x49\112\x4b\114\x4d\116\117\120\x51\x52\123\124\x55\x56\x57\130\131\132\x30\61\62\63\64\65\x36\x37\x38\71"; goto nHRk2; ivQZF: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto oPvpP; KUcVI: YF3F2: goto eFKur; gLc7v: $i++; goto svR4S; yJoXr: return $str; goto n_ZaR; svR4S: goto YF3F2; goto HWFpB; pVFzX: $i = 0; goto KUcVI; nHRk2: $str = ''; goto pVFzX; eFKur: if (!($i < $length)) { goto LSb7z; } goto ivQZF; n_ZaR: } private function toUrlParams() { goto vgkHU; vgkHU: $buff = ''; goto M4zw3; M4zw3: foreach ($this->values as $k => $v) { goto Kf5s0; Iqgpy: $buff .= $k . "\75" . $v . "\x26"; goto KtR9t; Kf5s0: if (!($k != "\163\151\x67\156" && $v != '' && !is_array($v))) { goto QQU4S; } goto Iqgpy; KtR9t: QQU4S: goto dIbfm; dIbfm: UvA_b: goto w0c7i; w0c7i: } goto sgGiI; xENBg: return $buff; goto RAhqR; y0Urk: $buff = trim($buff, "\46"); goto xENBg; sgGiI: Two76: goto y0Urk; RAhqR: } private function arrayToXml() { goto uy0kd; muFt2: return $xml; goto pTww4; vLuIJ: foreach ($this->values as $key => $val) { goto xP8Fd; Nb6LP: $xml .= "\74" . $key . "\76" . $val . "\74\57" . $key . "\76"; goto TUQi2; F8wrz: goto mwQZG; goto wT3JL; hIvTU: mMLHX: goto k_FVV; TUQi2: mwQZG: goto hIvTU; wT3JL: zkYwi: goto Nb6LP; Nt8nX: $xml .= "\74" . $key . "\76\74\x21\133\103\104\x41\124\101\133" . $val . "\135\135\76\74\57" . $key . "\76"; goto F8wrz; xP8Fd: if (is_numeric($val)) { goto zkYwi; } goto Nt8nX; k_FVV: } goto scMzu; pi1D5: $xml .= "\x3c\x2f\x78\155\154\76"; goto muFt2; scMzu: F5IB2: goto pi1D5; uy0kd: $xml = "\x3c\170\x6d\154\x3e"; goto vLuIJ; pTww4: } private function xmlToArray($xml) { goto fr2LD; aY0yS: rwZp1: goto mrPLd; EY2X6: if (is_array($result)) { goto a1ipH; } goto BBgC2; yUc30: $result = json_decode(json_encode($xmlobj), true); goto EY2X6; mrPLd: PNQjE: goto yYY4g; KitIP: $result = array(); goto ol0b3; UcQYl: a1ipH: goto UincM; Bd1a_: goto rwZp1; goto UcQYl; c0GD3: return array(); goto l793b; UincM: return $result; goto aY0yS; ojshG: rrtfv: goto yUc30; ol0b3: $xmlobj = isimplexml_load_string($xml, "\123\x69\155\x70\x6c\145\130\115\x4c\105\154\145\155\145\156\x74", LIBXML_NOCDATA); goto SEwrB; l793b: Tk0pp: goto KitIP; BBgC2: return ''; goto Bd1a_; fr2LD: if (!empty($xml)) { goto Tk0pp; } goto c0GD3; I9QZZ: goto PNQjE; goto ojshG; cWCF6: return $result; goto I9QZZ; SEwrB: if ($xmlobj instanceof SimpleXMLElement) { goto rrtfv; } goto cWCF6; yYY4g: } private function curlPost($url, $vars, $second = 30, $header = array()) { goto XgzGB; zDoh0: if ($data) { goto YkTqZ; } goto F1oEq; jtDb4: if (!(count($header) >= 1)) { goto Gxj67; } goto ta603; L_ovq: IRWKn: goto EgREB; u_bEb: curl_close($ch); goto wLHOT; ta603: curl_setopt($ch, CURLOPT_HTTPHEADER, $header); goto o5c3n; o5c3n: Gxj67: goto suwuD; wLHOT: return $data; goto L_ovq; XgzGB: $ch = curl_init(); goto H9o4m; j69Mt: curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); goto ijP_R; qkcvk: return false; goto mW2yz; xuV6A: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); goto acv_W; nJq56: curl_setopt($ch, CURLOPT_SSLKEY, $this->apiclient_key); goto jtDb4; KoPTI: curl_setopt($ch, CURLOPT_POSTFIELDS, $vars); goto ows21; ows21: $data = curl_exec($ch); goto zDoh0; mW2yz: goto IRWKn; goto T1Vpb; H9o4m: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto j69Mt; acv_W: curl_setopt($ch, CURLOPT_SSLCERT, $this->apiclient_cert); goto nJq56; suwuD: curl_setopt($ch, CURLOPT_POST, 1); goto KoPTI; F1oEq: curl_close($ch); goto qkcvk; lKKcz: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); goto xuV6A; T1Vpb: YkTqZ: goto u_bEb; ijP_R: curl_setopt($ch, CURLOPT_URL, $url); goto lKKcz; EgREB: } }