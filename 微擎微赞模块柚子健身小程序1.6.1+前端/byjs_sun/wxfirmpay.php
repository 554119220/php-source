<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto uzlWL; Y_N8r: $this->partner_trade_no = $partner_trade_no; goto AIpCe; GKKxc: $this->desc = $desc; goto Q7Huj; MHzmm: $this->apiclient_key = $apiclient_key; goto uBTJt; AIpCe: $this->re_user_name = $re_user_name; goto GKKxc; uzlWL: $this->mch_appid = $mch_appid; goto qPE3L; TxCY8: $this->key = $key; goto CA5gL; CA5gL: $this->openid = $openid; goto Y_N8r; qPE3L: $this->mchid = $mchid; goto TxCY8; Q7Huj: $this->amount = $amount; goto N1X_n; N1X_n: $this->apiclient_cert = $apiclient_cert; goto MHzmm; uBTJt: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto f90eM; SW2u6: $parameters = array("\155\143\x68\x5f\141\x70\160\x69\x64" => $this->mch_appid, "\155\x63\150\x69\144" => $this->mchid, "\x6e\x6f\x6e\143\145\x5f\x73\x74\162" => $this->createNoncestr(), "\160\x61\162\x74\x6e\x65\162\x5f\164\x72\141\x64\x65\137\156\157" => $this->partner_trade_no, "\x6f\160\x65\x6e\151\x64" => $this->openid, "\x63\150\145\x63\x6b\x5f\x6e\x61\155\x65" => "\x4e\x4f\x5f\103\110\x45\103\x4b", "\162\145\137\165\x73\x65\162\x5f\156\141\155\145" => $this->re_user_name, "\141\155\x6f\x75\x6e\x74" => $this->amount, "\144\145\163\x63" => $this->desc, "\163\160\x62\x69\154\x6c\x5f\143\162\x65\141\164\x65\137\151\x70" => "\61\x32\x30\56\x37\71\x2e\61\65\62\x2e\x31\x30\65"); goto veoaV; QAwbh: $xmlData = $this->arrayToXml($parameters); goto Ai7vz; GlYCU: return $return; goto wzC8O; f90eM: $url = "\150\x74\x74\x70\163\72\57\x2f\141\x70\151\x2e\x6d\143\150\56\x77\x65\x69\x78\151\x6e\56\x71\161\x2e\143\x6f\155\57\155\155\x70\141\171\155\x6b\164\164\x72\x61\x6e\x73\146\x65\x72\x73\x2f\160\x72\157\x6d\157\x74\151\157\x6e\57\x74\162\x61\156\x73\146\x65\162\x73"; goto SW2u6; Ai7vz: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto GlYCU; veoaV: $parameters["\x73\x69\147\156"] = $this->getSign($parameters); goto QAwbh; wzC8O: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto FoSbA; T_Kd5: return 0; goto q_v1x; uRQ9C: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto FR6xd; djny6: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto XH1mb; FoSbA: $ch = curl_init(); goto uRQ9C; nkTct: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto EtyAV; ZiHj5: set_time_limit(0); goto edNpU; L0OWN: oshEV: goto dx2xT; juxlt: return $data; goto L0OWN; edNpU: $data = curl_exec($ch); goto las5F; PZCNG: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto ZiHj5; Vgvhq: curl_close($ch); goto juxlt; U0F46: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto nkTct; LXOEv: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto myJKv; Dva8j: curl_close($ch); goto T_Kd5; myJKv: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto PZCNG; EruDY: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto LXOEv; H8yag: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto EruDY; EtyAV: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto djny6; FR6xd: curl_setopt($ch, CURLOPT_URL, $url); goto U0F46; XH1mb: curl_setopt($ch, CURLOPT_POST, TRUE); goto H8yag; DLWET: lxjYD: goto Vgvhq; q_v1x: goto oshEV; goto DLWET; DBJWN: $error = curl_errno($ch); goto Dva8j; las5F: if ($data) { goto lxjYD; } goto DBJWN; dx2xT: } private function arrayToXml($arr) { goto xo33V; xo33V: $xml = "\74\x72\157\x6f\164\76"; goto DYzY6; DYzY6: foreach ($arr as $key => $val) { goto CuI99; EFH2H: $xml .= "\74" . $key . "\76" . arrayToXml($val) . "\74\x2f" . $key . "\x3e"; goto KqfwL; MqbX2: $xml .= "\74" . $key . "\x3e" . $val . "\74\x2f" . $key . "\76"; goto d7sW2; TFn7C: lUkzd: goto EFH2H; KqfwL: qgw3j: goto sXchI; d7sW2: goto qgw3j; goto TFn7C; CuI99: if (is_array($val)) { goto lUkzd; } goto MqbX2; sXchI: Hg_p9: goto dCbLm; dCbLm: } goto sQL_w; sQL_w: sgJDi: goto LnQtX; vujEe: return $xml; goto xcoTN; LnQtX: $xml .= "\74\x2f\x72\157\157\164\x3e"; goto vujEe; xcoTN: } private function xmlToArray($xml) { goto wlzYk; hRVfw: return $val; goto btlZ5; bh_2U: $val = json_decode(json_encode($xmlstring), true); goto hRVfw; wlzYk: libxml_disable_entity_loader(true); goto aMg1x; aMg1x: $xmlstring = simplexml_load_string($xml, "\x53\x69\x6d\160\x6c\145\130\115\x4c\x45\x6c\x65\155\x65\156\164", LIBXML_NOCDATA); goto bh_2U; btlZ5: } private function createNoncestr($length = 32) { goto eyxqd; bJjB0: $str = ''; goto O8GrU; S5Tby: hMYv0: goto kdhFc; rmeAa: Hv43n: goto WxvBu; O8GrU: $i = 0; goto rmeAa; DPFnY: goto Hv43n; goto NTVno; agcBl: return $str; goto bBipf; E3Q3w: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto S5Tby; kdhFc: $i++; goto DPFnY; eyxqd: $chars = "\141\142\x63\x64\145\146\x67\x68\151\152\x6b\x6c\155\x6e\157\160\x71\162\163\x74\x75\x76\x77\x78\171\x7a\60\x31\x32\63\x34\x35\66\67\x38\71"; goto bJjB0; NTVno: g9s4l: goto agcBl; WxvBu: if (!($i < $length)) { goto g9s4l; } goto E3Q3w; bBipf: } private function getSign($Obj) { goto gIOrw; VmVlF: $result_ = strtoupper($String); goto uqedS; f_Eep: vgjkL: goto ijLPE; kLzoi: $String = md5($String); goto VmVlF; gIOrw: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; TyMh2: } goto f_Eep; ijLPE: ksort($Parameters); goto Pgr1h; JySq4: $String = $String . "\46\153\x65\171\x3d" . $this->key; goto kLzoi; uqedS: return $result_; goto WV1rK; Pgr1h: $String = $this->formatBizQueryParaMap($Parameters, false); goto JySq4; WV1rK: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto j7Oi3; KnJ52: foreach ($paraMap as $k => $v) { goto Z0_J3; YX1r8: qLBar: goto iEGlZ; R7Mig: $buff .= $k . "\75" . $v . "\46"; goto YX1r8; ijr08: PfN22: goto R7Mig; Z0_J3: if (!$urlencode) { goto PfN22; } goto C1wWW; C1wWW: $v = urlencode($v); goto ijr08; iEGlZ: } goto eyxHk; FHWor: ksort($paraMap); goto KnJ52; M3yXT: return $reqPar; goto IAOFz; vRtFw: $reqPar; goto cC93M; DX3yU: $reqPar = substr($buff, 0, strlen($buff) - 1); goto S2QCl; j7Oi3: $buff = ''; goto FHWor; cC93M: if (!(strlen($buff) > 0)) { goto cWTff; } goto DX3yU; S2QCl: cWTff: goto M3yXT; eyxHk: ASHnn: goto vRtFw; IAOFz: } }