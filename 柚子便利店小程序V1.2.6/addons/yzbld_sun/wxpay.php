<?php
 class WeixinPay { protected $appid; protected $mch_id; protected $key; protected $openid; protected $out_trade_no; protected $body; protected $total_fee; protected $notify_url; protected $attach; function __construct($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, $notify_url, $attach) { goto ZwXzX; b2AHT: $this->total_fee = $total_fee; goto xoRrP; UGCeI: $this->out_trade_no = $out_trade_no; goto p_cAS; yim6w: $this->openid = $openid; goto EDS3t; EDS3t: $this->mch_id = $mch_id; goto o_Wqj; p_cAS: $this->body = $body; goto b2AHT; xoRrP: $this->notify_url = $notify_url; goto iXAbp; o_Wqj: $this->key = $key; goto UGCeI; iXAbp: $this->attach = $attach; goto k5XAV; ZwXzX: $this->appid = $appid; goto yim6w; k5XAV: } public function pay() { $return = $this->weixinapp(); return $return; } private function unifiedorder() { goto ahxmS; qjAYh: $parameters = array("\141\160\x70\x69\x64" => $this->appid, "\x6d\143\150\137\x69\144" => $this->mch_id, "\156\x6f\x6e\143\x65\137\x73\x74\162" => $this->createNoncestr(), "\142\157\x64\x79" => $this->body, "\157\x75\x74\137\164\162\141\x64\x65\x5f\x6e\157" => $this->out_trade_no, "\164\x6f\x74\x61\154\137\x66\x65\145" => $this->total_fee, "\x73\x70\142\151\154\154\137\x63\162\x65\x61\x74\x65\x5f\x69\x70" => "\61\62\x30\56\x37\71\x2e\61\x35\x32\x2e\61\x30\x35", "\156\x6f\x74\151\x66\171\x5f\x75\162\x6c" => $this->notify_url, "\157\160\x65\x6e\x69\144" => $this->openid, "\141\164\164\141\143\150" => $this->attach, "\164\x72\x61\144\145\137\164\171\x70\145" => "\112\x53\x41\120\111"); goto VWMQ_; UUqeb: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60)); goto G8Vwd; J_UcB: $xmlData = $this->arrayToXml($parameters); goto UUqeb; G8Vwd: return $return; goto KcOQX; ahxmS: $url = "\150\164\x74\x70\163\72\57\x2f\x61\x70\151\x2e\155\143\x68\x2e\167\145\151\170\151\x6e\56\x71\x71\x2e\x63\x6f\155\x2f\x70\141\171\57\x75\156\x69\x66\151\145\144\x6f\162\144\145\x72"; goto qjAYh; VWMQ_: $parameters["\x73\x69\147\x6e"] = $this->getSign($parameters); goto J_UcB; KcOQX: } private static function postXmlCurl($xml, $url, $second = 30) { goto t7W5F; ngGYo: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto Dc_zH; qCQlI: if ($data) { goto ApBZc; } goto VfAlq; MJY_0: curl_setopt($ch, CURLOPT_URL, $url); goto HZufD; kCX3u: curl_close($ch); goto LMoUM; zpQRY: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto AOQWT; VrnqX: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto xtn8y; fRfpk: $data = curl_exec($ch); goto qCQlI; HZufD: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto ngGYo; SuEyi: ApBZc: goto Vo_s0; t7W5F: $ch = curl_init(); goto HaBDC; VfAlq: $error = curl_errno($ch); goto kCX3u; Dc_zH: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto VrnqX; Y1zJr: goto I0tdh; goto SuEyi; CaCXf: return $data; goto B3GGm; B3GGm: I0tdh: goto IxMDt; xtn8y: curl_setopt($ch, CURLOPT_POST, TRUE); goto zpQRY; AOQWT: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto Rqg4U; Vo_s0: curl_close($ch); goto CaCXf; HaBDC: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto MJY_0; LMoUM: throw new WxPayException("\143\165\x72\154\345\207\272\xe9\224\231\xef\274\x8c\xe9\224\x99\350\xaf\257\xe7\xa0\x81\72{$error}"); goto Y1zJr; sLnjS: set_time_limit(0); goto fRfpk; Rqg4U: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto sLnjS; IxMDt: } private function arrayToXml($arr) { goto DGrN9; VBiUd: foreach ($arr as $key => $val) { goto hPOMn; EUiLD: $xml .= "\x3c" . $key . "\76" . arrayToXml($val) . "\74\57" . $key . "\76"; goto DCIvI; gjk5B: goto FGZ31; goto xJUIL; hPOMn: if (is_array($val)) { goto XiO0t; } goto KGgpy; xJUIL: XiO0t: goto EUiLD; dQIm8: hXk6s: goto qpX5c; DCIvI: FGZ31: goto dQIm8; KGgpy: $xml .= "\x3c" . $key . "\x3e" . $val . "\x3c\x2f" . $key . "\x3e"; goto gjk5B; qpX5c: } goto Mdt22; Mdt22: Fd42a: goto ORcME; DGrN9: $xml = "\74\162\x6f\x6f\164\x3e"; goto VBiUd; ORcME: $xml .= "\x3c\57\x72\157\157\164\76"; goto jaHuj; jaHuj: return $xml; goto j1YKP; j1YKP: } private function xmlToArray($xml) { goto d4VQq; UfkBk: return $val; goto EXXN5; sHjaW: $xmlstring = simplexml_load_string($xml, "\123\151\x6d\160\154\145\x58\115\114\105\x6c\x65\155\x65\156\164", LIBXML_NOCDATA); goto O31lq; O31lq: $val = json_decode(json_encode($xmlstring), true); goto UfkBk; d4VQq: libxml_disable_entity_loader(true); goto sHjaW; EXXN5: } private function weixinapp() { goto Q1MYt; lEhaA: $parameters = array("\x61\x70\160\x49\144" => $this->appid, "\164\x69\x6d\x65\123\x74\141\x6d\x70" => '' . time() . '', "\x6e\x6f\x6e\143\x65\x53\164\162" => $this->createNoncestr(), "\160\x61\x63\153\141\147\x65" => "\x70\x72\145\160\141\x79\137\151\x64\75" . $unifiedorder["\160\162\145\160\x61\x79\x5f\151\144"], "\163\x69\x67\x6e\x54\171\x70\x65" => "\115\104\65"); goto Mk3gY; DsUgh: return $parameters; goto UhMTc; Mk3gY: $parameters["\x70\x61\171\123\151\x67\156"] = $this->getSign($parameters); goto DsUgh; Q1MYt: $unifiedorder = $this->unifiedorder(); goto lEhaA; UhMTc: } private function createNoncestr($length = 32) { goto DzxYD; PHG6I: $i = 0; goto Rj7Lb; HM5oy: if (!($i < $length)) { goto WwiLM; } goto i9vcc; tc2jF: WwiLM: goto U5wY5; U5wY5: return $str; goto hX6R3; i9vcc: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto u51b7; oznJA: $str = ''; goto PHG6I; DzxYD: $chars = "\x61\142\x63\x64\145\x66\x67\150\x69\152\153\x6c\x6d\156\157\x70\161\162\163\x74\x75\x76\167\170\x79\172\x30\x31\62\x33\x34\65\x36\x37\70\71"; goto oznJA; feuY2: $i++; goto Y2Bim; u51b7: sK_41: goto feuY2; Rj7Lb: qlk4r: goto HM5oy; Y2Bim: goto qlk4r; goto tc2jF; hX6R3: } private function getSign($Obj) { goto uz4GL; If5Q1: return $result_; goto sAeiR; nwOFz: $result_ = strtoupper($String); goto If5Q1; n2hAO: $String = $String . "\x26\x6b\145\x79\x3d" . $this->key; goto jmxZO; gPHLD: $String = $this->formatBizQueryParaMap($Parameters, false); goto n2hAO; tkR4g: ksort($Parameters); goto gPHLD; wm8Pg: fvzCU: goto tkR4g; jmxZO: $String = md5($String); goto nwOFz; uz4GL: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; h8GT8: } goto wm8Pg; sAeiR: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto Xl23P; MDAXG: $reqPar; goto lxush; lxush: if (!(strlen($buff) > 0)) { goto vaO0I; } goto F4B5T; OkYrC: ksort($paraMap); goto WDhjY; F4B5T: $reqPar = substr($buff, 0, strlen($buff) - 1); goto aQpuc; O7DiP: return $reqPar; goto tv639; aQpuc: vaO0I: goto O7DiP; WDhjY: foreach ($paraMap as $k => $v) { goto GQeTY; xtSy5: $v = urlencode($v); goto NP_7a; b2Zn2: $buff .= $k . "\75" . $v . "\x26"; goto VI2vL; NP_7a: pgU3_: goto b2Zn2; GQeTY: if (!$urlencode) { goto pgU3_; } goto xtSy5; VI2vL: XVIre: goto ETDco; ETDco: } goto J6uhz; Xl23P: $buff = ''; goto OkYrC; J6uhz: j3PMQ: goto MDAXG; tv639: } }