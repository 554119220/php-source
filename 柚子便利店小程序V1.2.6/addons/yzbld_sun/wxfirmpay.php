<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto u2Zjj; DFvjb: $this->apiclient_key = $apiclient_key; goto Kxnm3; Zwsln: $this->amount = $amount; goto BlqZn; y0B1e: $this->mchid = $mchid; goto x2ACc; Glt_u: $this->openid = $openid; goto YJx9x; x2ACc: $this->key = $key; goto Glt_u; JlrMO: $this->re_user_name = $re_user_name; goto kcpwv; u2Zjj: $this->mch_appid = $mch_appid; goto y0B1e; YJx9x: $this->partner_trade_no = $partner_trade_no; goto JlrMO; BlqZn: $this->apiclient_cert = $apiclient_cert; goto DFvjb; kcpwv: $this->desc = $desc; goto Zwsln; Kxnm3: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto h9KuR; SYZKc: return $return; goto w65Vt; slbiB: $xmlData = $this->arrayToXml($parameters); goto Dk1vX; Ypjmi: $parameters["\x73\x69\147\156"] = $this->getSign($parameters); goto slbiB; h9KuR: $url = "\150\164\164\160\x73\x3a\57\x2f\x61\160\151\56\155\143\x68\56\x77\x65\151\170\x69\156\x2e\x71\x71\x2e\143\157\155\57\x6d\x6d\160\x61\171\155\x6b\164\x74\162\141\156\x73\x66\x65\162\x73\x2f\x70\x72\157\155\157\x74\x69\157\156\x2f\164\162\x61\x6e\163\x66\145\x72\x73"; goto loXNS; loXNS: $parameters = array("\x6d\x63\150\x5f\x61\160\160\151\x64" => $this->mch_appid, "\155\143\x68\151\144" => $this->mchid, "\x6e\157\156\x63\x65\x5f\163\164\x72" => $this->createNoncestr(), "\160\141\x72\x74\x6e\145\162\x5f\164\162\141\144\x65\137\x6e\157" => $this->partner_trade_no, "\157\160\x65\156\x69\144" => $this->openid, "\x63\150\x65\143\x6b\137\x6e\x61\x6d\145" => "\x4e\x4f\137\103\110\105\x43\x4b", "\x72\x65\x5f\165\x73\145\162\137\x6e\141\x6d\x65" => $this->re_user_name, "\x61\x6d\x6f\x75\x6e\x74" => $this->amount, "\144\145\163\x63" => $this->desc, "\x73\160\x62\151\x6c\x6c\137\143\x72\x65\141\164\145\x5f\151\x70" => "\61\x32\x30\56\67\x39\x2e\x31\x35\x32\x2e\x31\x30\65"); goto Ypjmi; Dk1vX: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto SYZKc; w65Vt: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto npKLp; ye_Xn: goto rbqdt; goto SjP09; NoRlj: return $data; goto LPfS_; G0SQ9: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto pubvd; F2oW7: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto uKOlE; yOlm6: set_time_limit(0); goto m3Dbt; DH75V: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto JCp6q; pubvd: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto KM15L; px6iq: if ($data) { goto h92vB; } goto T1u2F; LPfS_: rbqdt: goto RiUO0; SJtJr: curl_close($ch); goto Cgyt5; JCp6q: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto F2oW7; FMnz1: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto rV2y6; WANsx: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto yOlm6; g3lHP: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto DH75V; lPocp: curl_close($ch); goto NoRlj; Cgyt5: throw new \Exception("\x63\x75\162\x6c\345\207\xba\351\x94\231\357\274\x8c\351\224\231\xe8\257\xaf\347\xa0\201\72{$error}"); goto ye_Xn; KM15L: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto G39d1; uKOlE: curl_setopt($ch, CURLOPT_POST, TRUE); goto G0SQ9; T1u2F: $error = curl_errno($ch); goto SJtJr; SjP09: h92vB: goto lPocp; rV2y6: curl_setopt($ch, CURLOPT_URL, $url); goto g3lHP; npKLp: $ch = curl_init(); goto FMnz1; G39d1: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto WANsx; m3Dbt: $data = curl_exec($ch); goto px6iq; RiUO0: } private function arrayToXml($arr) { goto VJeAq; aMDYl: foreach ($arr as $key => $val) { goto GW1A4; VERXn: Uth9P: goto YfMHu; YfMHu: rH8Hb: goto DzW1P; ynwv9: sIMva: goto MCQcv; GW1A4: if (is_array($val)) { goto sIMva; } goto vHoEw; JL4ZG: goto Uth9P; goto ynwv9; vHoEw: $xml .= "\74" . $key . "\x3e" . $val . "\74\x2f" . $key . "\x3e"; goto JL4ZG; MCQcv: $xml .= "\x3c" . $key . "\76" . arrayToXml($val) . "\74\57" . $key . "\x3e"; goto VERXn; DzW1P: } goto l05Zh; l05Zh: Domyu: goto Bew8u; Bew8u: $xml .= "\x3c\x2f\162\x6f\157\164\76"; goto Li7Ai; VJeAq: $xml = "\x3c\x72\x6f\x6f\x74\76"; goto aMDYl; Li7Ai: return $xml; goto PSbVJ; PSbVJ: } private function xmlToArray($xml) { goto WRbUr; WRbUr: libxml_disable_entity_loader(true); goto zQlPN; vT2f6: return $val; goto k0gjd; fz5if: $val = json_decode(json_encode($xmlstring), true); goto vT2f6; zQlPN: $xmlstring = simplexml_load_string($xml, "\123\151\x6d\160\x6c\x65\130\115\x4c\105\x6c\145\155\x65\x6e\164", LIBXML_NOCDATA); goto fz5if; k0gjd: } private function createNoncestr($length = 32) { goto jjnxJ; u0whR: return $str; goto r_p3p; f8LVa: prQv3: goto C6XkY; flsPQ: $i = 0; goto f8LVa; jjnxJ: $chars = "\x61\x62\x63\144\145\x66\147\150\151\152\x6b\x6c\155\x6e\157\x70\161\x72\163\164\x75\166\x77\x78\x79\172\x30\x31\x32\63\64\x35\66\x37\70\x39"; goto bmCJc; bmCJc: $str = ''; goto flsPQ; FNcfC: $i++; goto T4Vea; C6XkY: if (!($i < $length)) { goto pLxek; } goto XHs7l; q8RR1: HrJHp: goto FNcfC; suYur: pLxek: goto u0whR; XHs7l: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto q8RR1; T4Vea: goto prQv3; goto suYur; r_p3p: } private function getSign($Obj) { goto HfMNg; zgY6I: $String = $String . "\46\153\x65\171\75" . $this->key; goto Qqb1x; aemlQ: return $result_; goto Vfbq8; uR8MN: $result_ = strtoupper($String); goto aemlQ; H8wSF: $String = $this->formatBizQueryParaMap($Parameters, false); goto zgY6I; HfMNg: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; LvMKL: } goto ykedc; eP2Q7: ksort($Parameters); goto H8wSF; Qqb1x: $String = md5($String); goto uR8MN; ykedc: P_ASJ: goto eP2Q7; Vfbq8: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto KdzYu; hjPH6: if (!(strlen($buff) > 0)) { goto VEtyv; } goto q5psZ; sav5O: foreach ($paraMap as $k => $v) { goto RKoQI; RKoQI: if (!$urlencode) { goto yRROR; } goto cTyfQ; cTyfQ: $v = urlencode($v); goto hpYaS; GAUca: tWxzi: goto tpnlt; hdtwt: $buff .= $k . "\75" . $v . "\46"; goto GAUca; hpYaS: yRROR: goto hdtwt; tpnlt: } goto Lcg1v; q5psZ: $reqPar = substr($buff, 0, strlen($buff) - 1); goto FqsO_; mJ70y: $reqPar = ''; goto hjPH6; Lcg1v: zzPQ_: goto mJ70y; Fsq79: ksort($paraMap); goto sav5O; FqsO_: VEtyv: goto PwdSI; KdzYu: $buff = ''; goto Fsq79; PwdSI: return $reqPar; goto IR_Vo; IR_Vo: } }