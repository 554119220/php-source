<?php
 class WeixinPay { protected $appid; protected $mch_id; protected $key; protected $openid; protected $out_trade_no; protected $body; protected $total_fee; function __construct($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee) { goto EGO65; pY31l: $this->mch_id = $mch_id; goto tUn5M; tUn5M: $this->key = $key; goto A0W2C; A0W2C: $this->out_trade_no = $out_trade_no; goto Tf67T; iuDVl: $this->openid = $openid; goto pY31l; EGO65: $this->appid = $appid; goto iuDVl; nt_zl: $this->total_fee = $total_fee; goto S73_0; Tf67T: $this->body = $body; goto nt_zl; S73_0: } public function pay() { $return = $this->weixinapp(); return $return; } private function unifiedorder() { goto LazE9; MK0U6: $parameters["\x73\x69\147\x6e"] = $this->getSign($parameters); goto Kt0_i; lz9CT: return $return; goto TuOV_; LazE9: $url = "\x68\x74\x74\160\x73\72\57\57\141\160\151\56\155\143\x68\x2e\x77\145\x69\170\x69\x6e\56\161\161\56\x63\157\155\57\x70\141\x79\57\165\156\x69\x66\x69\145\144\157\162\144\145\x72"; goto nUTOj; iCl1R: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60)); goto lz9CT; Kt0_i: $xmlData = $this->arrayToXml($parameters); goto iCl1R; nUTOj: $parameters = array("\x61\160\x70\x69\144" => $this->appid, "\x6d\143\x68\137\151\144" => $this->mch_id, "\x6e\x6f\156\x63\145\137\163\164\x72" => $this->createNoncestr(), "\x62\x6f\x64\x79" => $this->body, "\x6f\x75\x74\137\x74\162\141\144\x65\137\x6e\x6f" => $this->out_trade_no, "\x74\157\x74\141\154\137\x66\145\145" => $this->total_fee, "\163\x70\x62\x69\x6c\x6c\137\143\x72\x65\x61\x74\145\x5f\x69\x70" => "\61\71\62\56\x31\x36\70\56\60\56\61\x36\x31", "\x6e\157\164\x69\146\171\x5f\x75\162\x6c" => "\150\164\164\x70\x3a\57\57\167\x77\x77\x2e\x77\x65\151\170\x69\x6e\56\x71\161\56\x63\157\155\57\x77\170\160\x61\171\57\x70\x61\171\56\x70\x68\x70", "\x6f\x70\x65\x6e\x69\144" => $this->openid, "\x74\162\x61\x64\x65\x5f\x74\171\160\145" => "\x4a\x53\101\120\111"); goto MK0U6; TuOV_: } private static function postXmlCurl($xml, $url, $second = 30) { goto mTmMW; OIdgt: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto VVMkg; IS3s5: $data = curl_exec($ch); goto ETqt4; k6ROB: throw new WxPayException("\x63\x75\162\x6c\xe5\x87\xba\xe9\224\x99\357\274\214\xe9\224\x99\350\257\257\347\240\x81\72{$error}"); goto Vt_ME; VVMkg: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto ruoI4; ReZq7: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto OIdgt; vfxWx: curl_setopt($ch, CURLOPT_URL, $url); goto myFJc; FkdlZ: RmhRO: goto PRT56; Lc4KS: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto hYLtM; aeRcB: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto Lc4KS; mTmMW: $ch = curl_init(); goto sNjtq; juHQq: curl_close($ch); goto kiRyT; myFJc: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto aeRcB; hYLtM: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto Pevsc; kiRyT: return $data; goto FkdlZ; ruoI4: set_time_limit(0); goto IS3s5; ulY16: $error = curl_errno($ch); goto jOVwe; jOVwe: curl_close($ch); goto k6ROB; T39k5: uuO3n: goto juHQq; sNjtq: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto vfxWx; ETqt4: if ($data) { goto uuO3n; } goto ulY16; Pevsc: curl_setopt($ch, CURLOPT_POST, TRUE); goto ReZq7; Vt_ME: goto RmhRO; goto T39k5; PRT56: } private function arrayToXml($arr) { goto i5gDc; t0hLI: return $xml; goto ZtVUK; eZ_i6: $xml .= "\x3c\57\x72\x6f\157\164\76"; goto t0hLI; sS6df: QkZRb: goto eZ_i6; zHbsE: foreach ($arr as $key => $val) { goto iW2QD; KbK2g: $xml .= "\74" . $key . "\76" . arrayToXml($val) . "\74\x2f" . $key . "\76"; goto x3dCT; zOX24: Lu7lM: goto atdc5; rVpID: Go8i_: goto KbK2g; unmvb: goto HG6C0; goto rVpID; x3dCT: HG6C0: goto zOX24; toVi1: $xml .= "\74" . $key . "\x3e" . $val . "\74\x2f" . $key . "\x3e"; goto unmvb; iW2QD: if (is_array($val)) { goto Go8i_; } goto toVi1; atdc5: } goto sS6df; i5gDc: $xml = "\x3c\162\x6f\157\x74\x3e"; goto zHbsE; ZtVUK: } private function xmlToArray($xml) { goto n9l_y; j9r8B: $val = json_decode(json_encode($xmlstring), true); goto UyAK5; n9l_y: libxml_disable_entity_loader(true); goto z_nyh; UyAK5: return $val; goto nxrld; z_nyh: $xmlstring = simplexml_load_string($xml, "\123\x69\x6d\160\x6c\145\x58\x4d\x4c\105\154\145\x6d\x65\x6e\x74", LIBXML_NOCDATA); goto j9r8B; nxrld: } private function weixinapp() { goto v5qlx; RP33Z: return $parameters; goto KNzTM; xl1xG: $parameters = array("\141\x70\160\x49\x64" => $this->appid, "\164\x69\155\x65\123\x74\x61\x6d\x70" => '' . time() . '', "\156\157\x6e\x63\x65\123\x74\x72" => $this->createNoncestr(), "\160\141\x63\153\x61\147\145" => "\x70\x72\x65\160\141\x79\137\151\x64\75" . $unifiedorder["\x70\x72\145\160\141\x79\137\151\144"], "\163\x69\147\156\124\x79\x70\x65" => "\x4d\104\x35"); goto xLPf4; xLPf4: $parameters["\160\141\x79\123\x69\147\156"] = $this->getSign($parameters); goto RP33Z; v5qlx: $unifiedorder = $this->unifiedorder(); goto xl1xG; KNzTM: } private function createNoncestr($length = 32) { goto LxvwL; VhBxw: $i++; goto LtCHK; zKKeP: $str = ''; goto bGvUH; LxvwL: $chars = "\x61\142\143\x64\145\146\147\x68\x69\152\x6b\154\x6d\x6e\x6f\x70\161\x72\163\164\x75\x76\x77\170\x79\x7a\x30\x31\x32\63\x34\x35\66\67\70\x39"; goto zKKeP; W43ex: v43sI: goto xFjXS; wlzjv: ltLf1: goto VhBxw; LtCHK: goto nf1R2; goto W43ex; xFjXS: return $str; goto NM2m9; bGvUH: $i = 0; goto r5GIw; JDiND: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto wlzjv; r5GIw: nf1R2: goto ogrCo; ogrCo: if (!($i < $length)) { goto v43sI; } goto JDiND; NM2m9: } private function getSign($Obj) { goto zxcXb; Ypj0f: gEKbA: goto Y0oFd; Y0oFd: ksort($Parameters); goto hJ3OY; kCf7o: $String = $String . "\46\x6b\145\x79\75" . $this->key; goto S7fPb; S7fPb: $String = md5($String); goto AGdPs; AGdPs: $result_ = strtoupper($String); goto xRXCY; zxcXb: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; nu6OP: } goto Ypj0f; hJ3OY: $String = $this->formatBizQueryParaMap($Parameters, false); goto kCf7o; xRXCY: return $result_; goto pACDL; pACDL: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto slIn8; P5jUQ: $reqPar = substr($buff, 0, strlen($buff) - 1); goto zAYnx; slIn8: $buff = ''; goto R3TjK; AUh2F: if (!(strlen($buff) > 0)) { goto sE3T4; } goto P5jUQ; OlJLU: return $reqPar; goto Qgjf4; vnm1m: KlXDb: goto Tem0w; NdNMi: foreach ($paraMap as $k => $v) { goto YWI3q; LQfmT: P89uF: goto gWf4k; GYd1Y: $v = urlencode($v); goto LQfmT; gWf4k: $buff .= $k . "\75" . $v . "\x26"; goto Fi18A; YWI3q: if (!$urlencode) { goto P89uF; } goto GYd1Y; Fi18A: iKtZM: goto d8RRu; d8RRu: } goto vnm1m; zAYnx: sE3T4: goto OlJLU; Tem0w: $reqPar; goto AUh2F; R3TjK: ksort($paraMap); goto NdNMi; Qgjf4: } }