<?php
 namespace app\boguan\validate; use app\api\service\Token; use app\lib\enum\ScopeEnum; use app\lib\exception\ForbiddenException; use app\lib\exception\ParameterException; use app\lib\exception\TokenException; use think\Request; use think\Validate; class BaseValidate extends Validate { public function goCheck() { goto bv5oe; nDdUr: return true; goto yqmiI; BLDP_: hCm8Z: goto nDdUr; TR6GA: if ($this->check($params)) { goto hCm8Z; } goto G6Ue6; w9pFL: $params["\x74\157\153\x65\156"] = $request->header("\x74\157\x6b\145\156"); goto TR6GA; ZJnCU: $params = $request->param(); goto w9pFL; hFC62: throw $exception; goto BLDP_; G6Ue6: $exception = new ParameterException(["\x6d\163\x67" => is_array($this->error) ? implode("\73", $this->error) : $this->error]); goto hFC62; bv5oe: $request = Request::instance(); goto ZJnCU; yqmiI: } public function getDataByRule($arrays) { goto IGf97; f9Llb: m1Hr4: goto RZfpl; MBxnx: Q8xwg: goto Ag2fT; IGf97: if (!(array_key_exists("\165\163\145\x72\137\x69\144", $arrays) | array_key_exists("\x75\151\x64", $arrays))) { goto m1Hr4; } goto SiY2j; Ag2fT: return $newArray; goto V5Ow0; AQNay: foreach ($this->rule as $key => $value) { $newArray[$key] = $arrays[$key]; UWjrs: } goto MBxnx; SiY2j: throw new ParameterException(["\x6d\x73\x67" => "\xe5\217\x82\346\225\xb0\xe4\270\255\345\x8c\205\345\220\xab\xe6\234\x89\xe9\x9d\236\346\xb3\225\347\x9a\204\345\217\202\xe6\225\260\345\x90\215\x75\x73\x65\162\x5f\x69\144\346\x88\226\350\200\205\x75\x69\x64"]); goto f9Llb; RZfpl: $newArray = []; goto AQNay; V5Ow0: } protected function isPositiveInteger($value, $rule = '', $data = '', $field = '') { goto hLKY3; lFk1X: return false; goto drVua; hLKY3: if (!(is_numeric($value) && is_int($value + 0) && $value + 0 > 0)) { goto VRwTN; } goto gmYok; H5iTN: VRwTN: goto lFk1X; gmYok: return true; goto H5iTN; drVua: } protected function isNotEmpty($value, $rule = '', $data = '', $field = '') { goto jFCcm; Aek1d: return true; goto HRF4J; jFCcm: if (empty($value)) { goto cyw9w; } goto Aek1d; HRF4J: goto GkmM0; goto OlcMb; fXvEk: GkmM0: goto XDZSA; t_viS: return false; goto fXvEk; OlcMb: cyw9w: goto t_viS; XDZSA: } protected function isMobile($value) { goto efDNj; aMcwa: $telRule = "\x5e\x28\133\60\55\71\x5d\173\63\54\64\175\55\x29\x3f\x5b\x30\55\71\x5d\x7b\x37\54\x38\x7d\x24\136"; goto O__y5; BY5wT: $telResult = preg_match($telRule, $value); goto K7Sdt; O__y5: $mobResult = preg_match($mobRule, $value); goto BY5wT; MwrJG: goto eV06F; goto htJp1; jQ7MV: eV06F: goto NyHKs; hE4So: return false; goto MwrJG; efDNj: $mobRule = "\136\61\50\x33\x7c\x34\174\65\174\x37\174\x38\x29\133\60\x2d\71\x5d\134\144\x7b\70\175\44\x5e"; goto aMcwa; htJp1: SHA6H: goto pGif3; pGif3: return true; goto jQ7MV; K7Sdt: if ($mobResult || $telResult) { goto SHA6H; } goto hE4So; NyHKs: } protected function isMeetCondition($value) { goto WTFHR; LMaqb: goto fDTbf; goto PzuCZ; FE3uO: return false; goto LMaqb; cF4St: return "\344\270\215\xe8\203\xbd\xe5\xb0\x91\xe4\272\216\x30"; goto n_pNz; OOUI4: if ($value <= 0) { goto bfsTt; } goto gKz0j; WTFHR: if (empty($value)) { goto PBBIX; } goto OOUI4; gKz0j: if ($value > 5) { goto NVd9q; } goto qqtsd; hKyt0: PBBIX: goto FE3uO; EZIom: fDTbf: goto uJ0JP; sTbiU: NVd9q: goto jviUn; qqtsd: goto fDTbf; goto hKyt0; n_pNz: goto fDTbf; goto sTbiU; PzuCZ: bfsTt: goto cF4St; jviUn: return "\xe4\xb8\x8d\xe8\203\275\xe5\244\xa7\xe4\272\216\65"; goto EZIom; uJ0JP: } }