<?php
 namespace app\boguan\controller\platform; use app\boguan\controller\Platform; use app\boguan\model\Comment as CommentModel; use app\boguan\model\User as UserModel; use app\boguan\model\Order as OrderModel; class Comment extends Platform { public function index() { goto EOrpF; lAYs8: $userIds = implode("\54", $userIds); goto zKn3i; YmneY: $wheres["\x6f\x72\144\x65\162\x5f\x69\x64"] = ["\151\x6e", $orderIds]; goto R61Hr; jV0OG: $keyword = input("\165\163\x65\162"); goto woVAc; hTpvK: if (!$order_no) { goto IeSDF; } goto Y3oB7; zKn3i: $wheres["\165\163\x65\162\137\x69\144"] = ["\151\156", $userIds]; goto hqrBz; tWczo: $comment = CommentModel::with("\157\162\144\x65\162\x73")->with("\x75\x73\145\162")->where($wheres)->where(["\165\156\151\141\143\151\x64" => $this->uniacid])->order("\x63\x72\145\x61\164\145\x5f\164\151\x6d\x65", "\x64\145\x73\143")->paginate(8, false, ["\x71\x75\145\162\171" => $setWhere]); goto NuQzd; YB6ur: if (!$score) { goto jeT3x; } goto on4Nw; XFoFF: $orderIds = implode("\54", $orderIds); goto YmneY; rkG3d: return $this->fetch(); goto wDept; PeCTR: foreach ($user as $value) { $userIds[] = $value["\x69\144"]; ZDqed: } goto bMyjI; bMyjI: WyJjn: goto lAYs8; woVAc: if (!$keyword) { goto b10RT; } goto bz1F0; hqrBz: b10RT: goto expc7; m2Xb7: $userIds = []; goto PeCTR; on4Nw: $wheres["\163\x63\x6f\x72\x65"] = $score; goto Ns0nc; bz1F0: $user = UserModel::where("\x75\x6e\151\141\x63\x69\144", $this->uniacid)->where("\x6e\151\143\153\x6e\x61\155\145", "\154\x69\153\x65", "\x25{$keyword}\x25")->select(); goto m2Xb7; EOrpF: $wheres = []; goto jV0OG; ZacMU: foreach ($order as $v) { $orderIds[] = $v["\151\x64"]; kzIIo: } goto rQu7k; Y3oB7: $order = OrderModel::where("\165\x6e\151\x61\x63\x69\x64", $this->uniacid)->where("\x6f\154\x64\x5f\157\162\144\145\162\137\x6e\157", "\x6c\151\153\x65", "\45{$order_no}\45")->select(); goto wOyEx; bsoeJ: $score = input("\x73\x63\x6f\162\145"); goto YB6ur; qsk0K: $this->assign(["\x63\x6f\155\155\x65\156\x74" => $comment, "\160\141\147\x65" => $page]); goto rkG3d; Ns0nc: jeT3x: goto XRs1r; R61Hr: IeSDF: goto bsoeJ; XRs1r: $setWhere = ["\157\162\144\145\162\x5f\156\x6f" => $order_no, "\163\143\x6f\162\145" => $score, "\165\x73\145\162" => $keyword]; goto tWczo; NuQzd: $page = $comment->render(); goto qsk0K; wOyEx: $orderIds = []; goto ZacMU; expc7: $order_no = input("\157\162\x64\145\162\x5f\156\x6f"); goto hTpvK; rQu7k: I2yN1: goto XFoFF; wDept: } public function add() { goto n7t8l; o8428: $productId = ''; goto PY0Bb; ugKux: if (!(isset($data["\x63\x72\x65\141\164\x65\x5f\x74\151\155\145"]) && $data["\143\162\x65\141\164\145\x5f\x74\x69\155\145"] != '')) { goto n3C1W; } goto wkxf9; PY0Bb: foreach ($productData as $key => $value) { $productId = (int) $value["\x69\x64"]; eNy5b: } goto yRnFe; CsSLs: $productList = json_encode($product["\x70\162\x6f\x64\x75\143\164"], JSON_UNESCAPED_UNICODE); goto CFv3J; e_QLe: XBV99: goto hvhvG; RlWWX: $validate = \think\Loader::validate("\103\x6f\155\155\x65\156\164"); goto rX2jx; wkxf9: $data["\143\162\x65\x61\x74\145\137\164\151\155\x65"] = strtotime($data["\x63\162\x65\141\x74\x65\x5f\164\151\x6d\145"]); goto AvUX2; g7o4J: nPQVM: goto at5Sq; EjZ1W: return json(["\x6d\x73\x67" => $validate->getError(), "\145\162\x72\x6f\162\x43\157\144\145" => 0]); goto e_QLe; Ob_40: $productData = input("\160\157\x73\164\56\x70\x72\157\144\x75\143\164\x2f\141"); goto rKGJe; hl4Tf: $data["\165\x6e\151\141\x63\x69\x64"] = session("\165\156\x69\141\143\151\x64"); goto o8428; N31iS: $this->assign(["\151\155\x61\x67\x65\x4c\151\163\164" => $imageList, "\160\162\157\x64\x75\143\164\x4c\x69\x73\164" => $productList, "\x63\x61\164\145\x67\x6f\162\171\x4c\151\x73\x74" => $categoryList]); goto RsR51; at5Sq: return json(["\155\163\147" => "\xe6\267\273\345\x8a\xa0\xe6\210\x90\xe5\x8a\237", "\145\x72\x72\x6f\162\x43\157\144\145" => 1]); goto n1GqI; hvhvG: $result = CommentModel::create($data); goto uSmIN; Pj1sO: $data = input("\x70\157\163\164\56\x64\141\164\x61\x2f\x61"); goto Ob_40; RsR51: return $this->fetch(); goto NzrVO; VGtJV: $product = $this->productList(); goto CsSLs; eYyAO: $data["\x70\162\157\x64\165\x63\x74\x5f\151\144"] = $productId; goto RlWWX; AvUX2: n3C1W: goto BHKtd; n7t8l: $imageList = json_encode($this->imageList()); goto VGtJV; uSmIN: if ($result !== false) { goto nPQVM; } goto AyyXj; rX2jx: if ($validate->scene("\x61\x64\144")->check($data)) { goto XBV99; } goto EjZ1W; q2NDF: KRB6w: goto N31iS; n1GqI: AtFb0: goto q2NDF; AyyXj: return json(["\155\163\x67" => "\xe6\xb7\xbb\xe5\212\240\345\xa4\261\xe8\264\245", "\145\162\x72\x6f\162\103\x6f\144\x65" => 0]); goto n5iSx; G2x9t: if (!request()->isAjax()) { goto KRB6w; } goto Pj1sO; fhVRV: $data["\x69\x6d\141\x67\x65"] = input("\160\157\163\x74\x2e\151\155\x61\x67\x65\x2f\141"); goto ugKux; BHKtd: $data["\x69\155\141\147\x65"] = json_encode($data["\x69\x6d\x61\147\145"], true); goto hl4Tf; rKGJe: $data["\141\166\x61\x74\141\162"] = input("\160\x6f\x73\x74\x2e\141\x76\x61\x74\141\162"); goto fhVRV; yRnFe: P1D0r: goto eYyAO; n5iSx: goto AtFb0; goto g7o4J; CFv3J: $categoryList = json_encode($product["\143\x61\x74\145\x67\x6f\x72\x79"], JSON_UNESCAPED_UNICODE); goto G2x9t; NzrVO: } public function reply() { goto EuORy; MTNss: return json(["\155\163\x67" => "\346\225\xb0\xe6\215\xae\xe5\xbc\202\345\xb8\270", "\x65\162\162\157\x72\x43\157\x64\x65" => 0]); goto zvElt; t2ZEv: goto C19Uj; goto cZeld; EuORy: $id = input("\151\x64"); goto QaPaz; QaPaz: $comment = CommentModel::get($id); goto I5usw; hlqvL: C19Uj: goto CY4CG; zvElt: QZ0gw: goto SzRjC; ElzxK: $data = json_decode(input("\144\141\164\x61"), true); goto NtEkF; Doo5y: return ["\x6d\163\147" => "\xe6\x93\x8d\xe4\275\234\345\244\261\350\xb4\245", "\145\162\162\157\x72\103\x6f\x64\x65" => 0]; goto t2ZEv; I5usw: if (!request()->isAjax()) { goto eAwxR; } goto ElzxK; GbOZP: $this->assign("\143\x6f\x6d\155\x65\x6e\x74", $comment); goto rpfg6; ldYiu: if ($result !== false) { goto wQjAf; } goto Doo5y; NtEkF: if (!($data["\151\144"] == '')) { goto QZ0gw; } goto MTNss; SzRjC: $result = CommentModel::update($data); goto ldYiu; rpfg6: return $this->fetch(); goto KwqK3; CY4CG: eAwxR: goto GbOZP; cZeld: wQjAf: goto h1XuQ; h1XuQ: return ["\155\163\x67" => "\346\223\x8d\344\xbd\234\xe6\x88\x90\xe5\x8a\237", "\145\162\x72\x6f\x72\x43\x6f\144\x65" => 1]; goto hlqvL; KwqK3: } public function updateStatus() { goto zz3oL; hwlzd: $result = CommentModel::update($data); goto j45RF; R_zZd: $data = input("\160\x6f\163\164\56"); goto R2uAX; gvy2R: V9JWK: goto om6Zm; G7o8a: ZxpKd: goto hwlzd; D0aL6: Cjrnd: goto RCdDP; om6Zm: return json(["\x6d\x73\147" => "\xe4\277\256\xe6\224\271\346\210\220\xe5\x8a\x9f", "\x75\x72\154" => url(''), "\145\162\x72\x6f\162\x43\x6f\144\145" => 1]); goto jfAtu; zz3oL: if (!request()->isAjax()) { goto Cjrnd; } goto R_zZd; DVb1H: return json(["\x6d\x73\147" => "\xe4\xbf\xae\346\x94\xb9\xe5\244\261\xe8\xb4\xa5", "\x65\162\162\157\x72\103\x6f\144\145" => 0]); goto bpyng; XYwWI: return json(["\x6d\x73\x67" => "\151\x64\344\xb8\x8d\xe5\xad\x98\xe5\x9c\250", "\145\x72\162\x6f\x72\103\157\x64\x65" => 0]); goto G7o8a; j45RF: if ($result !== false) { goto V9JWK; } goto DVb1H; jfAtu: wvD1k: goto D0aL6; bpyng: goto wvD1k; goto gvy2R; R2uAX: if (!($data["\151\144"] == '')) { goto ZxpKd; } goto XYwWI; RCdDP: } public function del() { goto zqkHs; ergxL: sze4S: goto z3xZE; ASgdy: if (!($id == '')) { goto mf0nt; } goto x8N8L; CbbD4: $id = input("\x69\144"); goto ASgdy; u1eL_: $result = CommentModel::destroy($id); goto kCrsp; u4ZZd: mf0nt: goto u1eL_; u1awA: return json(["\x6d\x73\147" => "\345\x88\xa0\351\x99\244\345\244\261\xe8\xb4\245", "\x65\162\x72\157\162\x43\x6f\x64\145" => 0]); goto xMALm; x8N8L: return json(["\155\x73\147" => "\151\x64\xe4\270\215\xe5\255\x98\xe5\234\250", "\x65\x72\x72\157\x72\x43\x6f\144\145" => 0]); goto u4ZZd; zqkHs: if (!request()->isAjax()) { goto sze4S; } goto CbbD4; xMALm: goto JFqyb; goto ZFXs1; eLQ4G: return json(["\x6d\163\x67" => "\345\x88\240\351\231\244\xe6\210\220\345\212\x9f", "\145\162\x72\157\x72\103\x6f\x64\145" => 1]); goto cj0dd; cj0dd: JFqyb: goto ergxL; kCrsp: if ($result !== false) { goto tsy0u; } goto u1awA; ZFXs1: tsy0u: goto eLQ4G; z3xZE: } }