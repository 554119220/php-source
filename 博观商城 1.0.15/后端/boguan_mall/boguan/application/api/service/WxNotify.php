<?php
 namespace app\api\service; use app\api\model\Order as OrderModel; use think\Db; use think\Exception; use think\Loader; use think\Log; use app\api\service\Product as ProductService; Loader::import("\x57\170\x50\141\x79\56\127\x78\x50\x61\x79", EXTEND_PATH, "\56\x41\x70\x69\x2e\x70\150\160"); class WxNotify extends \WxPayNotify { public function NotifyProcess($data, &$msg) { goto aEJVF; l_2Al: $orderNo = $data["\157\165\x74\137\x74\x72\141\144\145\137\x6e\x6f"]; goto nA3PZ; hzH1B: try { goto q4sOn; CI2zO: Db::commit(); goto cfvuu; wOIrV: $this->updateOrderStatus($order->id, 1); goto UyPhb; T3vRl: $productService->reduceStock($order["\163\x6e\x61\160\137\151\x6e\x66\x6f"]); goto XD9g0; q4sOn: $order = OrderModel::where("\x6f\162\x64\x65\162\137\156\x6f", "\75", $orderNo)->find(); goto T_fk6; T_fk6: if (!($order && $order->status == 0)) { goto TbwWZ; } goto wOIrV; UyPhb: $productService = new ProductService(); goto T3vRl; XD9g0: TbwWZ: goto CI2zO; cfvuu: return true; goto hbdnA; hbdnA: } catch (Exception $e) { Log::record($e); return false; } goto ssns2; rUR5U: return true; goto r7xvE; r7xvE: goto JFHh_; goto c000b; JIOv7: Log::record($data); goto J9ilD; WlTl3: if ($data["\x72\145\163\x75\154\x74\x5f\143\157\x64\x65"] == "\123\125\x43\x43\x45\123\x53") { goto Vmbxi; } goto JIOv7; aEJVF: Log::record($data); goto WVW4m; ssns2: JFHh_: goto reQUz; nA3PZ: Db::startTrans(); goto hzH1B; WVW4m: Log::record($msg); goto WlTl3; J9ilD: Db::rollback(); goto rUR5U; c000b: Vmbxi: goto l_2Al; reQUz: } private function updateOrderStatus($orderID, $status) { OrderModel::where("\151\144", "\75", $orderID)->update(["\x73\x74\141\164\165\163" => $status, "\160\141\171\x5f\164\x69\x6d\x65" => time()]); } }