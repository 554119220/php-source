<?php
global $_W, $_GPC;
include 'common.php';
load()->func('tpl');
$base = $this->get_base();
$title = $base['title'];
//查询缓存是否存在，如果有，就直接登录后台，如果没有就显示登录页
$webtoken = $_SESSION['webtoken']; //cache_load('webtoken');
if ($webtoken == '') {
    header('Location: '.$_W['siteroot'].'web/index.php?c=user&a=login&referer='.urlencode($_W['siteroot'].'app/'.$this->createMobileUrl('manage_login_go')));
} else {
    //通过缓存查找到管理员信息
    $manageid = $_SESSION['manageid']; //cache_load('manageid');
    $manage = pdo_fetch("SELECT * FROM " . tablename('bc_community_jurisdiction') . " WHERE weid=:uniacid AND id=:id", array(':uniacid' => $_W['uniacid'], 'id' => $manageid));
    $townid = $manage['townid'];
    $menulist = pdo_fetchall("SELECT * FROM " . tablename('bc_community_menu') . " WHERE weid=:uniacid AND townid=:townid ORDER BY meid DESC", array(':uniacid' => $_W['uniacid'], ':townid' => $townid));
//获取发帖权限表
    $authority = pdo_fetchall("SELECT * FROM" . tablename('bc_community_authority') . "WHERE weid=:uniacid ORDER BY id DESC", array(':uniacid' => $_W['uniacid']));
    $nav = intval($_GPC['nav']);
    if ($nav == 0) {
        $nav = 1;
    }





    $version = '../addons/nxb_community/xj/data/version.php';
    $ver = include($version);
    print_r($ver);
    $ver = $ver['ver'];
    $domain=getTopDomainhuo();
    $updatehost = 'http://sq.nx456.cn/update.php';
    $lastver = file_get_contents(($updatehost . '?a=check&v=') . $ver);

    if ($_GET['act'] == 'update') {
        $key = $_GPC['update_key'];
        include '../addons/nxb_community/xj/inc/pclzip.lib.php';
        //下载和备份目录创建
        mkdirs('../addons/nxb_community/xj/data/backup/');
        mkdirs('../addons/nxb_community/xj/data/logs/Temp/update');




        //备份
        $bakzip = '../addons/nxb_community/xj/data/backup/'.date("YmdHis",time()).".zip";
        $bak = new PclZip($bakzip);
        $bak->create('../addons/nxb_community/',PCLZIP_OPT_REMOVE_PATH,'../addons/nxb_community/');
        $bak->delete(PCLZIP_OPT_BY_NAME,'xj/data/backup/');




        if ($lastver !== $ver) {
            $hosturl = urlencode('http://' . $_SERVER['HTTP_HOST'] . $_SERVER['PHP_SELF']);
            $updatehost = 'http://sq.nx456.cn/update.php';
            $updatehosturl = $updatehost . '?a=update&v=' . $ver . '&u=' . $hosturl . '&key='.$key;
            $updatenowinfo = file_get_contents($updatehosturl);
			$updatenowinfo = str_replace(array("\r\n", "\r", "\n"), "", $updatenowinfo);

            if (strstr($updatenowinfo, 'zip')) {
                $pathurl = $updatehost . '?a=down&f=' . $updatenowinfo;
                $updatedir = '../addons/nxb_community/xj/data/logs/Temp/update';
                delDirAndFile($updatedir);
                get_file($pathurl, $updatenowinfo, $updatedir);
                $updatezip = $updatedir . '/' . $updatenowinfo;
                $archive = new PclZip($updatezip);
                if ($archive -> extract(PCLZIP_OPT_PATH, '../addons/nxb_community/', PCLZIP_OPT_REPLACE_NEWER) == 0){
                    message('远程升级文件不存在.升级失败', $this->createMobileUrl('manage_update', array()));
                }else{
                    //更新数据库
                    if (file_exists('../addons/nxb_community/xj/data/logs/Temp/update/update.php')) {
                        include '../addons/nxb_community/xj/data/logs/Temp/update/update.php';
                        pdo_run($sql,'ims_');
                    }
                    message('升级完成', $this->createMobileUrl('manage_update', array()));
                }
            }else{

                message($updatenowinfo.$hosturl, $this->createMobileUrl('manage_update', array()));
            }
        } else {
            message('已经是最新系统 不需要升级', $this->createMobileUrl('manage_update', array()));
        }
    }elseif ($_GET['act'] == 'save') {
        $key = $_GPC['update_key'];
        $file = '../addons/nxb_community/xj/data/key.txt';
        $fp = fopen($file, 'w');
        fwrite($fp, $key);
        fclose($fp);
    }

    $file = '../addons/nxb_community/xj/data/key.txt';
    $fp = fopen($file, 'r');
    $update_key = fread($fp,filesize($file));
    fclose($fp);



    include $this->template('manage_update');
}


//循环删除目录和文件函数
function delDirAndFile($dirName)
{
    $files = 0;
    if ($handle = opendir("$dirName")) {
        while (false !== ($item = readdir($handle))) {
            if ($item != "." && $item != "..") {
                if (is_dir("$dirName/$item")) {
                    delDirAndFile("$dirName/$item");
                } else {
                    if (unlink("$dirName/$item")) $files++;
                }
            }
        }
        closedir($handle);
        if (rmdir($dirName)) $files++;
    }
}

function get_file($url, $filename = '', $save_dir = '', $type = 0)
{
    if (trim($url) == '') {
        return false;
    }
    if (trim($save_dir) == '') {
        $save_dir = './';
    }
    if (0 !== strrpos($save_dir, '/')) {
        $save_dir .= '/';
    }
    //创建保存目录
    if (!file_exists($save_dir) && !mkdir($save_dir, 0777, true)) {
        return false;
    }
    //获取远程文件所采用的方法
    if ($type) {
        $ch = curl_init();
        $timeout = 5;
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
        $content = curl_exec($ch);
        curl_close($ch);
    } else {
        ob_start();
        readfile($url);
        $content = ob_get_contents();
        ob_end_clean();
    }
    $size = strlen($content);
    //文件大小
    $fp2 = @fopen($save_dir . $filename, 'a');
    fwrite($fp2, $content);
    fclose($fp2);
    unset($content, $url);
    return array(
        'file_name' => $filename,
        'save_path' => $save_dir . $filename
    );
}
//创建目录
function mkdirs($dir, $mode = 0777)
{
    if (is_dir($dir) || @mkdir($dir, $mode)) return TRUE;
    if (!mkdirs(dirname($dir), $mode)) return FALSE;
    return @mkdir($dir, $mode);
}