<?php
 namespace Qiniu\Storage; use Qiniu\Config; use Qiniu\Http\HttpClient; use Qiniu\Storage\ResumeUploader; use Qiniu\Storage\FormUploader; final class UploadManager { private $config; public function __construct(Config $config = null) { goto Tnjic; ADcL7: $config = new Config(); goto FYIh6; Tnjic: if (!($config === null)) { goto AguRy; } goto ADcL7; FYIh6: AguRy: goto hogfZ; hogfZ: $this->config = $config; goto fDS3z; fDS3z: } public function put($upToken, $key, $data, $params = null, $mime = "\x61\160\x70\x6c\x69\x63\x61\164\x69\x6f\x6e\x2f\157\x63\164\145\164\x2d\163\164\162\145\141\x6d", $fname = null) { $params = self::trimParams($params); return FormUploader::put($upToken, $key, $data, $this->config, $params, $mime, $fname); } public function putFile($upToken, $key, $filePath, $params = null, $mime = "\x61\x70\160\154\151\x63\x61\164\x69\157\156\57\x6f\x63\x74\145\x74\55\163\164\162\145\141\x6d", $checkCrc = false) { goto cWloM; Jdgaw: $stat = fstat($file); goto eROzB; vKz1c: $params = self::trimParams($params); goto Jdgaw; ZmiB_: $up = new ResumeUploader($upToken, $key, $file, $size, $params, $mime, $this->config); goto Of0aj; eROzB: $size = $stat["\163\151\172\145"]; goto VDx2o; cWloM: $file = fopen($filePath, "\162\142"); goto qKgjQ; EEyll: z2ARZ: goto ZmiB_; kWSCb: lvRZZ: goto vKz1c; RAv_5: $data = fread($file, $size); goto kKSKm; Of0aj: $ret = $up->upload(basename($filePath)); goto jVJeW; qKgjQ: if (!($file === false)) { goto lvRZZ; } goto sWWU2; sWWU2: throw new \Exception("\x66\x69\154\145\40\143\141\156\x20\x6e\x6f\x74\40\x6f\x70\x65\156", 1); goto kWSCb; tkdDm: if (!($data === false)) { goto AiAbw; } goto V54Dh; VDx2o: if (!($size <= Config::BLOCK_SIZE)) { goto z2ARZ; } goto RAv_5; jVJeW: fclose($file); goto UtMeU; UtMeU: return $ret; goto Py4R4; xGgGg: AiAbw: goto SJWe8; SJWe8: return FormUploader::put($upToken, $key, $data, $this->config, $params, $mime, basename($filePath)); goto EEyll; V54Dh: throw new \Exception("\x66\x69\x6c\x65\40\143\141\156\x20\156\157\x74\40\162\145\141\x64", 1); goto xGgGg; kKSKm: fclose($file); goto tkdDm; Py4R4: } public static function trimParams($params) { goto r7OHX; Lz6dW: WsdKu: goto m4cVM; m4cVM: return $ret; goto uQw_k; JEJTb: JOUGS: goto rBqfM; r7OHX: if (!($params === null)) { goto JOUGS; } goto UtMC6; rBqfM: $ret = array(); goto CQPPL; CQPPL: foreach ($params as $k => $v) { goto krun0; A2_2G: Ldor0: goto AWjFI; AWjFI: IGT_u: goto Vov80; KQgBr: $ret[$k] = $v; goto A2_2G; krun0: $pos = strpos($k, "\x78\72"); goto DdcqU; DdcqU: if (!($pos === 0 && !empty($v))) { goto Ldor0; } goto KQgBr; Vov80: } goto Lz6dW; UtMC6: return null; goto JEJTb; uQw_k: } }