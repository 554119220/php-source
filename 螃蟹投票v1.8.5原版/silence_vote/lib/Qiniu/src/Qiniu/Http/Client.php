<?php
 namespace Qiniu\Http; use Qiniu\Config; use Qiniu\Http\Request; use Qiniu\Http\Response; final class Client { public static function get($url, array $headers = array()) { $request = new Request("\x47\x45\124", $url, $headers); return self::sendRequest($request); } public static function delete($url, array $headers = array()) { $request = new Request("\x44\x45\x4c\x45\x54\105", $url, $headers); return self::sendRequest($request); } public static function post($url, $body, array $headers = array()) { $request = new Request("\x50\x4f\x53\124", $url, $headers, $body); return self::sendRequest($request); } public static function multipartPost($url, $fields, $name, $fileName, $fileBody, $mimeType = null, array $headers = array()) { goto yqmNC; yQMKE: array_push($data, "\103\x6f\156\x74\x65\156\164\55\104\151\163\160\x6f\163\151\x74\x69\x6f\x6e\x3a\x20\x66\157\162\x6d\x2d\x64\141\164\x61\73\x20\x6e\141\x6d\145\75\x22{$name}\42\73\40\x66\x69\154\x65\156\141\x6d\145\75\42{$finalFileName}\42"); goto sQ7se; ciELN: array_push($data, "\x2d\x2d" . $mimeBoundary . "\55\55"); goto sB0ET; TVWNW: $headers["\x43\x6f\x6e\164\145\x6e\x74\55\x54\x79\160\x65"] = $contentType; goto Iw2mu; sB0ET: array_push($data, ''); goto UNG9o; l_gct: $mimeBoundary = md5(microtime()); goto nM4oZ; nM4oZ: foreach ($fields as $key => $val) { goto Cp1tJ; YNYrG: array_push($data, $val); goto UxS0L; wHBH7: array_push($data, ''); goto YNYrG; UxS0L: yPEeH: goto pguFL; WaUEr: array_push($data, "\103\157\156\164\145\156\x74\x2d\104\x69\163\x70\157\x73\x69\x74\x69\x6f\x6e\x3a\x20\146\157\162\155\55\144\141\x74\141\x3b\x20\156\x61\155\x65\75\42{$key}\42"); goto wHBH7; Cp1tJ: array_push($data, "\x2d\55" . $mimeBoundary); goto WaUEr; pguFL: } goto fHHXJ; kJgyX: $contentType = "\x6d\x75\154\x74\151\x70\141\x72\x74\57\146\157\162\x6d\x2d\x64\141\x74\141\x3b\40\142\x6f\x75\x6e\144\141\x72\x79\x3d" . $mimeBoundary; goto TVWNW; Wnpe7: $finalFileName = self::escapeQuotes($fileName); goto yQMKE; POSiC: array_push($data, $fileBody); goto ciELN; sQ7se: array_push($data, "\x43\x6f\x6e\164\145\156\164\x2d\x54\171\160\145\x3a\40{$finalMimeType}"); goto EdfY1; yqmNC: $data = array(); goto l_gct; EdfY1: array_push($data, ''); goto POSiC; lM59Z: return self::sendRequest($request); goto rqoX8; UNG9o: $body = implode("\xd\12", $data); goto kJgyX; fHHXJ: kX2CG: goto gfOGy; gfOGy: array_push($data, "\55\x2d" . $mimeBoundary); goto n3Fww; n3Fww: $finalMimeType = empty($mimeType) ? "\141\160\x70\x6c\151\x63\141\x74\x69\x6f\156\x2f\157\143\164\x65\x74\55\163\x74\162\145\x61\x6d" : $mimeType; goto Wnpe7; Iw2mu: $request = new Request("\x50\117\123\x54", $url, $headers, $body); goto lM59Z; rqoX8: } private static function userAgent() { goto hDLSd; Di3U1: $ua = "{$sdkInfo}\x20{$envInfo}\40\x50\x48\x50\57{$phpVer}"; goto MrvpX; XDhjj: $systemInfo = php_uname("\x73"); goto Kb3Ux; ptDIC: $envInfo = "\x28{$systemInfo}\57{$machineInfo}\x29"; goto UmkYs; UmkYs: $phpVer = phpversion(); goto Di3U1; hDLSd: $sdkInfo = "\121\151\x6e\151\x75\120\x48\120\x2f" . Config::SDK_VER; goto XDhjj; Kb3Ux: $machineInfo = php_uname("\x6d"); goto ptDIC; MrvpX: return $ua; goto lqhV2; lqhV2: } public static function sendRequest($request) { goto C8llt; iRQhI: $header_size = curl_getinfo($ch, CURLINFO_HEADER_SIZE); goto T3hJN; qA5Wk: $ret = curl_errno($ch); goto f8yGg; Q4lC7: IV7c9: goto SUAX1; oSWSv: $options[CURLOPT_POSTFIELDS] = $request->body; goto oPEAO; nmJ65: vFePl: goto D74oN; h5S0t: $result = curl_exec($ch); goto G00fe; D74oN: curl_setopt($ch, CURLOPT_HTTPHEADER, array("\105\x78\160\x65\143\164\x3a")); goto jL04b; jL04b: if (empty($request->body)) { goto Q3roc; } goto oSWSv; FQTx6: $options[CURLOPT_FOLLOWLOCATION] = true; goto DXLem; BkidJ: foreach ($request->headers as $key => $val) { array_push($headers, "{$key}\x3a\x20{$val}"); vQAkl: } goto Q4lC7; C8llt: $t1 = microtime(true); goto mfqir; f8yGg: if (!($ret !== 0)) { goto c7qhM; } goto O7one; XTTrd: curl_close($ch); goto YZICV; qUbAe: $duration = round($t2 - $t1, 3); goto qA5Wk; O7one: $r = new Response(-1, $duration, array(), null, curl_error($ch)); goto UwKUT; bbOAo: $headers = array(); goto BkidJ; mfqir: $ch = curl_init(); goto OOxJM; LFATd: c7qhM: goto ARmHn; DXLem: i8AHW: goto jAkjG; ARmHn: $code = curl_getinfo($ch, CURLINFO_HTTP_CODE); goto iRQhI; xA9Mu: return $r; goto LFATd; wi30j: curl_setopt_array($ch, $options); goto h5S0t; T3hJN: $headers = self::parseHeaders(substr($result, 0, $header_size)); goto N188c; oPEAO: Q3roc: goto wi30j; YZICV: return new Response($code, $duration, $headers, $body, null); goto iJnoo; UwKUT: curl_close($ch); goto xA9Mu; jAkjG: if (empty($request->headers)) { goto vFePl; } goto bbOAo; vFQz0: if (!(!ini_get("\x73\x61\146\145\x5f\x6d\x6f\144\x65") && !ini_get("\x6f\160\x65\x6e\137\x62\x61\x73\145\144\x69\162"))) { goto i8AHW; } goto FQTx6; G00fe: $t2 = microtime(true); goto qUbAe; OOxJM: $options = array(CURLOPT_USERAGENT => self::userAgent(), CURLOPT_RETURNTRANSFER => true, CURLOPT_SSL_VERIFYPEER => false, CURLOPT_SSL_VERIFYHOST => false, CURLOPT_HEADER => true, CURLOPT_NOBODY => false, CURLOPT_CUSTOMREQUEST => $request->method, CURLOPT_URL => $request->url); goto vFQz0; SUAX1: $options[CURLOPT_HTTPHEADER] = $headers; goto nmJ65; N188c: $body = substr($result, $header_size); goto XTTrd; iJnoo: } private static function parseHeaders($raw) { goto hOdMi; HE0cJ: foreach ($headerLines as $line) { goto SHWs7; R2hRI: TThk5: goto SKVl3; SHWs7: $headerLine = trim($line); goto W8UAj; AK6Ld: ouHpL: goto R2hRI; RLco4: $headers[$kv[0]] = trim($kv[1]); goto AK6Ld; W8UAj: $kv = explode("\72", $headerLine); goto TrfpC; TrfpC: if (!(count($kv) > 1)) { goto ouHpL; } goto Klmio; Klmio: $kv[0] = self::ucwordsHyphen($kv[0]); goto RLco4; SKVl3: } goto Dr6Y8; Q4nYz: return $headers; goto L4M3B; ngnKI: $headerLines = explode("\15\xa", $raw); goto HE0cJ; Dr6Y8: OjUqH: goto Q4nYz; hOdMi: $headers = array(); goto ngnKI; L4M3B: } private static function escapeQuotes($str) { goto neddQ; l3h1p: return str_replace($find, $replace, $str); goto Bes7c; n3Eel: $replace = array("\x5c\x5c", "\134\x22"); goto l3h1p; neddQ: $find = array("\134", "\x22"); goto n3Eel; Bes7c: } private static function ucwordsHyphen($str) { return str_replace("\55\40", "\x2d", ucwords(str_replace("\x2d", "\55\40", $str))); } }