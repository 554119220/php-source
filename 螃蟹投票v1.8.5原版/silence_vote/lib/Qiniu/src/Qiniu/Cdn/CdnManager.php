<?php
 namespace Qiniu\Cdn; use Qiniu\Auth; use Qiniu\Http\Error; use Qiniu\Http\Client; final class CdnManager { private $auth; private $server; public function __construct(Auth $auth) { $this->auth = $auth; $this->server = "\x68\x74\164\x70\x3a\x2f\x2f\x66\x75\x73\x69\x6f\156\x2e\x71\x69\x6e\151\165\x61\160\x69\56\143\x6f\155"; } public function refreshUrls(array $urls) { return $this->refreshUrlsAndDirs($urls, array()); } public function refreshDirs(array $dirs) { return $this->refreshUrlsAndDirs(array(), $dirs); } public function refreshUrlsAndDirs(array $urls, array $dirs) { goto FATCc; w3_28: lv5nM: goto TSQTr; f4FwY: $req["\x75\162\x6c\163"] = $urls; goto V1edB; y7qhe: $req["\144\x69\162\163"] = $dirs; goto w3_28; WmFM1: if (empty($dirs)) { goto lv5nM; } goto y7qhe; TSQTr: $url = $this->server . "\x2f\x76\62\x2f\x74\165\x6e\x65\57\162\145\146\162\145\163\150"; goto kT2Am; kT2Am: $body = json_encode($req); goto qs8a_; FATCc: $req = array(); goto WWnug; qs8a_: return $this->post($url, $body); goto Zl0id; WWnug: if (empty($urls)) { goto C22Ij; } goto f4FwY; V1edB: C22Ij: goto WmFM1; Zl0id: } public function prefetchUrls(array $urls) { goto oeNT5; WpBii: $body = json_encode($req); goto PNskx; oeNT5: $req = array("\165\x72\x6c\x73" => $urls); goto bTJyr; PNskx: return $this->post($url, $body); goto fn3V8; bTJyr: $url = $this->server . "\57\166\62\57\164\x75\156\145\57\160\162\145\x66\145\x74\143\x68"; goto WpBii; fn3V8: } public function getBandwidthData(array $domains, $startDate, $endDate, $granularity) { goto c243Y; LAL42: $req["\147\x72\141\156\165\154\x61\x72\x69\164\x79"] = $granularity; goto sVv0P; GTPIm: $req["\145\156\144\104\141\164\145"] = $endDate; goto LAL42; c243Y: $req = array(); goto ZkIOO; oh7hA: $body = json_encode($req); goto Ex3TH; lgUxt: $req["\x73\x74\x61\162\x74\x44\141\164\145"] = $startDate; goto GTPIm; sVv0P: $url = $this->server . "\x2f\166\x32\57\x74\x75\x6e\x65\57\142\x61\156\x64\x77\151\x64\164\150"; goto oh7hA; ZkIOO: $req["\x64\157\155\141\151\156\163"] = implode("\x3b", $domains); goto lgUxt; Ex3TH: return $this->post($url, $body); goto hYRnQ; hYRnQ: } public function getFluxData(array $domains, $startDate, $endDate, $granularity) { goto sbd6y; xp0fo: $req["\x67\162\x61\156\165\154\x61\x72\151\164\171"] = $granularity; goto VQnTS; cAGef: $req["\145\x6e\x64\x44\x61\x74\145"] = $endDate; goto xp0fo; H5Ya2: $body = json_encode($req); goto HN1YM; CFiCX: $req["\144\157\155\x61\151\x6e\163"] = implode("\x3b", $domains); goto FRWg8; FRWg8: $req["\163\164\x61\x72\164\x44\x61\164\145"] = $startDate; goto cAGef; HN1YM: return $this->post($url, $body); goto oQeTY; VQnTS: $url = $this->server . "\x2f\166\62\x2f\x74\x75\x6e\145\57\x66\x6c\165\170"; goto H5Ya2; sbd6y: $req = array(); goto CFiCX; oQeTY: } public function getCdnLogList(array $domains, $logDate) { goto nyepb; HbayT: return $this->post($url, $body); goto KA_1w; ZM3SA: $body = json_encode($req); goto HbayT; HqK9u: $url = $this->server . "\57\166\x32\57\164\x75\x6e\x65\57\x6c\157\147\57\154\x69\163\x74"; goto ZM3SA; Wuf3i: $req["\x64\141\171"] = $logDate; goto HqK9u; nyepb: $req = array(); goto ikDPn; ikDPn: $req["\x64\x6f\x6d\x61\x69\156\x73"] = implode("\x3b", $domains); goto Wuf3i; KA_1w: } private function post($url, $body) { goto Yx5aN; XH873: $headers["\103\x6f\156\164\145\156\164\x2d\124\171\x70\145"] = "\x61\x70\160\154\151\143\141\164\151\x6f\x6e\57\x6a\x73\x6f\156"; goto FhNo5; Yx5aN: $headers = $this->auth->authorization($url, $body, "\x61\x70\160\154\x69\x63\x61\x74\151\x6f\x6e\57\x6a\x73\157\156"); goto XH873; WDGA7: return array(null, new Error($url, $ret)); goto gVXJR; gVXJR: vFSV3: goto HyE12; HyE12: $r = $ret->body === null ? array() : $ret->json(); goto hwQI_; FhNo5: $ret = Client::post($url, $body, $headers); goto QMcEc; QMcEc: if ($ret->ok()) { goto vFSV3; } goto WDGA7; hwQI_: return array($r, null); goto n2DEI; n2DEI: } public static function createTimestampAntiLeechUrl($rawUrl, $encryptKey, $durationInSeconds) { goto gQxhG; biQ1N: $signedUrl = $rawUrl . "\x3f\x73\x69\x67\156\x3d" . $signStr . "\46\164\75" . $expireHex; goto k6MIB; drFhi: oaF_F: goto ow9Y1; k6MIB: goto fyPfs; goto drFhi; gQxhG: $parsedUrl = parse_url($rawUrl); goto Dt1DJ; ntj5g: return $signedUrl; goto K5lSI; f63ri: $expireHex = dechex($deadline); goto sFpej; zWzha: fyPfs: goto ntj5g; ow9Y1: $signedUrl = $rawUrl . "\46\x73\151\x67\156\x3d" . $signStr . "\x26\164\75" . $expireHex; goto zWzha; dIkJx: $strToSign = $encryptKey . $path . $expireHex; goto l2Q5Y; ISaCB: if (isset($parsedUrl["\161\165\x65\162\x79"])) { goto oaF_F; } goto biQ1N; sFpej: $path = isset($parsedUrl["\160\x61\x74\x68"]) ? $parsedUrl["\160\141\164\150"] : ''; goto dIkJx; Dt1DJ: $deadline = time() + $durationInSeconds; goto f63ri; l2Q5Y: $signStr = md5($strToSign); goto ISaCB; K5lSI: } }