<?php
 namespace Qiniu; use Qiniu\Zone; final class Auth { private $accessKey; private $secretKey; public function __construct($accessKey, $secretKey) { $this->accessKey = $accessKey; $this->secretKey = $secretKey; } public function getAccessKey() { return $this->accessKey; } public function sign($data) { $hmac = hash_hmac("\163\x68\x61\61", $data, $this->secretKey, true); return $this->accessKey . "\72" . \Qiniu\base64_urlSafeEncode($hmac); } public function signWithData($data) { $encodedData = \Qiniu\base64_urlSafeEncode($data); return $this->sign($encodedData) . "\72" . $encodedData; } public function signRequest($urlString, $body, $contentType = null) { goto WtZzp; x8Qml: if (!array_key_exists("\x71\x75\145\162\x79", $url)) { goto s_w36; } goto txND2; txND2: $data .= "\x3f" . $url["\161\x75\145\x72\171"]; goto j4Y09; JEx9u: return $this->sign($data); goto fxbEr; hA73J: nuZ9L: goto JEx9u; WtZzp: $url = parse_url($urlString); goto iABi9; tP_Qw: $data = $url["\x70\141\164\x68"]; goto a9nTc; iABi9: $data = ''; goto CIdsu; S3Vij: $data .= "\12"; goto P_LSY; a9nTc: KsbHu: goto x8Qml; BSpmC: $data .= $body; goto hA73J; CIdsu: if (!array_key_exists("\160\141\x74\x68", $url)) { goto KsbHu; } goto tP_Qw; j4Y09: s_w36: goto S3Vij; P_LSY: if (!($body !== null && $contentType === "\x61\160\160\x6c\151\x63\141\x74\x69\157\156\x2f\x78\55\167\x77\167\x2d\x66\157\x72\155\x2d\165\162\x6c\145\x6e\x63\x6f\144\145\144")) { goto nuZ9L; } goto BSpmC; fxbEr: } public function verifyCallback($contentType, $originAuthorization, $url, $body) { $authorization = "\121\x42\x6f\x78\40" . $this->signRequest($url, $body, $contentType); return $originAuthorization === $authorization; } public function privateDownloadUrl($baseUrl, $expires = 3600) { goto yEj8s; I0BcW: $baseUrl .= $deadline; goto Ucrm_; lZPVG: return "{$baseUrl}\x26\x74\x6f\153\x65\x6e\75{$token}"; goto sAD8m; Ucrm_: $token = $this->sign($baseUrl); goto lZPVG; tDcsv: if ($pos !== false) { goto zeCuX; } goto Jctk0; Jctk0: $baseUrl .= "\77\145\75"; goto I2JmN; I2JmN: goto X0sVx; goto O3dig; O3dig: zeCuX: goto z5K1V; Ep8AX: $pos = strpos($baseUrl, "\77"); goto tDcsv; z5K1V: $baseUrl .= "\46\x65\75"; goto mNfv6; mNfv6: X0sVx: goto I0BcW; yEj8s: $deadline = time() + $expires; goto Ep8AX; sAD8m: } public function uploadToken($bucket, $key = null, $expires = 3600, $policy = null, $strictPolicy = true) { goto rcM8f; sENzp: $args["\144\145\141\144\154\x69\156\145"] = $deadline; goto J1Btt; ClNmf: $args = self::copyPolicy($args, $policy, $strictPolicy); goto xvUo4; QCuIK: if (!($key !== null)) { goto mZ_oG; } goto YlC1j; xvUo4: $args["\163\x63\x6f\x70\145"] = $scope; goto sENzp; rcM8f: $deadline = time() + $expires; goto ZAHOO; J1Btt: $b = json_encode($args); goto OCyea; YlC1j: $scope .= "\x3a" . $key; goto tSjfj; OCyea: return $this->signWithData($b); goto SmpNs; ZAHOO: $scope = $bucket; goto QCuIK; tSjfj: mZ_oG: goto ClNmf; SmpNs: } private static $policyFields = array("\143\x61\154\x6c\x62\x61\x63\x6b\125\x72\154", "\x63\141\x6c\154\142\141\143\x6b\102\157\x64\171", "\143\141\154\x6c\142\141\x63\153\110\157\x73\x74", "\143\x61\x6c\x6c\142\x61\143\153\x42\x6f\x64\x79\124\x79\160\x65", "\143\141\x6c\154\x62\x61\x63\x6b\x46\145\x74\x63\150\x4b\x65\171", "\x72\x65\x74\x75\162\156\x55\162\x6c", "\162\x65\164\x75\x72\x6e\x42\x6f\x64\171", "\145\x6e\x64\125\163\145\162", "\163\141\166\145\x4b\x65\171", "\151\156\x73\x65\x72\164\117\x6e\154\x79", "\144\x65\164\x65\143\164\x4d\151\155\145", "\x6d\151\x6d\145\114\151\155\x69\x74", "\146\163\151\x7a\145\115\x69\x6e", "\x66\163\151\172\x65\x4c\151\155\x69\x74", "\x70\x65\162\x73\151\x73\164\x65\x6e\x74\117\x70\x73", "\160\x65\162\x73\151\163\x74\x65\x6e\x74\x4e\157\164\x69\x66\x79\x55\162\154", "\160\x65\162\x73\151\163\164\145\156\164\x50\151\160\145\154\151\x6e\145", "\x64\x65\x6c\x65\x74\145\101\x66\164\x65\162\x44\141\171\x73", "\x66\x69\x6c\145\124\x79\x70\x65", "\151\163\x50\x72\145\x66\151\x78\141\x6c\123\143\x6f\x70\145"); private static function copyPolicy(&$policy, $originPolicy, $strictPolicy) { goto s8bFY; f7NcW: Xb6A0: goto DfJOq; JSvn_: V0Q1Y: goto JWy8s; CGjsH: dsQve: goto f7NcW; JWy8s: if (!is_array($originPolicy)) { goto Xb6A0; } goto bUaZn; bUaZn: foreach ($originPolicy as $key => $value) { goto JRMyJ; caFAU: kViN5: goto Vct4D; Vct4D: lSdKZ: goto Oja_r; JRMyJ: if (!(!$strictPolicy || in_array((string) $key, self::$policyFields, true))) { goto kViN5; } goto yuTto; yuTto: $policy[$key] = $value; goto caFAU; Oja_r: } goto CGjsH; s8bFY: if (!($originPolicy === null)) { goto V0Q1Y; } goto Vst0a; Vst0a: return array(); goto JSvn_; DfJOq: return $policy; goto xwZ2g; xwZ2g: } public function authorization($url, $body = null, $contentType = null) { $authorization = "\x51\102\157\x78\40" . $this->signRequest($url, $body, $contentType); return array("\x41\x75\164\x68\x6f\162\x69\x7a\x61\x74\x69\x6f\x6e" => $authorization); } public function authorizationV2($url, $method, $body = null, $contentType = null) { goto hZ84e; IdyZ_: $port = $urlItems["\160\157\x72\x74"]; goto NUWdl; QweGK: if (empty($body)) { goto Fem3b; } goto AqjRT; ITNW1: $host = $urlItems["\x68\x6f\x73\164"]; goto o1MRb; yjRUX: LcOn9: goto aa04e; UrQdr: $port = ''; goto y1yUQ; axzpc: if (empty($port)) { goto cTPMu; } goto exp3c; sqn8j: return array("\x41\165\x74\150\157\x72\x69\x7a\141\164\x69\157\156" => $auth); goto gLZKh; FaRRn: $sign = $this->sign($toSignStr); goto AVey1; y1yUQ: goto EwMXT; goto mWoor; OUrX0: goto YjSCv; goto q5MWO; aa04e: $toSignStr .= "\xa\110\x6f\x73\164\x3a\40" . $host; goto axzpc; mWoor: dkcvN: goto IdyZ_; ydyMu: YjSCv: goto KXLQh; NUWdl: EwMXT: goto xF1hg; o1MRb: if (isset($urlItems["\x70\157\x72\164"])) { goto dkcvN; } goto UrQdr; OysEG: Fem3b: goto FaRRn; q5MWO: jF3Ik: goto CaJJv; emDiQ: if (empty($contentType)) { goto txVCN; } goto P0hAN; CaJJv: $query = $urlItems["\161\x75\x65\x72\x79"]; goto ydyMu; WADZN: if (empty($query)) { goto LcOn9; } goto JIJB9; AVey1: $auth = "\x51\151\x6e\x69\165\40" . $sign; goto sqn8j; T57lT: $toSignStr .= "\12\xa"; goto QweGK; IRCfY: cTPMu: goto emDiQ; xF1hg: $path = $urlItems["\x70\x61\x74\150"]; goto SIXpU; KXLQh: $toSignStr = $method . "\x20" . $path; goto WADZN; exp3c: $toSignStr .= "\72" . $port; goto IRCfY; hZ84e: $urlItems = parse_url($url); goto ITNW1; AqjRT: $toSignStr .= $body; goto OysEG; JIJB9: $toSignStr .= "\x3f" . $query; goto yjRUX; SIXpU: if (isset($urlItems["\x71\165\x65\162\x79"])) { goto jF3Ik; } goto Ef60m; Ef60m: $query = ''; goto OUrX0; ti8m5: txVCN: goto T57lT; P0hAN: $toSignStr .= "\12\x43\x6f\x6e\x74\145\156\x74\x2d\124\171\x70\x65\72\40" . $contentType; goto ti8m5; gLZKh: } }