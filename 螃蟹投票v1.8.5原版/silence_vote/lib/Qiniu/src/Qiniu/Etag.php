<?php
 namespace Qiniu; use Qiniu\Config; final class Etag { private static function packArray($v, $a) { return call_user_func_array("\160\141\x63\153", array_merge(array($v), (array) $a)); } private static function blockCount($fsize) { return intval(($fsize + (Config::BLOCK_SIZE - 1)) / Config::BLOCK_SIZE); } private static function calcSha1($data) { goto h51gz; SVVLk: return array($byteArray, null); goto zWNpW; Til8p: usSd9: goto KQi7b; MzovR: return array(null, $err); goto Til8p; KQi7b: $byteArray = unpack("\x43\52", $sha1Str); goto SVVLk; yzlRH: if (!($err !== null)) { goto usSd9; } goto MzovR; h51gz: $sha1Str = sha1($data, true); goto S0fvd; S0fvd: $err = error_get_last(); goto yzlRH; zWNpW: } public static function sum($filename) { goto a4O5U; Ef8tt: if (!((int) $fsize === 0)) { goto ogoGZ; } goto oHNNL; aX0JD: ogoGZ: goto hbXWG; EvquH: return array("\106\x74\157\65\x6f\55\x35\x65\x61\x30\x73\116\x4d\154\x57\137\x37\x35\126\x67\107\112\x43\166\x32\101\143\112", null); goto aX0JD; tAP4D: if (!($i < $blockCnt)) { goto G7BAl; } goto gubKI; gubKI: $fdata = fread($fhandler, Config::BLOCK_SIZE); goto yBJqE; H24Jz: $fsize = $fstat["\163\x69\172\145"]; goto Ef8tt; PMiQJ: WI51s: goto lxgbB; a4O5U: $fhandler = fopen($filename, "\162"); goto egeCh; P_V36: rNXkn: goto Jj6BV; vRQtV: $sha1Buf = array_merge($sha1Buf, $sha1Code); goto P_V36; Pyk6k: if (!($err !== null)) { goto L9PD1; } goto OwAea; lxgbB: $sha1BlockBuf = array_merge($sha1BlockBuf, $sha1Code); goto VKIjP; VXlZ8: return array(null, $err); goto PMiQJ; p59TY: fclose($fhandler); goto VXlZ8; r4M80: if (!($err !== null)) { goto WI51s; } goto p59TY; Jj6BV: $etag = \Qiniu\base64_urlSafeEncode(self::packArray("\x43\x2a", $sha1Buf)); goto N5e8V; XOsDh: L9PD1: goto fPyRh; qkCLg: $sha1Buf = array(); goto pJqht; Zkx1H: $sha1BlockBuf = array(); goto oVk2Z; gYb9I: $i++; goto FMJq4; Osznb: $sha1Buf = array_merge($sha1Buf, $sha1Final); goto JNgNa; JNgNa: goto rNXkn; goto i5XEP; hbXWG: $blockCnt = self::blockCount($fsize); goto qkCLg; pJqht: if ($blockCnt <= 1) { goto gXUVj; } goto OxPA8; IYO9m: array_push($sha1Buf, 0x16); goto zp3wN; oHNNL: fclose($fhandler); goto EvquH; OwAea: fclose($fhandler); goto u4RfS; Sv3Ng: G7BAl: goto SkI3O; yBJqE: list($sha1Code, $err) = self::calcSha1($fdata); goto r4M80; u4RfS: return array(null, $err); goto XOsDh; N5e8V: return array($etag, null); goto uFvW2; egeCh: $err = error_get_last(); goto BCN7a; PXenV: return array(null, $err); goto k6CCy; qmhUm: $fstat = fstat($fhandler); goto H24Jz; qC3Li: list($sha1Final, ) = self::calcSha1($tmpData); goto Osznb; OxPA8: array_push($sha1Buf, 0x96); goto Zkx1H; BCN7a: if (!($err !== null)) { goto Uvuey; } goto PXenV; FMJq4: goto tjqT5; goto Sv3Ng; fPyRh: list($sha1Code, ) = self::calcSha1($fdata); goto vRQtV; oVk2Z: $i = 0; goto e4VNP; SkI3O: $tmpData = self::packArray("\103\52", $sha1BlockBuf); goto qC3Li; VKIjP: MZjdr: goto gYb9I; zp3wN: $fdata = fread($fhandler, Config::BLOCK_SIZE); goto Pyk6k; k6CCy: Uvuey: goto qmhUm; i5XEP: gXUVj: goto IYO9m; e4VNP: tjqT5: goto tAP4D; uFvW2: } }