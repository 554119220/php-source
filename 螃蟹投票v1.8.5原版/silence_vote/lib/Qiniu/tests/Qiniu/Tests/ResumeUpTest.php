<?php
 namespace Qiniu\Tests; use Qiniu\Storage\ResumeUploader; use Qiniu\Storage\UploadManager; use Qiniu\Config; use Qiniu\Zone; class ResumeUpTest extends \PHPUnit_Framework_TestCase { protected $bucketName; protected $auth; protected function setUp() { goto L3VDl; nggXJ: global $testAuth; goto C16H3; L3VDl: global $bucketName; goto TbzmM; TbzmM: $this->bucketName = $bucketName; goto nggXJ; C16H3: $this->auth = $testAuth; goto janyR; janyR: } public function test4ML() { goto vap03; eAC_M: $this->assertNotNull($ret["\150\141\x73\150"]); goto Wnzge; KaCZy: $upManager = new UploadManager(); goto S9WNR; FeQSW: $tempFile = qiniuTempFile(4 * 1024 * 1024 + 10); goto RZ3gM; Wnzge: unlink($tempFile); goto v07vG; vap03: $key = "\x72\x65\163\x75\155\145\x50\x75\164\106\x69\x6c\x65\64\115\x4c"; goto KaCZy; S9WNR: $token = $this->auth->uploadToken($this->bucketName, $key); goto FeQSW; RZ3gM: list($ret, $error) = $upManager->putFile($token, $key, $tempFile); goto A5Zr2; A5Zr2: $this->assertNull($error); goto eAC_M; v07vG: } public function test4ML2() { goto NrDOW; I99s_: $upManager = new UploadManager($cfg); goto scoR_; Nrl95: list($ret, $error) = $upManager->putFile($token, $key, $tempFile); goto YlxT2; gkrEm: unlink($tempFile); goto cw1PW; lyWV6: $this->assertNotNull($ret["\150\141\x73\150"]); goto gkrEm; HWpKA: $tempFile = qiniuTempFile(4 * 1024 * 1024 + 10); goto Nrl95; scoR_: $token = $this->auth->uploadToken($this->bucketName, $key); goto HWpKA; UNjDY: $zone = new Zone(array("\x75\160\x2e\146\x61\153\145\x2e\161\151\156\x69\x75\x2e\143\157\x6d"), array("\x75\x70\56\161\151\x6e\x69\x75\x70\56\143\x6f\155")); goto UPwcb; NrDOW: $key = "\162\145\163\x75\x6d\x65\120\165\x74\x46\x69\x6c\x65\64\115\114"; goto UNjDY; YlxT2: $this->assertNull($error); goto lyWV6; UPwcb: $cfg = new Config($zone); goto I99s_; cw1PW: } }