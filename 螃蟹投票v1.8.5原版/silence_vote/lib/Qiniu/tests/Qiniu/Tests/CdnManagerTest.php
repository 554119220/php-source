<?php
 namespace Qiniu\Tests; use Qiniu\Cdn\CdnManager; use Qiniu\Http\Client; class CdnManagerTest extends \PHPUnit_Framework_TestCase { protected $cdnManager; protected $encryptKey; protected $imgUrl; protected function setUp() { goto nHtIb; nHtIb: global $timestampAntiLeechEncryptKey; goto WvEch; XYqf1: $this->cdnManager = new CdnManager($testAuth); goto OLHDL; fRT4g: global $testAuth; goto XYqf1; OLHDL: $this->encryptKey = $timestampAntiLeechEncryptKey; goto IqGrw; IqGrw: $this->imgUrl = $customDomain . "\x2f\x32\x34\x2e\152\x70\x67"; goto U7DNz; WvEch: global $customDomain; goto fRT4g; U7DNz: } public function testCreateTimestampAntiLeechUrl() { goto uBp4Y; bAiET: $this->assertNull($response->error); goto tN277; CFEp9: $signUrl2 = $this->cdnManager->createTimestampAntiLeechUrl($url2, $this->encryptKey, 3600); goto bXwQ3; uBp4Y: $signUrl = $this->cdnManager->createTimestampAntiLeechUrl($this->imgUrl, $this->encryptKey, 3600); goto i9rf4; mY4tW: $this->assertEquals($response->statusCode, 200); goto KQ5LR; i9rf4: $response = Client::get($signUrl); goto mY4tW; Zn8cZ: $imgInfo = $response->json(); goto u5XI4; Yp3bH: $this->assertEquals($imgInfo["\x73\x69\172\145"], 2196145); goto bAiET; KQ5LR: $this->assertNull($response->error); goto qXIJ7; bXwQ3: $response = Client::get($signUrl2); goto Zn8cZ; u5XI4: $this->assertEquals($response->statusCode, 200); goto Yp3bH; qXIJ7: $url2 = $this->imgUrl . "\x3f\151\x6d\x61\147\145\x49\156\x66\157"; goto CFEp9; tN277: } }