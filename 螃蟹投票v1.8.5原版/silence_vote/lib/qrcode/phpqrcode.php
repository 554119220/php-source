<?php
 goto mEX1T; XI9LT: define("\x51\122\137\x4d\x4f\104\105\137\70", 2); goto Wo2sW; avGqf: define("\x51\x52\137\x43\x41\103\x48\x45\101\x42\x4c\x45", false); goto DwQBn; Wo2sW: define("\x51\x52\137\x4d\x4f\x44\105\x5f\113\x41\x4e\x4a\111", 3); goto t29w6; xDfJS: define("\x51\122\x53\120\x45\x43\x5f\127\111\x44\124\x48\137\115\101\x58", 177); goto mN0Xt; G77s2: define("\x4e\x31", 3); goto TTZON; wzW0s: define("\x51\122\137\x4c\x4f\107\x5f\104\111\x52", false); goto U4s20; t29w6: define("\121\122\x5f\115\117\104\x45\137\x53\x54\x52\x55\103\x54\125\122\105", 4); goto SpGyE; nEr30: define("\x51\x52\137\x50\116\x47\137\x4d\x41\130\111\115\125\115\x5f\x53\111\132\105", 1024); goto inmDd; eqYhl: class QRrs { public static $items = array(); public static function init_rs($symsize, $gfpoly, $fcr, $prim, $nroots, $pad) { goto Soi2t; A5JJJ: array_unshift(self::$items, $rs); goto kXm43; mHAt1: w6Yqo: goto K1nsl; kXm43: return $rs; goto lcjPE; Soi2t: foreach (self::$items as $rs) { goto cQczL; Hsotx: LbTrk: goto TIuVF; ahLEK: goto WqoBb; goto bd4z6; nelid: goto WqoBb; goto o6qJh; EmeBd: goto WqoBb; goto E2Ba1; pmyqN: return $rs; goto Za251; PMa7Z: if (!($rs->mm != $symsize)) { goto sZ84T; } goto nelid; bd4z6: Lrs_X: goto pmyqN; pqaks: goto WqoBb; goto Hsotx; w4oYC: goto WqoBb; goto AH_16; ZJprH: if (!($rs->gfpoly != $gfpoly)) { goto LbTrk; } goto pqaks; Dhrpn: twl4G: goto KYSyi; Za251: WqoBb: goto HcPnd; j4x24: if (!($rs->nroots != $nroots)) { goto OVUWb; } goto EmeBd; cQczL: if (!($rs->pad != $pad)) { goto Ja9m8; } goto w4oYC; AH_16: Ja9m8: goto j4x24; o6qJh: sZ84T: goto ZJprH; E2Ba1: OVUWb: goto PMa7Z; KYSyi: if (!($rs->prim != $prim)) { goto Lrs_X; } goto ahLEK; hGMM2: goto WqoBb; goto Dhrpn; TIuVF: if (!($rs->fcr != $fcr)) { goto twl4G; } goto hGMM2; HcPnd: } goto mHAt1; K1nsl: $rs = QRrsItem::init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad); goto A5JJJ; lcjPE: } } goto G77s2; qSYOu: define("\121\122\x5f\106\117\x52\115\101\x54\137\x50\116\107", 1); goto Znkt0; ioVWl: define("\121\122\x5f\105\103\x4c\x45\x56\105\114\137\x51", 2); goto VZzHb; gfa8y: class QRsplit { public $dataStr = ''; public $input; public $modeHint; public function __construct($dataStr, $input, $modeHint) { goto TIrub; wgnpt: $this->input = $input; goto u5LAp; u5LAp: $this->modeHint = $modeHint; goto zaiuo; TIrub: $this->dataStr = $dataStr; goto wgnpt; zaiuo: } public static function isdigitat($str, $pos) { goto vQ9Ue; v2vYo: return false; goto cE2S9; G96_V: return ord($str[$pos]) >= ord("\x30") && ord($str[$pos]) <= ord("\71"); goto oMONh; vQ9Ue: if (!($pos >= strlen($str))) { goto ZgC4q; } goto v2vYo; cE2S9: ZgC4q: goto G96_V; oMONh: } public static function isalnumat($str, $pos) { goto CwesP; wccKt: return false; goto vBe3p; vBe3p: xEj3l: goto HO7OV; CwesP: if (!($pos >= strlen($str))) { goto xEj3l; } goto wccKt; HO7OV: return QRinput::lookAnTable(ord($str[$pos])) >= 0; goto GpApg; GpApg: } public function identifyMode($pos) { goto YVB_G; uoeMI: return QR_MODE_8; goto sFnBH; Y3BwL: if (!($this->modeHint == QR_MODE_KANJI)) { goto AmuJ7; } goto siZq7; e4o8a: xj8J3: goto pcG_C; vnLbh: if (!($word >= 0x8140 && $word <= 0x9ffc || $word >= 0xe040 && $word <= 0xebbf)) { goto nb51o; } goto TOiIr; DsltO: if (self::isalnumat($this->dataStr, $pos)) { goto C1t0J; } goto Y3BwL; agB4a: nb51o: goto VduFq; siZq7: if (!($pos + 1 < strlen($this->dataStr))) { goto pFH88; } goto JP1dZ; nRQBm: return QR_MODE_NUL; goto buLbk; m44vS: return QR_MODE_AN; goto e4o8a; JP1dZ: $d = $this->dataStr[$pos + 1]; goto UkpRm; VduFq: pFH88: goto cXQ7F; cXQ7F: AmuJ7: goto oCTs3; oCTs3: goto xj8J3; goto k8Qyh; QUpmz: if (self::isdigitat($this->dataStr, $pos)) { goto xiOQE; } goto DsltO; fsX9F: xiOQE: goto crhkm; k8Qyh: C1t0J: goto m44vS; pcG_C: goto ijqdg; goto fsX9F; buLbk: dz_hF: goto DJsVT; DJsVT: $c = $this->dataStr[$pos]; goto QUpmz; hfuI_: ijqdg: goto uoeMI; crhkm: return QR_MODE_NUM; goto hfuI_; TOiIr: return QR_MODE_KANJI; goto agB4a; UkpRm: $word = ord($c) << 8 | ord($d); goto vnLbh; YVB_G: if (!($pos >= strlen($this->dataStr))) { goto dz_hF; } goto nRQBm; sFnBH: } public function eatNum() { goto i6epS; R4EdU: rTYMa: goto pzg33; T5j7s: if (!($dif > 0)) { goto mGffy; } goto FtYIa; tqx6t: if (!($mode == QR_MODE_AN)) { goto rTYMa; } goto N3GL7; N3GL7: $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln + QRinput::estimateBitsModeAn(1) - QRinput::estimateBitsModeAn($run + 1); goto T5j7s; C0iN2: return -1; goto bRIUW; kD4Fs: qhjLI: goto jrNhd; ZKL0H: VAhox: goto m1Ok9; qqjea: if (!($dif > 0)) { goto TSSp1; } goto fRnHt; qAiws: if (!($ret < 0)) { goto U5XYb; } goto C0iN2; FtYIa: return $this->eatAn(); goto p_Sts; dgxWn: $p = 0; goto ZKL0H; M9cqA: if (!($mode == QR_MODE_8)) { goto fuh2y; } goto qP83y; Hd521: TSSp1: goto s6hky; qP83y: $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln + QRinput::estimateBitsMode8(1) - QRinput::estimateBitsMode8($run + 1); goto qqjea; m1Ok9: if (!self::isdigitat($this->dataStr, $p)) { goto qhjLI; } goto ciCen; lCcMF: $mode = $this->identifyMode($p); goto M9cqA; i6epS: $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion()); goto dgxWn; xu6UB: goto VAhox; goto kD4Fs; ciCen: $p++; goto xu6UB; bRIUW: U5XYb: goto FVHDC; p_Sts: mGffy: goto R4EdU; pzg33: $ret = $this->input->append(QR_MODE_NUM, $run, str_split($this->dataStr)); goto qAiws; s6hky: fuh2y: goto tqx6t; FVHDC: return $run; goto b9kL0; jrNhd: $run = $p; goto lCcMF; fRnHt: return $this->eat8(); goto Hd521; b9kL0: } public function eatAn() { goto SCZP6; juIf1: if (!self::isdigitat($this->dataStr, $q)) { goto u_t_f; } goto irO6_; JqlPT: $p++; goto REn_o; hquTm: goto e61jz; goto CvY0D; Vu7tg: x3GQq: goto juIf1; C7WLC: if (!self::isalnumat($this->dataStr, $p)) { goto NZH9b; } goto Hgq92; REn_o: goto IXwff; goto wHyzY; Bq_qJ: return -1; goto yB5jn; Hgq92: if (self::isdigitat($this->dataStr, $p)) { goto bCM9G; } goto JqlPT; irO6_: $q++; goto Np444; ZV9cf: $dif = QRinput::estimateBitsModeAn($run) + 4 + $la + QRinput::estimateBitsMode8(1) - QRinput::estimateBitsMode8($run + 1); goto rldY0; KHm70: yVmos: goto EGFRa; hHAD3: e61jz: goto C7WLC; s06JT: return $this->eat8(); goto eg0VG; rldY0: if (!($dif > 0)) { goto Iw2ns; } goto s06JT; SCZP6: $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion()); goto dd00s; wHyzY: bCM9G: goto wW047; yB5jn: QHSkm: goto nzk13; g8eTO: $p = $q; goto MWLKE; EGFRa: goto NZH9b; goto aPDIM; ShqBU: bIF2b: goto fkgJ7; XytcB: u_t_f: goto Os1HY; Np444: goto x3GQq; goto XytcB; dd00s: $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion()); goto XLGcH; vxbG7: IXwff: goto hquTm; iqUN7: if (self::isalnumat($this->dataStr, $p)) { goto bIF2b; } goto ZV9cf; REcIR: if (!($ret < 0)) { goto QHSkm; } goto Bq_qJ; nzk13: return $run; goto TFZWA; MWLKE: goto iacUb; goto KHm70; wW047: $q = $p; goto Vu7tg; fkgJ7: $ret = $this->input->append(QR_MODE_AN, $run, str_split($this->dataStr)); goto REcIR; Os1HY: $dif = QRinput::estimateBitsModeAn($p) + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln - QRinput::estimateBitsModeAn($q); goto Ojn3V; Ojn3V: if ($dif < 0) { goto yVmos; } goto g8eTO; eg0VG: Iw2ns: goto ShqBU; XLGcH: $p = 0; goto hHAD3; aPDIM: iacUb: goto vxbG7; CvY0D: NZH9b: goto fbDd3; fbDd3: $run = $p; goto iqUN7; TFZWA: } public function eatKanji() { goto IcXGz; GYjPU: if (!($this->identifyMode($p) == QR_MODE_KANJI)) { goto gs1m1; } goto kW0Fp; p0Zbx: GgxhU: goto GYjPU; ern0Y: OBRbg: goto b7E65; b7E65: return $run; goto FKuXM; UmA79: gs1m1: goto BY3an; dx8k7: if (!($ret < 0)) { goto OBRbg; } goto mccFS; kW0Fp: $p += 2; goto hjohp; mccFS: return -1; goto ern0Y; hjohp: goto GgxhU; goto UmA79; IcXGz: $p = 0; goto p0Zbx; BY3an: $ret = $this->input->append(QR_MODE_KANJI, $p, str_split($this->dataStr)); goto dx8k7; FKuXM: } public function eat8() { goto iP2At; W0Z7o: if (!($mode == QR_MODE_KANJI)) { goto rvt83; } goto VoiS4; neefx: $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion()); goto ciPuk; XEd0R: OGmln: goto hNP2j; nOx8C: $q = $p; goto QKXEW; Y4LfH: if (!self::isalnumat($this->dataStr, $q)) { goto OGmln; } goto xWR2p; DJYZo: $p = $q; goto n2vXI; HQ4XP: rvt83: goto F5Bx0; PbMDR: if ($mode == QR_MODE_AN) { goto GTAa2; } goto CSTjq; dhee1: UI0Po: goto lDMHP; Zngst: rplvS: goto UrkSz; oKuym: XcYAa: goto nOx8C; Hw72x: return $run; goto Swv2J; JFn_R: $ret = $this->input->append(QR_MODE_8, $run, str_split($this->dataStr)); goto cgAug; lDMHP: if (!($p < $dataStrLen)) { goto DSE4m; } goto RX5W_; VntLv: KPL5C: goto KhBwu; I4UON: i8zbQ: goto VjJRE; mc2ss: $run = $p; goto JFn_R; ciPuk: $p = 1; goto Y2T7M; xWR2p: $q++; goto d3_Mi; o_ePV: goto b28aX; goto rOses; AUR3f: if ($dif < 0) { goto KPL5C; } goto DJYZo; UrkSz: goto GfqAr; goto oKuym; CSTjq: $p++; goto bQZ0k; Tmy7V: qi8sg: goto Hw72x; RX5W_: $mode = $this->identifyMode($p); goto W0Z7o; Pt2WO: return -1; goto Tmy7V; op2Qz: GfqAr: goto TuMC3; bQZ0k: goto rplvS; goto RILfD; TuMC3: goto UI0Po; goto C0TiI; hNP2j: $dif = QRinput::estimateBitsMode8($p) + QRinput::estimateBitsModeAn($q - $p) + 4 + $la - QRinput::estimateBitsMode8($q); goto NSGQh; SwO5w: $q = $p; goto v9Iqu; ekpt5: DblZb: goto op2Qz; VjJRE: $dif = QRinput::estimateBitsMode8($p) + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln - QRinput::estimateBitsMode8($q); goto AUR3f; QKXEW: x3eRo: goto ULpXU; ULpXU: if (!self::isdigitat($this->dataStr, $q)) { goto i8zbQ; } goto AvHzZ; RILfD: GTAa2: goto SwO5w; C0TiI: DSE4m: goto mc2ss; lFT71: $p = $q; goto o_ePV; NSGQh: if ($dif < 0) { goto RwG0a; } goto lFT71; iP2At: $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion()); goto neefx; n2vXI: goto DblZb; goto VntLv; rOses: RwG0a: goto dc_Ws; KhBwu: goto DSE4m; goto ekpt5; d3_Mi: goto lAC4V; goto XEd0R; dc_Ws: goto DSE4m; goto eje4w; eje4w: b28aX: goto Zngst; AvHzZ: $q++; goto tAuUV; tAuUV: goto x3eRo; goto I4UON; Y2T7M: $dataStrLen = strlen($this->dataStr); goto dhee1; VoiS4: goto DSE4m; goto HQ4XP; cgAug: if (!($ret < 0)) { goto qi8sg; } goto Pt2WO; F5Bx0: if ($mode == QR_MODE_NUM) { goto XcYAa; } goto PbMDR; v9Iqu: lAC4V: goto Y4LfH; Swv2J: } public function splitString() { goto NNLYN; j148Y: eXBpB: goto IZu5Y; QNJIa: QC80M: goto U2O3a; sxg2k: switch ($mode) { case QR_MODE_NUM: $length = $this->eatNum(); goto j90Cu; case QR_MODE_AN: $length = $this->eatAn(); goto j90Cu; case QR_MODE_KANJI: goto yW348; Qeb0k: goto j90Cu; goto Qodby; PQ2Yp: goto PS_IF; goto CvcLC; CvcLC: BSwhx: goto vNz_L; yW348: if ($hint == QR_MODE_KANJI) { goto BSwhx; } goto mfno0; o5b1s: PS_IF: goto Qeb0k; mfno0: $length = $this->eat8(); goto PQ2Yp; vNz_L: $length = $this->eatKanji(); goto o5b1s; Qodby: default: $length = $this->eat8(); goto j90Cu; } goto j148Y; OJ3G3: return 0; goto tpUpa; AogAW: if (!(strlen($this->dataStr) > 0)) { goto QC80M; } goto ZFP2T; ZFP2T: if (!($this->dataStr == '')) { goto EHwbp; } goto OJ3G3; GVMii: aH1sj: goto LElcv; yU9bK: return -1; goto YCqbF; NNLYN: t4SPw: goto AogAW; YCqbF: A4kYl: goto aA2wn; qvfMK: $mode = $this->identifyMode(0); goto sxg2k; LElcv: if (!($length < 0)) { goto A4kYl; } goto yU9bK; K8r5E: goto t4SPw; goto QNJIa; tpUpa: EHwbp: goto qvfMK; IZu5Y: j90Cu: goto I_21k; I_21k: if (!($length == 0)) { goto aH1sj; } goto Jyccj; aA2wn: $this->dataStr = substr($this->dataStr, $length); goto K8r5E; Jyccj: return 0; goto GVMii; U2O3a: } public function toUpper() { goto MP1XM; DFRZ1: $p++; goto tQvNZ; Ro4xE: $p = 0; goto tvp45; yjUSk: if ($mode == QR_MODE_KANJI) { goto hpPwH; } goto YylYW; mf24Y: $this->dataStr[$p] = chr(ord($this->dataStr[$p]) - 32); goto U8tXS; cSQe3: $mode = self::identifyMode(substr($this->dataStr, $p), $this->modeHint); goto yjUSk; YylYW: if (!(ord($this->dataStr[$p]) >= ord("\141") && ord($this->dataStr[$p]) <= ord("\x7a"))) { goto IVWV7; } goto mf24Y; MP1XM: $stringLen = strlen($this->dataStr); goto Ro4xE; LB1gV: return $this->dataStr; goto u_1QO; KDHyc: xFvYD: goto LB1gV; U8tXS: IVWV7: goto DFRZ1; pvQlW: goto puH7g; goto KDHyc; tvp45: puH7g: goto yyyZl; tQvNZ: goto TyJIG; goto WrrLo; jrq4g: $p += 2; goto yVnAO; WrrLo: hpPwH: goto jrq4g; yyyZl: if (!($p < $stringLen)) { goto xFvYD; } goto cSQe3; yVnAO: TyJIG: goto pvQlW; u_1QO: } public static function splitStringToQRinput($string, QRinput $input, $modeHint, $casesensitive = true) { goto ki0r_; MYSRB: eRUYA: goto JyOkK; Vmlz_: $split = new QRsplit($string, $input, $modeHint); goto oLyNK; AGDN9: throw new Exception("\145\x6d\x70\164\171\x20\x73\164\x72\151\156\147\41\x21\x21"); goto vVZkR; ki0r_: if (!(is_null($string) || $string == "\x5c\x30" || $string == '')) { goto tYyDa; } goto AGDN9; oLyNK: if ($casesensitive) { goto eRUYA; } goto DQTAL; vVZkR: tYyDa: goto Vmlz_; DQTAL: $split->toUpper(); goto MYSRB; JyOkK: return $split->splitString(); goto wVYFo; wVYFo: } } goto ujlXi; sTSRW: define("\121\122\x53\x50\105\103\x5f\x56\105\x52\123\x49\117\116\x5f\x4d\x41\130", 40); goto xDfJS; e1NLo: class QRbitstream { public $data = array(); public function size() { return count($this->data); } public function allocate($setLength) { $this->data = array_fill(0, $setLength, 0); return 0; } public static function newFromNum($bits, $num) { goto tNbpL; EKEGT: WosIg: goto u0Mtn; ta_EB: if ($num & $mask) { goto WosIg; } goto P1XfU; qF3tG: xbzA0: goto s5vw3; o9pnB: $i = 0; goto onGlL; ITS6S: $bstream->allocate($bits); goto U7LqT; TXPnd: if (!($i < $bits)) { goto xbzA0; } goto ta_EB; tNbpL: $bstream = new QRbitstream(); goto ITS6S; td4BA: tTDt9: goto z0T3b; yrgJg: goto YSxfe; goto qF3tG; onGlL: YSxfe: goto TXPnd; U7LqT: $mask = 1 << $bits - 1; goto o9pnB; fUVJB: goto jv0lL; goto EKEGT; s5vw3: return $bstream; goto bYBiT; P1XfU: $bstream->data[$i] = 0; goto fUVJB; sWj7H: $mask = $mask >> 1; goto td4BA; z0T3b: $i++; goto yrgJg; sn2Ga: jv0lL: goto sWj7H; u0Mtn: $bstream->data[$i] = 1; goto sn2Ga; bYBiT: } public static function newFromBytes($size, $data) { goto n9Ky_; imG8D: PCz0U: goto AtO_n; G8iyQ: if ($data[$i] & $mask) { goto w5uIw; } goto ex35W; a2AnO: $p = 0; goto SgocT; lXv5p: D6iuB: goto DFn2f; oC0Ki: q_kA_: goto J_k3L; n9Ky_: $bstream = new QRbitstream(); goto OjVRE; DFn2f: $j++; goto lBvHr; Eog9M: $bstream->data[$p] = 1; goto wjQpD; dAShO: $p++; goto VD1TN; l9Obf: $j = 0; goto PjZ3X; ZEi9_: $i++; goto OE_Y0; VD1TN: $mask = $mask >> 1; goto lXv5p; J_k3L: return $bstream; goto mTwr2; AtO_n: if (!($i < $size)) { goto q_kA_; } goto RUPpZ; OjVRE: $bstream->allocate($size * 8); goto a2AnO; OE_Y0: goto PCz0U; goto oC0Ki; lBvHr: goto P1eux; goto tOufu; tOufu: mGUz4: goto doTCH; ex35W: $bstream->data[$p] = 0; goto hsEE9; hsEE9: goto yZCtb; goto e2eTm; RUPpZ: $mask = 0x80; goto l9Obf; PjZ3X: P1eux: goto wj8oG; doTCH: hXXhU: goto ZEi9_; e2eTm: w5uIw: goto Eog9M; SgocT: $i = 0; goto imG8D; wjQpD: yZCtb: goto dAShO; wj8oG: if (!($j < 8)) { goto mGUz4; } goto G8iyQ; mTwr2: } public function append(QRbitstream $arg) { goto UQjOg; g0o0H: ir2jv: goto tDwR4; K81p4: N758_: goto yhQc9; MhqiL: return 0; goto g0o0H; yhQc9: if (!($this->size() == 0)) { goto ir2jv; } goto kiv7L; tDRZT: if (!($arg->size() == 0)) { goto N758_; } goto brNjp; kiv7L: $this->data = $arg->data; goto MhqiL; hXVSR: return -1; goto oADRS; oADRS: FWiS4: goto tDRZT; d0Wsf: return 0; goto ZQVw2; brNjp: return 0; goto K81p4; tDwR4: $this->data = array_values(array_merge($this->data, $arg->data)); goto d0Wsf; UQjOg: if (!is_null($arg)) { goto FWiS4; } goto hXVSR; ZQVw2: } public function appendNum($bits, $num) { goto W16rH; q8Jhq: return -1; goto kPmO8; hOxGj: unset($b); goto l6RzB; GL29D: Oebcn: goto wUzc2; hN_bc: return 0; goto GL29D; l6RzB: return $ret; goto hFFeN; WGRt4: $ret = $this->append($b); goto hOxGj; wUzc2: $b = QRbitstream::newFromNum($bits, $num); goto PGsde; kPmO8: ZW1uZ: goto WGRt4; W16rH: if (!($bits == 0)) { goto Oebcn; } goto hN_bc; PGsde: if (!is_null($b)) { goto ZW1uZ; } goto q8Jhq; hFFeN: } public function appendBytes($size, $data) { goto dLdEW; zSMKe: $b = QRbitstream::newFromBytes($size, $data); goto ziEcP; dLdEW: if (!($size == 0)) { goto vVH60; } goto iuaxB; rglee: $ret = $this->append($b); goto kyOMy; KD3Uq: return $ret; goto vopYn; kyOMy: unset($b); goto KD3Uq; ziEcP: if (!is_null($b)) { goto iQ9yH; } goto UImMn; BFomT: vVH60: goto zSMKe; iuaxB: return 0; goto BFomT; UImMn: return -1; goto qkVcC; qkVcC: iQ9yH: goto rglee; vopYn: } public function toByte() { goto rs0cY; eW3vO: $data[$i] = $v; goto za9DJ; ajzKJ: $v |= $this->data[$p]; goto Sul1E; t9b6a: CD_IP: goto THWXf; oeqX4: if (!($j < ($size & 7))) { goto CFWaF; } goto f20DV; EgcO2: $bytes = (int) ($size / 8); goto LOxd0; fP1HO: $data = array_fill(0, (int) (($size + 7) / 8), 0); goto EgcO2; THWXf: if (!($i < $bytes)) { goto U8owb; } goto t3Hpy; LOxd0: $p = 0; goto Dq10r; VzMW2: $j++; goto qdJtS; FZGvG: $j = 0; goto Tq1cf; pJ1t3: $p++; goto t725H; rucCc: $j++; goto Y1o3z; Dq10r: $i = 0; goto t9b6a; Tq1cf: ZbVEF: goto w4iE7; MSd4r: $v = $v << 1; goto ajzKJ; z7qGf: $v = 0; goto p_er6; uVN3K: $v |= $this->data[$p]; goto pJ1t3; IT2Cn: CBmcA: goto eW3vO; Tv800: return array(); goto cWkVj; zoe5b: $i++; goto CjOzo; w4iE7: if (!($j < 8)) { goto CBmcA; } goto MSd4r; f20DV: $v = $v << 1; goto uVN3K; CjOzo: goto CD_IP; goto QGT9Q; Y1o3z: goto ZbVEF; goto IT2Cn; t725H: Ujyrp: goto VzMW2; tfjE_: if (!($size & 7)) { goto AeKtE; } goto z7qGf; t3Hpy: $v = 0; goto FZGvG; h0aah: $data[$bytes] = $v; goto ivEYF; IGJXb: IGM47: goto oeqX4; za9DJ: RolfA: goto zoe5b; cWkVj: V78l7: goto fP1HO; G31js: CFWaF: goto h0aah; qdJtS: goto IGM47; goto G31js; Sul1E: $p++; goto X3LAp; syMzi: return $data; goto Sjt_f; p_er6: $j = 0; goto IGJXb; AQcQy: if (!($size == 0)) { goto V78l7; } goto Tv800; X3LAp: AqR7m: goto rucCc; ivEYF: AeKtE: goto syMzi; QGT9Q: U8owb: goto tfjE_; rs0cY: $size = $this->size(); goto AQcQy; Sjt_f: } } goto gfa8y; A5a8S: class QRmask { public $runLength = array(); public function __construct() { $this->runLength = array_fill(0, QRSPEC_WIDTH_MAX + 1, 0); } public function writeFormatInformation($width, &$frame, $mask, $level) { goto OyzO3; rCfe5: goto gMU3Z; goto LdM05; LdM05: aGQpn: goto dT1nS; tt5xe: $v = 0x85; goto Qcav4; dT1nS: $blacks += 2; goto tt5xe; rklUV: $frame[$i + 1][8] = chr($v); goto CH_32; F7FbC: iuHyz: goto B3J6M; gPCvo: RMLxk: goto iebw4; iebw4: $i++; goto led5u; d1XIr: EJ9fF: goto rF60W; euRbF: Xy0Xw: goto AINhF; Lffoq: $blacks += 2; goto czXXj; BCaiC: $frame[8][7] = chr($v); goto wweXe; B3J6M: $format = $format >> 1; goto gPCvo; m0Oc_: if ($i == 0) { goto sG0o3; } goto KbI2U; TLg_4: if (!($i < 8)) { goto Xy0Xw; } goto o0GMv; CH_32: goto iuHyz; goto aL1Ew; KRuZG: HKOJF: goto TLg_4; AINhF: $i = 0; goto OtEja; i5Zkm: return $blacks; goto AZFsL; LUeBN: $v = 0x84; goto rCfe5; Qcav4: gMU3Z: goto RNxOQ; RNxOQ: $frame[$width - 7 + $i][8] = chr($v); goto m0Oc_; OyzO3: $blacks = 0; goto nmmor; o0GMv: if ($format & 1) { goto osPDT; } goto DHJ10; fZVMB: goto EJ9fF; goto ll_vr; z9wRe: $frame[$i][8] = chr($v); goto F7FbC; DHJ10: $v = 0x84; goto fZVMB; rF60W: $frame[8][$width - 1 - $i] = chr($v); goto pGhhO; aVNTG: $format = $format >> 1; goto i67a1; SEzxX: goto jp8kR; goto G_0hx; wweXe: HrT_0: goto aVNTG; nmmor: $format = QRspec::getFormatInfo($mask, $level); goto rJ5Id; G_0hx: cD7am: goto i5Zkm; aL1Ew: lWSYa: goto z9wRe; ll_vr: osPDT: goto Lffoq; YllUP: goto HrT_0; goto WDP3A; czXXj: $v = 0x85; goto d1XIr; OtEja: jp8kR: goto g0Caq; rJ5Id: $i = 0; goto KRuZG; poZE2: $i++; goto SEzxX; KbI2U: $frame[8][6 - $i] = chr($v); goto YllUP; led5u: goto HKOJF; goto euRbF; XwbCs: if ($format & 1) { goto aGQpn; } goto LUeBN; pGhhO: if ($i < 6) { goto lWSYa; } goto rklUV; g0Caq: if (!($i < 7)) { goto cD7am; } goto XwbCs; i67a1: CAHUg: goto poZE2; WDP3A: sG0o3: goto BCaiC; AZFsL: } public function mask0($x, $y) { return $x + $y & 1; } public function mask1($x, $y) { return $y & 1; } public function mask2($x, $y) { return $x % 3; } public function mask3($x, $y) { return ($x + $y) % 3; } public function mask4($x, $y) { return (int) ($y / 2) + (int) ($x / 3) & 1; } public function mask5($x, $y) { return ($x * $y & 1) + $x * $y % 3; } public function mask6($x, $y) { return ($x * $y & 1) + $x * $y % 3 & 1; } public function mask7($x, $y) { return $x * $y % 3 + ($x + $y & 1) & 1; } private function generateMaskNo($maskNo, $width, $frame) { goto DPfxt; LHk29: $x = 0; goto lc3Ka; Voh9g: if (!($x < $width)) { goto eaiK8; } goto YoHO3; QQ8uG: $bitMask[$y][$x] = 0; goto EI7Eh; Jv4iB: $y = 0; goto kEIvC; Mn9xj: return $bitMask; goto hb413; Q1TJC: $x++; goto UHODm; B7pqN: LbOW9: goto Mn9xj; UHODm: goto qmxRH; goto DcmpT; fcIYE: $maskFunc = call_user_func(array($this, "\155\141\163\x6b" . $maskNo), $x, $y); goto YoCx3; Y9Alo: Y9rSX: goto Q1TJC; ydyCF: bJm41: goto QQ8uG; J_JgI: goto uQzMZ; goto B7pqN; YoCx3: $bitMask[$y][$x] = $maskFunc == 0 ? 1 : 0; goto D1pIY; lc3Ka: qmxRH: goto Voh9g; Ihr1S: $y++; goto J_JgI; DcmpT: eaiK8: goto PgVYD; D1pIY: goto P4LfK; goto ydyCF; PgVYD: vW60h: goto Ihr1S; YoHO3: if (ord($frame[$y][$x]) & 0x80) { goto bJm41; } goto fcIYE; DPfxt: $bitMask = array_fill(0, $width, array_fill(0, $width, 0)); goto Jv4iB; kEIvC: uQzMZ: goto GeyIL; GeyIL: if (!($y < $width)) { goto LbOW9; } goto LHk29; EI7Eh: P4LfK: goto Y9Alo; hb413: } public static function serial($bitFrame) { goto TQy5u; XFApe: p_vPi: goto ukUQ0; ukUQ0: return gzcompress(join("\12", $codeArr), 9); goto nvAe6; g11F1: foreach ($bitFrame as $line) { $codeArr[] = join('', $line); xqJOL: } goto XFApe; TQy5u: $codeArr = array(); goto g11F1; nvAe6: } public static function unserial($code) { goto u4en0; A3q2I: $codeLines = explode("\12", gzuncompress($code)); goto rkmdq; rkmdq: foreach ($codeLines as $line) { $codeArr[] = str_split($line); gZ7IE: } goto bxRvW; bxRvW: gN7lr: goto Jo530; Jo530: return $codeArr; goto YOZa_; u4en0: $codeArr = array(); goto A3q2I; YOZa_: } public function makeMaskNo($maskNo, $width, $s, &$d, $maskGenOnly = false) { goto WPN3F; oRG3A: $d = $s; goto alU5W; DrrIg: if (!$maskGenOnly) { goto nJEmL; } goto xzy3c; tvVtd: $bitMask = self::unserial(file_get_contents($fileName)); goto yY6jy; DtyqM: $x++; goto ig8Jg; ibsHU: c5UKL: goto HDA4W; alU5W: $y = 0; goto WcoKa; xzy3c: return; goto ZJZ9s; zxhSm: WJ3ue: goto MaRef; elsZf: $fileName = QR_CACHE_DIR . "\x6d\141\163\153\137" . $maskNo . DIRECTORY_SEPARATOR . "\x6d\141\163\x6b\137" . $width . "\137" . $maskNo . "\56\144\141\164"; goto n5r9e; X0iAU: $bitMask = array(); goto elsZf; sZJ44: file_put_contents($fileName, self::serial($bitMask)); goto cUrOw; yy0dv: if (!($bitMask[$y][$x] == 1)) { goto UKZy2; } goto phCVl; Jlxfy: ZBUsV: goto zxhSm; RGRbh: if (file_exists(QR_CACHE_DIR . "\155\x61\x73\x6b\x5f" . $maskNo)) { goto vT7fV; } goto Euz5M; cUrOw: goto KRps_; goto Sjfig; JYECV: if (file_exists($fileName)) { goto LwrC6; } goto OvtHR; Euz5M: mkdir(QR_CACHE_DIR . "\x6d\141\x73\153\x5f" . $maskNo); goto tbrpI; HDA4W: if (!($x < $width)) { goto ZBUsV; } goto yy0dv; phCVl: $d[$y][$x] = chr(ord($s[$y][$x]) ^ (int) $bitMask[$y][$x]); goto TbHQt; OvtHR: $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d); goto RGRbh; TbHQt: UKZy2: goto j9oUX; WcoKa: xu_m3: goto h2BN5; aHbBs: $x = 0; goto ibsHU; h2BN5: if (!($y < $width)) { goto Itanu; } goto aHbBs; FsdNK: return $b; goto zWmWj; WPN3F: $b = 0; goto X0iAU; jD7jq: $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d); goto iy2zd; aaYh7: Itanu: goto FsdNK; iy2zd: goto fJuzH; goto nQjd1; ZJZ9s: nJEmL: goto oRG3A; j9oUX: $b += (int) (ord($d[$y][$x]) & 1); goto StJbU; nQjd1: XI2Up: goto JYECV; tbrpI: vT7fV: goto sZJ44; E5uY7: goto xu_m3; goto aaYh7; n5r9e: if (QR_CACHEABLE) { goto XI2Up; } goto jD7jq; sj8UC: fJuzH: goto DrrIg; StJbU: BoDW0: goto DtyqM; MaRef: $y++; goto E5uY7; yY6jy: KRps_: goto sj8UC; Sjfig: LwrC6: goto tvVtd; ig8Jg: goto c5UKL; goto Jlxfy; zWmWj: } public function makeMask($width, $frame, $maskNo, $level) { goto TGF5q; guTDY: $this->writeFormatInformation($width, $masked, $maskNo, $level); goto GOPUq; GOPUq: return $masked; goto OuDvF; TGF5q: $masked = array_fill(0, $width, str_repeat("\x0", $width)); goto lzeo9; lzeo9: $this->makeMaskNo($maskNo, $width, $frame, $masked); goto guTDY; OuDvF: } public function calcN1N3($length) { goto oj8yF; jjtiC: $i++; goto E4dB5; t_Ac7: Baj1x: goto GZPZh; CgdYC: PESPB: goto ctPZ_; Gg5s_: if (!($this->runLength[$i - 2] == $fact && $this->runLength[$i - 1] == $fact && $this->runLength[$i + 1] == $fact && $this->runLength[$i + 2] == $fact)) { goto Baj1x; } goto f4Y7l; GZPZh: LMRv5: goto pR6OS; EN2Of: $i = 0; goto b4JXH; oj8yF: $demerit = 0; goto EN2Of; ctPZ_: goto rJAUH; goto dAOD4; jCjf4: if (!($this->runLength[$i] >= 5)) { goto EFP_5; } goto YSReL; SsW1Y: if (!($i >= 3 && $i < $length - 2 && $this->runLength[$i] % 3 == 0)) { goto LMRv5; } goto hSGji; ZdicT: $demerit += N3; goto lwAoZ; j547c: gUGHJ: goto WiB9f; pR6OS: dNNb7: goto RSw6j; b4JXH: Mu_jC: goto Lb4Dm; bgZb2: if (!($i & 1)) { goto dNNb7; } goto SsW1Y; Tbeh2: EFP_5: goto bgZb2; TVZWg: $demerit += N3; goto CgdYC; E4dB5: goto Mu_jC; goto j547c; lwAoZ: rJAUH: goto t_Ac7; dAOD4: VDfQU: goto ZdicT; Zwxih: if (!($i + 3 >= $length || $this->runLength[$i + 3] >= 4 * $fact)) { goto PESPB; } goto TVZWg; f4Y7l: if ($this->runLength[$i - 3] < 0 || $this->runLength[$i - 3] >= 4 * $fact) { goto VDfQU; } goto Zwxih; YSReL: $demerit += N1 + ($this->runLength[$i] - 5); goto Tbeh2; Lb4Dm: if (!($i < $length)) { goto gUGHJ; } goto jCjf4; RSw6j: GTzXe: goto jjtiC; hSGji: $fact = (int) ($this->runLength[$i] / 3); goto Gg5s_; WiB9f: return $demerit; goto tANoU; tANoU: } public function evaluateSymbol($width, $frame) { goto I29fi; IJdgu: $frameYM = $frame[$y - 1]; goto wFvaX; QsJI4: L64DD: goto xGDER; B587Y: $this->runLength[$head]++; goto CYk08; myp78: $y = 0; goto IrwHp; igU_z: G2Vof: goto za2EQ; pUq30: $demerit += $this->calcN1N3($head + 1); goto dOhUb; n4Xyz: if (!($x < $width)) { goto qeOUY; } goto mZSGn; JYZbu: if ($x == 0 && ord($frameY[$x]) & 1) { goto ao8HI; } goto eaB3_; yNqgc: kVf9r: goto t30V8; xjpmI: if (!($x > 0 && $y > 0)) { goto HIwd5; } goto NWwxp; BR4Cr: $y++; goto fmUSu; xGDER: $x++; goto vZYnZ; TojzF: if (!($y < $width)) { goto bDhp3; } goto PO9Si; G7sJK: $demerit += N2; goto igU_z; KxE5g: return $demerit; goto PXq7X; WMfGB: ao8HI: goto LQ9lh; nQ5EA: qeOUY: goto KxE5g; YkV04: Jot8Z: goto QsJI4; wFvaX: xtp3y: goto xzg4y; XV83e: Q3U7x: goto yEU3F; ElD2j: N8vdP: goto pau7o; JVClR: $head = 1; goto Zc0Jo; ZWHEs: if (!($y > 0)) { goto xtp3y; } goto IJdgu; ni1uG: sDONE: goto YV4xQ; Zc0Jo: $this->runLength[$head] = 1; goto YkV04; PNZK4: $demerit += $this->calcN1N3($head + 1); goto ni1uG; jt2D3: F2BxK: goto vN5tV; rblyS: if (!($y > 0)) { goto kVf9r; } goto rVylB; vZYnZ: goto AYl57; goto R_3Ko; mZSGn: $head = 0; goto NC19o; nryMv: V4N7z: goto YFqQ4; vYJ8f: $this->runLength[$head] = 1; goto olNMp; t30V8: goto F2BxK; goto GlYsS; xVOUO: bDhp3: goto PNZK4; XG3Rj: GlFn1: goto CDioE; fmUSu: goto TAyic; goto xVOUO; IVtvs: $y = 0; goto ElD2j; NWwxp: $b22 = ord($frameY[$x]) & ord($frameY[$x - 1]) & ord($frameYM[$x]) & ord($frameYM[$x - 1]); goto tdzJu; mBevN: goto k_WTu; goto nQ5EA; Wep8U: $demerit = 0; goto IVtvs; cJvYW: $head = 1; goto hQg46; YeQYC: goto N8vdP; goto nryMv; fKGS0: if (!(($b22 | $w22 ^ 1) & 1)) { goto G2Vof; } goto G7sJK; dOhUb: raAH3: goto Zqnog; GghKm: $this->runLength[0] = -1; goto cJvYW; NoVD7: $head++; goto vYJ8f; hQg46: $this->runLength[$head] = 1; goto jt2D3; R_3Ko: u8j1p: goto pUq30; fYoCV: $this->runLength[0] = 1; goto ce3_B; eaB3_: if (!($x > 0)) { goto GlFn1; } goto UYMPb; Zqnog: $y++; goto YeQYC; ce3_B: $frameY = $frame[$y]; goto ZWHEs; z6jPp: U89sK: goto XG3Rj; vN5tV: ryycb: goto BR4Cr; za2EQ: HIwd5: goto JYZbu; YdrQW: $this->runLength[$head] = 1; goto z6jPp; O4vyC: k_WTu: goto n4Xyz; LQ9lh: $this->runLength[0] = -1; goto JVClR; yEU3F: $head++; goto YdrQW; YFqQ4: $x = 0; goto O4vyC; P19CS: fqD0X: goto NoVD7; TdKca: AYl57: goto PxGaP; CDioE: goto Jot8Z; goto WMfGB; IrwHp: TAyic: goto TojzF; rVylB: if ((ord($frame[$y][$x]) ^ ord($frame[$y - 1][$x])) & 1) { goto fqD0X; } goto OHMdc; YV4xQ: $x++; goto mBevN; CYk08: goto U89sK; goto XV83e; bhyjU: goto QHbxK; goto P19CS; PO9Si: if ($y == 0 && ord($frame[$y][$x]) & 1) { goto Y6Tc4; } goto rblyS; NC19o: $this->runLength[0] = 1; goto myp78; I29fi: $head = 0; goto Wep8U; OHMdc: $this->runLength[$head]++; goto bhyjU; pau7o: if (!($y < $width)) { goto V4N7z; } goto DUQrI; DUQrI: $head = 0; goto fYoCV; olNMp: QHbxK: goto yNqgc; UYMPb: if ((ord($frameY[$x]) ^ ord($frameY[$x - 1])) & 1) { goto Q3U7x; } goto B587Y; GlYsS: Y6Tc4: goto GghKm; PxGaP: if (!($x < $width)) { goto u8j1p; } goto xjpmI; tdzJu: $w22 = ord($frameY[$x]) | ord($frameY[$x - 1]) | ord($frameYM[$x]) | ord($frameYM[$x - 1]); goto fKGS0; xzg4y: $x = 0; goto TdKca; PXq7X: } public function mask($width, $frame, $level) { goto w5M99; GkfYX: $bestMask = $frame; goto bVZiP; QJAVk: $checked_masks = array_values($checked_masks); goto GzQTt; jYqJY: if (!(QR_FIND_FROM_RANDOM !== false)) { goto RUtwv; } goto to0RF; lRcID: unset($checked_masks[$remPos]); goto QJAVk; EJL8Z: F7Tr3: goto gdxTw; nbRyl: HlEIY: goto t1lyz; OJMA0: return $bestMask; goto Pfgsq; HeMQj: $i++; goto D4Y6j; n9iKv: $checked_masks = array(0, 1, 2, 3, 4, 5, 6, 7); goto jYqJY; en4Tu: $i = 0; goto nbRyl; to0RF: $howManuOut = 8 - QR_FIND_FROM_RANDOM % 9; goto en4Tu; GzQTt: momH6: goto HeMQj; gdxTw: RUtwv: goto GkfYX; bVZiP: foreach ($checked_masks as $i) { goto plYIc; kBVmA: Nw4Bz: goto S3Ib1; iessT: $blacks = $this->makeMaskNo($i, $width, $frame, $mask); goto Te3aC; lWglP: $demerit = (int) ((int) (abs($blacks - 50) / 5) * N4); goto nOKaH; NiTHH: $demerit = 0; goto uo5r7; nOKaH: $demerit += $this->evaluateSymbol($width, $mask); goto O_6FD; S3Ib1: tX27u: goto fKZg8; mEvr3: $minDemerit = $demerit; goto mUHq4; Mx0Ct: $blacks = (int) (100 * $blacks / ($width * $width)); goto lWglP; plYIc: $mask = array_fill(0, $width, str_repeat("\x0", $width)); goto NiTHH; uo5r7: $blacks = 0; goto iessT; mUHq4: $bestMask = $mask; goto h5zCg; O_6FD: if (!($demerit < $minDemerit)) { goto Nw4Bz; } goto mEvr3; Te3aC: $blacks += $this->writeFormatInformation($width, $mask, $i, $level); goto Mx0Ct; h5zCg: $bestMaskNum = $i; goto kBVmA; fKZg8: } goto nm62S; OzF8A: $remPos = rand(0, count($checked_masks) - 1); goto lRcID; C9unc: $bestMaskNum = 0; goto WPxai; nm62S: yrXUu: goto OJMA0; WPxai: $bestMask = array(); goto n9iKv; D4Y6j: goto HlEIY; goto EJL8Z; t1lyz: if (!($i < $howManuOut)) { goto F7Tr3; } goto OzF8A; w5M99: $minDemerit = PHP_INT_MAX; goto C9unc; Pfgsq: } } goto eL4W2; K8c8s: class QRimage { public static function png($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4, $saveandprint = FALSE) { goto bUGU0; JlMNZ: header("\x43\157\156\x74\x65\156\164\55\164\x79\160\145\72\40\151\x6d\141\147\145\x2f\160\156\x67"); goto d7vEl; FveSV: qKhWL: goto s_b6D; FutpQ: if ($saveandprint === TRUE) { goto UbxUe; } goto eBbK3; eBbK3: ImagePng($image, $filename); goto bufXj; PTdPK: ImagePng($image); goto fQcwl; WZwK4: ImageDestroy($image); goto CNWg0; e2Lz7: Header("\103\x6f\156\x74\x65\156\164\55\164\x79\x70\x65\72\x20\151\x6d\x61\x67\145\57\x70\x6e\x67"); goto PTdPK; O8lJU: UbxUe: goto gok9N; WypQQ: if ($filename === false) { goto qScmN; } goto FutpQ; bUGU0: $image = self::image($frame, $pixelPerPoint, $outerFrame); goto WypQQ; s_b6D: goto P5s3j; goto GPhka; d7vEl: ImagePng($image); goto FveSV; fQcwl: P5s3j: goto WZwK4; bufXj: goto qKhWL; goto O8lJU; gok9N: ImagePng($image, $filename); goto JlMNZ; GPhka: qScmN: goto e2Lz7; CNWg0: } public static function jpg($frame, $filename = false, $pixelPerPoint = 8, $outerFrame = 4, $q = 85) { goto y0YJy; ym9yP: pt45l: goto wr2JW; gZZ43: if ($filename === false) { goto pt45l; } goto xJhou; xJhou: ImageJpeg($image, $filename, $q); goto u1S46; FNOZZ: ImageDestroy($image); goto b3CpQ; Q5e4n: jaoQx: goto FNOZZ; VJdb0: ImageJpeg($image, null, $q); goto Q5e4n; u1S46: goto jaoQx; goto ym9yP; y0YJy: $image = self::image($frame, $pixelPerPoint, $outerFrame); goto gZZ43; wr2JW: Header("\103\157\x6e\164\x65\x6e\164\55\x74\171\160\x65\72\40\x69\x6d\x61\147\145\57\x6a\160\x65\147"); goto VJdb0; b3CpQ: } private static function image($frame, $pixelPerPoint = 4, $outerFrame = 4) { goto V0Czz; mFbmP: $target_image = ImageCreate($imgW * $pixelPerPoint, $imgH * $pixelPerPoint); goto Zg6a_; pnwBh: d54Ff: goto hsXXw; UlPYd: $x = 0; goto k8zgQ; jK7Yv: $y++; goto Amq5U; fjeUg: ChZtC: goto g8UWs; vWlbm: goto iP2rR; goto iVJVG; Amq5U: goto ChZtC; goto iJlE5; j0KhC: if (!($frame[$y][$x] == "\x31")) { goto d54Ff; } goto yjGT3; ak3ZG: if (!($x < $w)) { goto M02YE; } goto j0KhC; g8UWs: if (!($y < $h)) { goto r81qq; } goto UlPYd; iJlE5: r81qq: goto mFbmP; f4AD2: $x++; goto vWlbm; kveS8: ImageDestroy($base_image); goto zJf1e; HOFii: $imgH = $h + 2 * $outerFrame; goto oxXZo; iVJVG: M02YE: goto ebRjs; ebRjs: uzXhB: goto jK7Yv; yjGT3: ImageSetPixel($base_image, $x + $outerFrame, $y + $outerFrame, $col[1]); goto pnwBh; oxXZo: $base_image = ImageCreate($imgW, $imgH); goto qdSYH; Zg6a_: ImageCopyResized($target_image, $base_image, 0, 0, 0, 0, $imgW * $pixelPerPoint, $imgH * $pixelPerPoint, $imgW, $imgH); goto kveS8; V0Czz: $h = count($frame); goto yW7Zo; k8zgQ: iP2rR: goto ak3ZG; vPVIr: $col[1] = ImageColorAllocate($base_image, 0, 0, 0); goto pBXrc; yW7Zo: $w = strlen($frame[0]); goto z0lt4; qdSYH: $col[0] = ImageColorAllocate($base_image, 255, 255, 255); goto vPVIr; pBXrc: imagefill($base_image, 0, 0, $col[0]); goto WqACi; WqACi: $y = 0; goto fjeUg; z0lt4: $imgW = $w + 2 * $outerFrame; goto HOFii; hsXXw: zqjUK: goto f4AD2; zJf1e: return $target_image; goto y3vD0; y3vD0: } } goto pRnjh; Znkt0: class qrstr { public static function set(&$srctab, $x, $y, $repl, $replLen = false) { $srctab[$y] = substr_replace($srctab[$y], $replLen !== false ? substr($repl, 0, $replLen) : $repl, $x, $replLen !== false ? $replLen : strlen($repl)); } } goto avGqf; EJ24C: define("\x51\x52\x5f\105\x43\114\x45\x56\105\x4c\x5f\x4d", 1); goto ioVWl; DwQBn: define("\121\x52\137\x43\101\103\110\x45\x5f\x44\x49\x52", false); goto wzW0s; v6RV2: define("\x4d\101\x58\137\123\x54\122\x55\x43\124\125\x52\105\x44\x5f\x53\131\x4d\x42\x4f\x4c\x53", 16); goto FRcLS; FRcLS: class QRinputItem { public $mode; public $size; public $data; public $bstream; public function __construct($mode, $size, $data, $bstream = null) { goto y_vGb; jxj4Y: if (!(count($setData) < $size)) { goto CC003; } goto yfUi9; vKdAb: $this->size = $size; goto E9Egk; vHybE: if (QRinput::check($mode, $size, $setData)) { goto xHcrr; } goto cXzAq; eKuJP: return null; goto x3e7E; x3e7E: xHcrr: goto U6Npl; E9Egk: $this->data = $setData; goto CFuCQ; rIMwD: CC003: goto vHybE; yfUi9: $setData = array_merge($setData, array_fill(0, $size - count($setData), 0)); goto rIMwD; cXzAq: throw new Exception("\x45\x72\x72\x6f\x72\x20\155\x3a" . $mode . "\54\163\72" . $size . "\54\144\x3a" . join("\54", $setData)); goto eKuJP; U6Npl: $this->mode = $mode; goto vKdAb; y_vGb: $setData = array_slice($data, 0, $size); goto jxj4Y; CFuCQ: $this->bstream = $bstream; goto BzAru; BzAru: } public function encodeModeNum($version) { try { goto QbeG4; xXJcN: $bs->appendNum(10, $val); goto Dr020; sf1yg: $val += ord($this->data[$words * 3 + 1]) - ord("\x30"); goto iT9Dw; sFmhs: dERVE: goto VMIqL; zzIkz: $val = ord($this->data[$words * 3]) - ord("\60"); goto KkGdP; x3kOa: $i++; goto scil_; iT9Dw: $bs->appendNum(7, $val); goto Iq3KE; tzsps: bNDf0: goto H1IMD; MaVVW: $val += (ord($this->data[$i * 3 + 1]) - ord("\x30")) * 10; goto Gui2O; PKg0K: $bs->appendNum(4, $val); goto BCKb5; QbeG4: $words = (int) ($this->size / 3); goto dkADz; cnrIc: OmyNF: goto eYBxb; nYW03: sPguJ: goto zzIkz; KkGdP: $bs->appendNum(4, $val); goto sFmhs; BCKb5: $bs->appendNum(QRspec::lengthIndicator(QR_MODE_NUM, $version), $this->size); goto RNK8a; hCTe6: return 0; goto lPAfD; scil_: goto OmyNF; goto tzsps; bKWNs: $val = (ord($this->data[$words * 3]) - ord("\x30")) * 10; goto sf1yg; VMIqL: $this->bstream = $bs; goto hCTe6; FLdwE: $val = (ord($this->data[$i * 3]) - ord("\60")) * 100; goto MaVVW; Iq3KE: hQnmM: goto oWu4X; H1IMD: if ($this->size - $words * 3 == 1) { goto sPguJ; } goto P0aL0; dkADz: $bs = new QRbitstream(); goto TIju0; Dr020: aOlR1: goto x3kOa; P0aL0: if (!($this->size - $words * 3 == 2)) { goto hQnmM; } goto bKWNs; TIju0: $val = 0x1; goto PKg0K; RNK8a: $i = 0; goto cnrIc; oWu4X: goto dERVE; goto nYW03; Gui2O: $val += ord($this->data[$i * 3 + 2]) - ord("\60"); goto xXJcN; eYBxb: if (!($i < $words)) { goto bNDf0; } goto FLdwE; lPAfD: } catch (Exception $e) { return -1; } } public function encodeModeAn($version) { try { goto ien4u; ESrXx: $val = QRinput::lookAnTable(ord($this->data[$words * 2])); goto bkLXL; f24s1: S7p4O: goto eMFz8; y0a20: $bs->appendNum(11, $val); goto f24s1; pnnjz: return 0; goto PRg7_; DqwC0: $bs = new QRbitstream(); goto SRUOF; bkLXL: $bs->appendNum(6, $val); goto Hq3VP; ZwLx4: if (!($i < $words)) { goto MhPh2; } goto JJBz7; SRUOF: $bs->appendNum(4, 0x2); goto DEZWN; ien4u: $words = (int) ($this->size / 2); goto DqwC0; Hq3VP: G81GM: goto tPyeg; JJBz7: $val = (int) QRinput::lookAnTable(ord($this->data[$i * 2])) * 45; goto ErINh; VL2Ir: $i = 0; goto s8HOH; Myclf: if (!($this->size & 1)) { goto G81GM; } goto ESrXx; s8HOH: n943G: goto ZwLx4; r2rxq: MhPh2: goto Myclf; ErINh: $val += (int) QRinput::lookAnTable(ord($this->data[$i * 2 + 1])); goto y0a20; eMFz8: $i++; goto jXnS1; jXnS1: goto n943G; goto r2rxq; tPyeg: $this->bstream = $bs; goto pnnjz; DEZWN: $bs->appendNum(QRspec::lengthIndicator(QR_MODE_AN, $version), $this->size); goto VL2Ir; PRg7_: } catch (Exception $e) { return -1; } } public function encodeMode8($version) { try { goto gy3T0; Rlw3C: $i++; goto P0DDy; QA93T: wBRmK: goto Jq5Ow; vcETb: $bs->appendNum(4, 0x4); goto mTOYB; mTOYB: $bs->appendNum(QRspec::lengthIndicator(QR_MODE_8, $version), $this->size); goto WvNBs; gy3T0: $bs = new QRbitstream(); goto vcETb; SoISO: $bs->appendNum(8, ord($this->data[$i])); goto yVHhg; WvNBs: $i = 0; goto cM41Q; uDAk7: return 0; goto VoCIH; P0DDy: goto XkpBk; goto QA93T; yVHhg: ropZ_: goto Rlw3C; U3Zuu: if (!($i < $this->size)) { goto wBRmK; } goto SoISO; cM41Q: XkpBk: goto U3Zuu; Jq5Ow: $this->bstream = $bs; goto uDAk7; VoCIH: } catch (Exception $e) { return -1; } } public function encodeModeKanji($version) { try { goto IJSbX; OWUaa: $bs->appendNum(4, 0x8); goto xbRuf; mmIQd: $val -= 0x8140; goto t0mji; rUF14: $bs->appendNum(13, $val); goto Ib1IK; IJSbX: $bs = new QRbitrtream(); goto OWUaa; rJJMT: if (!($i < $this->size)) { goto p0Zyh; } goto nOiZ8; RThub: $i += 2; goto KAC_y; Ib1IK: lXbou: goto RThub; xbRuf: $bs->appendNum(QRspec::lengthIndicator(QR_MODE_KANJI, $version), (int) ($this->size / 2)); goto op3GN; XJwFk: $val -= 0xc140; goto aH5HB; lB8rY: $this->bstream = $bs; goto I3lJY; MBxiO: tT5Gj: goto mmIQd; aH5HB: goto qy9l0; goto MBxiO; op3GN: $i = 0; goto UI1m6; jZTv9: if ($val <= 0x9ffc) { goto tT5Gj; } goto XJwFk; UI1m6: XsUnK: goto rJJMT; nOiZ8: $val = ord($this->data[$i]) << 8 | ord($this->data[$i + 1]); goto jZTv9; n7AnW: p0Zyh: goto lB8rY; I3lJY: return 0; goto dvxW8; n4rxg: $h = ($val >> 8) * 0xc0; goto hS7iR; t0mji: qy9l0: goto n4rxg; hS7iR: $val = ($val & 0xff) + $h; goto rUF14; KAC_y: goto XsUnK; goto n7AnW; dvxW8: } catch (Exception $e) { return -1; } } public function encodeModeStructure() { try { goto gQYUD; Rt7lG: $bs->appendNum(8, ord($this->data[2])); goto ZDLOt; nSzN3: $bs->appendNum(4, ord($this->data[1]) - 1); goto VBtL1; VBtL1: $bs->appendNum(4, ord($this->data[0]) - 1); goto Rt7lG; gQYUD: $bs = new QRbitstream(); goto NVrNW; NVrNW: $bs->appendNum(4, 0x3); goto nSzN3; ZDLOt: $this->bstream = $bs; goto k7Iyo; k7Iyo: return 0; goto Z8eVC; Z8eVC: } catch (Exception $e) { return -1; } } public function estimateBitStreamSizeOfEntry($version) { goto D8_rr; Rgv57: switch ($this->mode) { case QR_MODE_NUM: $bits = QRinput::estimateBitsModeNum($this->size); goto CrD8a; case QR_MODE_AN: $bits = QRinput::estimateBitsModeAn($this->size); goto CrD8a; case QR_MODE_8: $bits = QRinput::estimateBitsMode8($this->size); goto CrD8a; case QR_MODE_KANJI: $bits = QRinput::estimateBitsModeKanji($this->size); goto CrD8a; case QR_MODE_STRUCTURE: return STRUCTURE_HEADER_BITS; default: return 0; } goto y45L6; asKcL: yb4Hr: goto Rgv57; xRF6G: $l = QRspec::lengthIndicator($this->mode, $version); goto AkIyQ; Fj6TU: $version = 1; goto asKcL; AkIyQ: $m = 1 << $l; goto eJ4lv; ccFys: $bits += $num * (4 + $l); goto pH8Tm; D8_rr: $bits = 0; goto JpzGF; pH8Tm: return $bits; goto N4Hgl; eJ4lv: $num = (int) (($this->size + $m - 1) / $m); goto ccFys; y45L6: KuaKG: goto RZ4Eb; JpzGF: if (!($version == 0)) { goto yb4Hr; } goto Fj6TU; RZ4Eb: CrD8a: goto xRF6G; N4Hgl: } public function encodeBitStream($version) { try { goto kYYk0; WwPrF: goto opqVe; goto Rl5K_; JWBfm: unset($st1); goto Ly278; QUe8x: $st2->encodeBitStream($version); goto wjn_f; W0TVG: if ($this->size > $words) { goto Mlkj7; } goto Vx6s5; axGwP: kj16z: goto GNv0p; VByy3: opqVe: goto vm1e2; JgtGB: switch ($this->mode) { case QR_MODE_NUM: $ret = $this->encodeModeNum($version); goto o9HEf; case QR_MODE_AN: $ret = $this->encodeModeAn($version); goto o9HEf; case QR_MODE_8: $ret = $this->encodeMode8($version); goto o9HEf; case QR_MODE_KANJI: $ret = $this->encodeModeKanji($version); goto o9HEf; case QR_MODE_STRUCTURE: $ret = $this->encodeModeStructure(); goto o9HEf; default: goto o9HEf; } goto axGwP; Ly278: unset($st2); goto VByy3; GNv0p: o9HEf: goto gzhES; wjn_f: $this->bstream = new QRbitstream(); goto wGHQv; Rl5K_: Mlkj7: goto vGKUk; vGKUk: $st1 = new QRinputItem($this->mode, $words, $this->data); goto Kcgnh; Kcgnh: $st2 = new QRinputItem($this->mode, $this->size - $words, array_slice($this->data, $words)); goto QeMoM; gzhES: if (!($ret < 0)) { goto uf1Zz; } goto FOWNx; wGHQv: $this->bstream->append($st1->bstream); goto gxo6e; FOWNx: return -1; goto hu161; gxo6e: $this->bstream->append($st2->bstream); goto JWBfm; vm1e2: return $this->bstream->size(); goto ShSb6; hu161: uf1Zz: goto WwPrF; QeMoM: $st1->encodeBitStream($version); goto QUe8x; ixdzj: $words = QRspec::maximumWords($this->mode, $version); goto W0TVG; Vx6s5: $ret = 0; goto JgtGB; kYYk0: unset($this->bstream); goto ixdzj; ShSb6: } catch (Exception $e) { return -1; } } } goto rB63K; rB63K: class QRinput { public $items; private $version; private $level; public function __construct($version = 0, $level = QR_ECLEVEL_L) { goto Zm1Q5; MEiJU: return NULL; goto JLMkv; iJ2t2: $this->level = $level; goto ye5Rw; cdIW6: $this->version = $version; goto iJ2t2; z5sJ0: throw new Exception("\x49\156\166\x61\x6c\151\144\40\x76\145\x72\163\151\x6f\156\40\156\157"); goto MEiJU; JLMkv: iP4Zm: goto cdIW6; Zm1Q5: if (!($version < 0 || $version > QRSPEC_VERSION_MAX || $level > QR_ECLEVEL_H)) { goto iP4Zm; } goto z5sJ0; ye5Rw: } public function getVersion() { return $this->version; } public function setVersion($version) { goto m66ju; y0ynk: vOtu8: goto K9qqF; FDoAh: throw new Exception("\111\x6e\x76\x61\x6c\151\x64\40\166\x65\162\163\x69\x6f\x6e\40\156\x6f"); goto frPVd; m66ju: if (!($version < 0 || $version > QRSPEC_VERSION_MAX)) { goto vOtu8; } goto FDoAh; K9qqF: $this->version = $version; goto JkqVM; frPVd: return -1; goto y0ynk; JkqVM: return 0; goto Zvno_; Zvno_: } public function getErrorCorrectionLevel() { return $this->level; } public function setErrorCorrectionLevel($level) { goto XrgQ_; VK4xI: $this->level = $level; goto RKeg4; K0PBk: throw new Exception("\x49\156\x76\141\154\x69\x64\x20\x45\x43\x4c\x45\x56\105\x4c"); goto vpXqm; vpXqm: return -1; goto JiBCS; RKeg4: return 0; goto dSUTQ; XrgQ_: if (!($level > QR_ECLEVEL_H)) { goto f2lou; } goto K0PBk; JiBCS: f2lou: goto VK4xI; dSUTQ: } public function appendEntry(QRinputItem $entry) { $this->items[] = $entry; } public function append($mode, $size, $data) { try { goto QcECI; QcECI: $entry = new QRinputItem($mode, $size, $data); goto GHQF_; nwAIE: return 0; goto a0dqk; GHQF_: $this->items[] = $entry; goto nwAIE; a0dqk: } catch (Exception $e) { return -1; } } public function insertStructuredAppendHeader($size, $index, $parity) { goto VOHo5; VOHo5: if (!($size > MAX_STRUCTURED_SYMBOLS)) { goto OBnrd; } goto Ywjw0; UtMW6: try { goto P490z; XZWQy: return 0; goto dGf3p; g19rZ: array_unshift($this->items, $entry); goto XZWQy; P490z: $entry = new QRinputItem(QR_MODE_STRUCTURE, 3, buf); goto g19rZ; dGf3p: } catch (Exception $e) { return -1; } goto oScYy; x4PpF: sxX6_: goto kaVQj; MpmNV: OBnrd: goto hwjhV; Ywjw0: throw new Exception("\x69\x6e\163\x65\162\x74\x53\164\162\165\x63\164\x75\162\x65\144\101\x70\x70\x65\x6e\144\x48\145\x61\x64\145\162\x20\x77\x72\x6f\x6e\147\40\163\151\172\145"); goto MpmNV; l0PZO: throw new Exception("\151\x6e\x73\x65\x72\x74\x53\164\162\x75\x63\x74\x75\162\x65\x64\x41\x70\x70\145\156\144\x48\x65\x61\144\145\x72\40\167\162\x6f\x6e\147\x20\x69\156\144\x65\170"); goto x4PpF; hwjhV: if (!($index <= 0 || $index > MAX_STRUCTURED_SYMBOLS)) { goto sxX6_; } goto l0PZO; kaVQj: $buf = array($size, $index, $parity); goto UtMW6; oScYy: } public function calcParity() { goto f4KxJ; alwmV: K1Om2: goto ezYJm; f4KxJ: $parity = 0; goto jblyN; jblyN: foreach ($this->items as $item) { goto ga25l; lRz8Z: HDP5j: goto N1O8H; t4BW1: Zwajb: goto LsjYe; N1O8H: $i--; goto LXc3S; LXc3S: goto wCvad; goto t4BW1; VDZbL: $i = $item->size - 1; goto CADlJ; ABxN3: zht2t: goto SELGX; nR1BY: if (!($i >= 0)) { goto Zwajb; } goto cMBq0; ga25l: if (!($item->mode != QR_MODE_STRUCTURE)) { goto UTy2m; } goto VDZbL; CADlJ: wCvad: goto nR1BY; LsjYe: UTy2m: goto ABxN3; cMBq0: $parity ^= $item->data[$i]; goto lRz8Z; SELGX: } goto alwmV; ezYJm: return $parity; goto q4dvn; q4dvn: } public static function checkModeNum($size, $data) { goto axCL2; hg7Jw: if (!($i < $size)) { goto pyg_e; } goto TROT1; O31fQ: pyg_e: goto Icx2f; E0YPq: $i++; goto L1eGL; cuGJ9: return false; goto ymJ0y; YlH7j: LprjX: goto E0YPq; hYJ8x: Fkcw2: goto hg7Jw; L1eGL: goto Fkcw2; goto O31fQ; ymJ0y: ypKWY: goto YlH7j; TROT1: if (!(ord($data[$i]) < ord("\60") || ord($data[$i]) > ord("\x39"))) { goto ypKWY; } goto cuGJ9; Icx2f: return true; goto EpnLf; axCL2: $i = 0; goto hYJ8x; EpnLf: } public static function estimateBitsModeNum($size) { goto z9tTc; z9tTc: $w = (int) $size / 3; goto NIphb; NIphb: $bits = $w * 10; goto VZn7B; Q3ZeL: return $bits; goto Ov1XE; c3yxA: QGYOO: goto Q3ZeL; VZn7B: switch ($size - $w * 3) { case 1: $bits += 4; goto QGYOO; case 2: $bits += 7; goto QGYOO; default: goto QGYOO; } goto bxt0l; bxt0l: zAWkO: goto c3yxA; Ov1XE: } public static $anTable = array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 44, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1); public static function lookAnTable($c) { return $c > 127 ? -1 : self::$anTable[$c]; } public static function checkModeAn($size, $data) { goto sz8ew; pGGzT: $i++; goto EebHQ; EebHQ: goto AA2i8; goto C_Uru; C_Uru: TgJJG: goto LYc4P; sz8ew: $i = 0; goto UuyhK; F1PD4: return false; goto rl_ZG; UuyhK: AA2i8: goto SsX1D; SsX1D: if (!($i < $size)) { goto TgJJG; } goto WPzUF; LYc4P: return true; goto YSl8q; kgKQH: TO0FK: goto pGGzT; WPzUF: if (!(self::lookAnTable(ord($data[$i])) == -1)) { goto PKnjc; } goto F1PD4; rl_ZG: PKnjc: goto kgKQH; YSl8q: } public static function estimateBitsModeAn($size) { goto DYwhD; o2MNv: $bits = $w * 11; goto Qmltw; Qmltw: if (!($size & 1)) { goto zcwzI; } goto mZhTt; DYwhD: $w = (int) ($size / 2); goto o2MNv; jKGWX: return $bits; goto lYEXU; mZhTt: $bits += 6; goto Yh8gm; Yh8gm: zcwzI: goto jKGWX; lYEXU: } public static function estimateBitsMode8($size) { return $size * 8; } public function estimateBitsModeKanji($size) { return (int) ($size / 2 * 13); } public static function checkModeKanji($size, $data) { goto Hftz8; OZ6Kh: return true; goto dH2An; ziO4Z: ddK0F: goto afkUM; VuSp7: return false; goto nQKuC; Hftz8: if (!($size & 1)) { goto t1q90; } goto eNQA7; afkUM: $i += 2; goto uat1i; vnxz1: if (!($val < 0x8140 || $val > 0x9ffc && $val < 0xe040 || $val > 0xebbf)) { goto VkA1h; } goto VuSp7; bsHWK: $i = 0; goto fOoT_; fOoT_: r3aEJ: goto kirkR; BEqBu: t1q90: goto bsHWK; nQKuC: VkA1h: goto ziO4Z; uat1i: goto r3aEJ; goto zTOZN; kirkR: if (!($i < $size)) { goto qG870; } goto YVdcb; zTOZN: qG870: goto OZ6Kh; YVdcb: $val = ord($data[$i]) << 8 | ord($data[$i + 1]); goto vnxz1; eNQA7: return false; goto BEqBu; dH2An: } public static function check($mode, $size, $data) { goto ZJMya; tCdBq: JHd93: goto vfjWb; mSzd6: return false; goto R1LNA; R1LNA: YZrEo: goto Z252h; Z252h: switch ($mode) { case QR_MODE_NUM: return self::checkModeNum($size, $data); goto pkBCM; case QR_MODE_AN: return self::checkModeAn($size, $data); goto pkBCM; case QR_MODE_KANJI: return self::checkModeKanji($size, $data); goto pkBCM; case QR_MODE_8: return true; goto pkBCM; case QR_MODE_STRUCTURE: return true; goto pkBCM; default: goto pkBCM; } goto tCdBq; vfjWb: pkBCM: goto OHt9v; ZJMya: if (!($size <= 0)) { goto YZrEo; } goto mSzd6; OHt9v: return false; goto HJ0Tq; HJ0Tq: } public function estimateBitStreamSize($version) { goto ZVD9T; ZVD9T: $bits = 0; goto MmrNe; MmrNe: foreach ($this->items as $item) { $bits += $item->estimateBitStreamSizeOfEntry($version); a4wsG: } goto A2JVF; dkLCb: return $bits; goto PnamP; A2JVF: K0P8T: goto dkLCb; PnamP: } public function estimateVersion() { goto TtVWE; Rx3s5: PPlXV: goto morU_; toRhP: return -1; goto nDLi6; nDLi6: fMsys: goto LB4s5; ow8Pr: $version = QRspec::getMinimumVersion((int) (($bits + 7) / 8), $this->level); goto EGrXM; qMmhm: return $version; goto MOsLH; EGrXM: if (!($version < 0)) { goto fMsys; } goto toRhP; m6ijA: $prev = 0; goto Rx3s5; LB4s5: if ($version > $prev) { goto PPlXV; } goto nz1dT; gEwuc: $bits = $this->estimateBitStreamSize($prev); goto ow8Pr; TtVWE: $version = 0; goto m6ijA; morU_: $prev = $version; goto gEwuc; nz1dT: siv1_: goto qMmhm; MOsLH: } public static function lengthOfCode($mode, $version, $bits) { goto trtzU; p3ceJ: if (!($size > $maxsize)) { goto D3UO1; } goto ifU3K; vjTk5: D3UO1: goto SQQvz; trtzU: $payload = $bits - 4 - QRspec::lengthIndicator($mode, $version); goto epDz4; uA1bs: xUxug: goto p3ceJ; SQQvz: return $size; goto i4eVw; ifU3K: $size = $maxsize; goto vjTk5; epDz4: switch ($mode) { case QR_MODE_NUM: goto VtiXP; VtiXP: $chunks = (int) ($payload / 10); goto D3yjj; dZ6JA: ITVZZ: goto qJCRb; ENUcZ: if (!($remain >= 4)) { goto UEEVF; } goto B8sdN; Mxvae: goto xSIHy; goto dZ6JA; B8sdN: $size += 1; goto vt6wn; Macv3: xSIHy: goto qIf1n; qJCRb: $size += 2; goto Macv3; qIf1n: goto TXXrK; goto DSIAv; vt6wn: UEEVF: goto Mxvae; D3yjj: $remain = $payload - $chunks * 10; goto gyXyD; pmlnC: if ($remain >= 7) { goto ITVZZ; } goto ENUcZ; gyXyD: $size = $chunks * 3; goto pmlnC; DSIAv: case QR_MODE_AN: goto uEd_B; xosR1: QY2R3: goto DgHhU; Kl3DE: $size++; goto xosR1; DgHhU: goto TXXrK; goto LqChQ; uEd_B: $chunks = (int) ($payload / 11); goto Nfm9C; bbAYU: $size = $chunks * 2; goto B1Z5D; B1Z5D: if (!($remain >= 6)) { goto QY2R3; } goto Kl3DE; Nfm9C: $remain = $payload - $chunks * 11; goto bbAYU; LqChQ: case QR_MODE_8: $size = (int) ($payload / 8); goto TXXrK; case QR_MODE_KANJI: $size = (int) ($payload / 13 * 2); goto TXXrK; case QR_MODE_STRUCTURE: $size = (int) ($payload / 8); goto TXXrK; default: $size = 0; goto TXXrK; } goto HNB8a; HNB8a: wloHe: goto U3XX3; M5hnc: $maxsize = QRspec::maximumWords($mode, $version); goto yDRGV; U3XX3: TXXrK: goto M5hnc; pXqRx: $size = 0; goto uA1bs; yDRGV: if (!($size < 0)) { goto xUxug; } goto pXqRx; i4eVw: } public function createBitStream() { goto AnDzj; rHDgD: foreach ($this->items as $item) { goto ryg0w; ryg0w: $bits = $item->encodeBitStream($this->version); goto c54hc; z1q3w: $total += $bits; goto mfPSJ; Hlu7b: EKmSC: goto z1q3w; c54hc: if (!($bits < 0)) { goto EKmSC; } goto oR5Qn; oR5Qn: return -1; goto Hlu7b; mfPSJ: YEqmN: goto duG_y; duG_y: } goto oukEb; FoxQn: return $total; goto adbnu; AnDzj: $total = 0; goto rHDgD; oukEb: fDcAA: goto FoxQn; adbnu: } public function convertData() { goto UmKQU; y_xef: GoF8K: goto VNm23; YKoDh: goto ZZwU5; goto KXahC; YzCH7: throw new Exception("\x57\x52\117\116\107\40\126\105\122\123\111\117\x4e"); goto xL3V2; R3gJz: return 0; goto Qk4vb; CA87t: return -1; goto Er5W0; JqSO2: if (!($bits < 0)) { goto cPa3W; } goto CA87t; M8cED: if ($ver > $this->getVersion()) { goto WnE87; } goto YKoDh; ZDr08: gERWN: goto V4_Fz; yTw0c: $this->setVersion($ver); goto f0lCC; f0lCC: u4nJn: goto AyzmM; UmKQU: $ver = $this->estimateVersion(); goto bpsnf; xZrSo: hHgil: goto y_xef; cVZoB: $this->setVersion($ver); goto ZDr08; AyzmM: goto hHgil; goto FN9DS; xL3V2: return -1; goto xZrSo; q5iWW: $bits = $this->createBitStream(); goto JqSO2; bpsnf: if (!($ver > $this->getVersion())) { goto gERWN; } goto cVZoB; V4_Fz: J_MA3: goto q5iWW; ciWmN: WnE87: goto yTw0c; FN9DS: LkWxx: goto YzCH7; yPPRU: $ver = QRspec::getMinimumVersion((int) (($bits + 7) / 8), $this->level); goto uENG4; VNm23: goto J_MA3; goto s7hOL; uENG4: if ($ver < 0) { goto LkWxx; } goto M8cED; KXahC: goto u4nJn; goto ciWmN; s7hOL: ZZwU5: goto R3gJz; Er5W0: cPa3W: goto yPPRU; Qk4vb: } public function appendPaddingBit(&$bstream) { goto PBXI1; fAfBY: vIofe: goto WB31z; SzGkW: $ret = $padding->appendBytes($padlen, $padbuf); goto KYAqJ; WB31z: if (!($maxbits - $bits < 5)) { goto KiLhE; } goto DNTNf; mrqfS: sNAxX: goto SzGkW; RcdI_: return $ret; goto cHUII; VQI1c: $i = 0; goto INViX; yNuY6: if (!($i < $padlen)) { goto sNAxX; } goto xk5Or; AT_gl: fvnyr: goto rfiR7; wruAX: AjzUF: goto QBtff; QBtff: $i++; goto Pi3wv; INViX: PQLJK: goto yNuY6; PBXI1: $bits = $bstream->size(); goto Y4hDf; HNJpr: return 0; goto fAfBY; KPAVo: $ret = $bstream->append($padding); goto hFEE8; F6s87: return $ret; goto AT_gl; WorSq: if (!($maxbits == $bits)) { goto vIofe; } goto HNJpr; C814I: $ret = $padding->appendNum($words * 8 - $bits + 4, 0); goto DlAhn; Pi3wv: goto PQLJK; goto mrqfS; KYAqJ: if (!($ret < 0)) { goto fvnyr; } goto F6s87; uIink: if (!($padlen > 0)) { goto Nf1GR; } goto VHPpu; VHPpu: $padbuf = array(); goto VQI1c; Akp5i: $padlen = $maxwords - $words; goto uIink; qPeCn: $bits += 4; goto F0TU2; WqnpQ: KiLhE: goto qPeCn; A4ONb: $maxbits = $maxwords * 8; goto WorSq; hFEE8: return $ret; goto bpYTx; Y4hDf: $maxwords = QRspec::getDataLength($this->version, $this->level); goto A4ONb; cHUII: deaEy: goto Akp5i; F0TU2: $words = (int) (($bits + 7) / 8); goto n3liY; rfiR7: Nf1GR: goto KPAVo; DlAhn: if (!($ret < 0)) { goto deaEy; } goto RcdI_; xk5Or: $padbuf[$i] = $i & 1 ? 0x11 : 0xec; goto wruAX; n3liY: $padding = new QRbitstream(); goto C814I; DNTNf: return $bstream->appendNum($maxbits - $bits, 0); goto WqnpQ; bpYTx: } public function mergeBitStream() { goto j8C2k; Y1bTB: B_d7s: goto hK7GI; mhkBF: yIHnB: goto C8xLV; eFMlw: foreach ($this->items as $item) { goto pS6NE; N96yC: if (!($ret < 0)) { goto KHDyR; } goto MG0S7; pS6NE: $ret = $bstream->append($item->bstream); goto N96yC; jxaug: qw6JP: goto JDmoS; MG0S7: return null; goto wCZlo; wCZlo: KHDyR: goto jxaug; JDmoS: } goto Y1bTB; C8xLV: $bstream = new QRbitstream(); goto eFMlw; hK7GI: return $bstream; goto O5EPc; oI1mK: return null; goto mhkBF; j8C2k: if (!($this->convertData() < 0)) { goto yIHnB; } goto oI1mK; O5EPc: } public function getBitStream() { goto ZFMQI; lvSLY: return null; goto vhmwz; U0L3V: $ret = $this->appendPaddingBit($bstream); goto T_2qM; vueT3: if (!($bstream == null)) { goto FYK1I; } goto fOXm6; fOXm6: return null; goto DfZoO; T_2qM: if (!($ret < 0)) { goto egcfd; } goto lvSLY; ZFMQI: $bstream = $this->mergeBitStream(); goto vueT3; DfZoO: FYK1I: goto U0L3V; vhmwz: egcfd: goto lcMi_; lcMi_: return $bstream; goto wXnp1; wXnp1: } public function getByteStream() { goto NmLjG; pyJ65: u90K0: goto BDy0f; BDy0f: return $bstream->toByte(); goto Rvrl0; cr8_R: return null; goto pyJ65; d42ua: if (!($bstream == null)) { goto u90K0; } goto cr8_R; NmLjG: $bstream = $this->getBitStream(); goto d42ua; Rvrl0: } } goto e1NLo; FkIbY: define("\121\122\137\106\x4f\122\x4d\x41\x54\137\124\x45\130\124", 0); goto qSYOu; inmDd: class QRtools { public static function binarize($frame) { goto z1l4y; U_EAH: foreach ($frame as &$frameLine) { goto u1O5H; HHG0X: bit6r: goto Snxv1; EAnXq: $i++; goto NfpJ7; NfpJ7: goto bit6r; goto QDNBu; D1TRC: $frameLine[$i] = ord($frameLine[$i]) & 1 ? "\x31" : "\x30"; goto ZEtXq; Snxv1: if (!($i < $len)) { goto ucYcT; } goto D1TRC; Eh0qp: T4LWL: goto OLdco; u1O5H: $i = 0; goto HHG0X; ZEtXq: JqnqT: goto EAnXq; QDNBu: ucYcT: goto Eh0qp; OLdco: } goto Ig7HC; jmOzR: return $frame; goto GN1ka; Ig7HC: h5WNl: goto jmOzR; z1l4y: $len = count($frame); goto U_EAH; GN1ka: } public static function tcpdfBarcodeArray($code, $mode = "\x51\122\54\x4c", $tcPdfVersion = "\64\56\x35\56\x30\x33\x37") { goto LXESG; rhobp: $barcode_array["\x6e\x75\x6d\x5f\143\x6f\x6c\x73"] = $size; goto rq8Nr; Et41p: $eccLevel = "\x4c"; goto uG1YQ; qQ3cG: dC_CS: goto Et41p; oar81: lsjdN: goto PsC8F; aDJdG: $size = count($qrTab); goto oM9NL; RLPdc: foreach ($qrTab as $line) { goto rJG_o; fYhCJ: Uf4cR: goto oNNZm; Nxqtj: foreach (str_split($line) as $char) { $arrAdd[] = $char == "\61" ? 1 : 0; n1MUL: } goto fYhCJ; qzFpm: mHDL0: goto b4eLm; oNNZm: $barcode_array["\142\143\157\x64\x65"][] = $arrAdd; goto qzFpm; rJG_o: $arrAdd = array(); goto Nxqtj; b4eLm: } goto Y8hDw; Y8hDw: bCkSy: goto FZpF3; PXOu3: $eccLevel = $mode[1]; goto oar81; R8nCE: if (is_array($mode)) { goto dC_CS; } goto n97c9; PsC8F: $qrTab = QRcode::text($code, false, $eccLevel); goto aDJdG; n97c9: $mode = explode("\x2c", $mode); goto qQ3cG; rq8Nr: $barcode_array["\x62\143\x6f\x64\145"] = array(); goto RLPdc; LXESG: $barcode_array = array(); goto R8nCE; oM9NL: $barcode_array["\156\165\155\x5f\162\157\167\x73"] = $size; goto rhobp; FZpF3: return $barcode_array; goto X3eM3; uG1YQ: if (!(count($mode) > 1)) { goto lsjdN; } goto PXOu3; X3eM3: } public static function clearCache() { self::$frames = array(); } public static function buildCache() { goto xvOCx; fTif4: bMH5U: goto U42om; aYuy5: tihPb: goto zaLzw; pnxjl: HHJ15: goto qMQ87; rhH04: $bitMask = array_fill(0, $width, array_fill(0, $width, 0)); goto Fkykg; xvOCx: QRtools::markTime("\x62\145\x66\157\162\145\x5f\142\165\151\154\x64\x5f\x63\141\143\x68\x65"); goto XtEc4; kiJWO: if (!QR_IMAGE) { goto j3A5W; } goto qv1NP; jC0H1: $mask->makeMaskNo($maskNo, $width, $frame, $bitMask, true); goto B7jvR; OT1E6: $width = count($frame); goto rhH04; IQbLN: $a = 1; goto aYuy5; Fkykg: $maskNo = 0; goto WC3Se; U42om: $a++; goto RQvRU; j2neX: $frame = QRspec::newFrame($a); goto kiJWO; B7jvR: NLCQy: goto p00lt; YSLpL: goto cSRkM; goto YAJWI; zaLzw: if (!($a <= QRSPEC_VERSION_MAX)) { goto HHJ15; } goto j2neX; iCKRW: if (!($maskNo < 8)) { goto q0P9A; } goto jC0H1; fG3EL: QRimage::png(self::binarize($frame), $fileName, 1, 0); goto lS2uQ; qv1NP: $fileName = QR_CACHE_DIR . "\x66\162\x61\155\x65\137" . $a . "\x2e\160\x6e\x67"; goto fG3EL; WC3Se: cSRkM: goto iCKRW; RQvRU: goto tihPb; goto pnxjl; p00lt: $maskNo++; goto YSLpL; YAJWI: q0P9A: goto fTif4; qMQ87: QRtools::markTime("\141\146\164\145\162\x5f\x62\165\151\x6c\x64\137\143\x61\143\x68\x65"); goto cwC6u; lS2uQ: j3A5W: goto OT1E6; XtEc4: $mask = new QRmask(); goto IQbLN; cwC6u: } public static function log($outfile, $err) { goto U38OU; U38OU: if (!(QR_LOG_DIR !== false)) { goto gOmmT; } goto fXiLC; qj7KG: goto cQ5rl; goto UrLsc; TccUp: if ($outfile !== false) { goto mIG_J; } goto kQJAO; Kt6ZF: file_put_contents(QR_LOG_DIR . basename($outfile) . "\55\145\x72\x72\157\x72\x73\x2e\x74\170\x74", date("\x59\55\x6d\x2d\144\x20\x48\72\151\x3a\x73") . "\72\40" . $err, FILE_APPEND); goto ngKbJ; UrLsc: mIG_J: goto Kt6ZF; B8U2F: I8t_X: goto Rd8Wq; ngKbJ: cQ5rl: goto B8U2F; Rd8Wq: gOmmT: goto UXmPQ; fXiLC: if (!($err != '')) { goto I8t_X; } goto TccUp; kQJAO: file_put_contents(QR_LOG_DIR . "\x65\162\162\157\x72\x73\x2e\164\x78\164", date("\131\55\x6d\x2d\144\x20\110\72\151\x3a\163") . "\x3a\40" . $err, FILE_APPEND); goto qj7KG; UXmPQ: } public static function dumpMask($frame) { goto O1E9g; Q9yFf: echo ord($frame[$y][$x]) . "\54"; goto jiqxN; H2K1P: $y = 0; goto ceu5S; k22q8: $x = 0; goto cQ9Wb; ceu5S: xexhz: goto TrGja; jiqxN: p6oDr: goto PMQz3; wJITO: suHUP: goto kMI0t; cQ9Wb: dDqDR: goto DUMVg; O1E9g: $width = count($frame); goto H2K1P; IQPGu: goto dDqDR; goto wJITO; kMI0t: VQl3f: goto DFQrZ; PMQz3: $x++; goto IQPGu; pqgCz: jsyyi: goto eZJqf; PySJe: goto xexhz; goto pqgCz; DUMVg: if (!($x < $width)) { goto suHUP; } goto Q9yFf; DFQrZ: $y++; goto PySJe; TrGja: if (!($y < $width)) { goto jsyyi; } goto k22q8; eZJqf: } public static function markTime($markerId) { goto qOm8S; z3A2J: ltnfr: goto zdUNz; qOm8S: list($usec, $sec) = explode("\40", microtime()); goto y9bc2; zdUNz: $GLOBALS["\x71\162\x5f\x74\151\155\x65\x5f\142\145\156\x63\x68"][$markerId] = $time; goto cmhgy; WF12P: $GLOBALS["\x71\x72\x5f\x74\151\155\145\137\142\145\x6e\x63\150"] = array(); goto z3A2J; y9bc2: $time = (double) $usec + (double) $sec; goto HS62X; HS62X: if (isset($GLOBALS["\x71\162\137\164\x69\155\x65\137\x62\145\156\x63\x68"])) { goto ltnfr; } goto WF12P; cmhgy: } public static function timeBenchmark() { goto Pb0Ur; HbFVJ: $startTime = 0; goto tYhSi; Pb0Ur: self::markTime("\146\151\x6e\x69\x73\150"); goto YosKg; tYhSi: $p = 0; goto l6s67; xJE9i: foreach ($GLOBALS["\x71\x72\x5f\x74\151\155\x65\137\x62\x65\x6e\143\x68"] as $markerId => $thisTime) { goto b0pSP; v1dCm: $p++; goto jwNIL; gCZ2a: fdW2e: goto v1dCm; jwNIL: $lastTime = $thisTime; goto ectF7; b0pSP: if ($p > 0) { goto Rw1La; } goto r0w3b; vwsx2: Rw1La: goto kyl_i; dIslc: goto fdW2e; goto vwsx2; kyl_i: echo "\x3c\x74\x72\x3e\x3c\x74\150\40\163\x74\x79\x6c\145\x3d\x22\x74\x65\170\164\x2d\x61\x6c\151\x67\x6e\x3a\x72\x69\x67\x68\x74\x22\76\x74\151\154\154\x20" . $markerId . "\72\x20\74\x2f\x74\x68\76\74\x74\144\x3e" . number_format($thisTime - $lastTime, 6) . "\163\x3c\x2f\x74\144\76\74\x2f\x74\x72\x3e"; goto gCZ2a; ectF7: s06Qu: goto HHowq; r0w3b: $startTime = $thisTime; goto dIslc; HHowq: } goto O4tUO; l6s67: echo "\x3c\x74\141\142\154\x65\40\x63\145\154\x6c\160\141\x64\144\151\156\x67\x3d\42\63\x22\x20\x63\x65\x6c\154\x73\x70\x61\x63\x69\x6e\x67\75\x22\x31\x22\x3e\xd\15\12\x20\40\x20\x20\40\40\40\40\40\40\x20\x20\40\x20\x20\40\x20\40\x20\x20\x3c\x74\x68\145\x61\144\x3e\74\x74\x72\x20\x73\x74\x79\x6c\145\75\x22\142\x6f\162\144\145\162\x2d\x62\x6f\x74\164\157\155\x3a\61\160\x78\40\163\x6f\154\x69\144\x20\163\x69\x6c\166\x65\162\x22\x3e\x3c\x74\144\40\143\x6f\154\x73\160\141\x6e\x3d\42\62\42\40\x73\x74\171\154\x65\75\x22\x74\x65\170\x74\x2d\141\154\151\x67\156\x3a\143\145\156\164\145\x72\x22\76\x42\x45\x4e\x43\x48\115\x41\x52\113\74\x2f\x74\144\x3e\74\57\x74\x72\76\x3c\57\164\x68\x65\x61\144\76\15\xd\xa\40\40\x20\x20\40\40\40\x20\x20\x20\40\x20\x20\x20\x20\40\x20\40\x20\x20\x3c\x74\x62\x6f\144\171\x3e"; goto xJE9i; YosKg: $lastTime = 0; goto HbFVJ; O4tUO: U9Th6: goto muWeQ; muWeQ: echo "\x3c\57\164\x62\157\144\x79\x3e\x3c\164\x66\x6f\157\164\76\xd\xd\12\x20\x20\40\x20\x20\x20\x20\x20\x20\40\40\40\x20\40\x20\x20\x3c\164\162\x20\x73\x74\171\154\145\x3d\42\142\157\162\x64\x65\162\x2d\164\x6f\160\72\x32\160\170\x20\x73\x6f\154\x69\x64\40\x62\x6c\141\x63\x6b\x22\x3e\74\x74\x68\40\x73\x74\171\x6c\x65\x3d\x22\x74\x65\x78\x74\55\141\x6c\151\x67\x6e\x3a\162\151\x67\x68\164\x22\x3e\x54\x4f\x54\x41\x4c\x3a\x20\x3c\57\164\150\76\74\x74\x64\x3e" . number_format($lastTime - $startTime, 6) . "\x73\x3c\57\x74\144\76\x3c\57\x74\162\76\xd\15\xa\x20\x20\40\40\x20\x20\40\40\40\x20\x20\x20\x3c\57\x74\x66\157\157\164\x3e\15\15\12\x20\40\40\40\x20\x20\x20\x20\x20\x20\x20\x20\74\57\164\x61\142\154\145\x3e"; goto Oda0g; Oda0g: } } goto m6gOw; r3nQJ: define("\121\x52\x5f\x4d\x4f\104\x45\x5f\x4e\x55\115", 0); goto V4_H0; fNzMX: define("\121\x52\x5f\x44\105\x46\x41\125\114\124\137\x4d\x41\123\x4b", 2); goto nEr30; nGLa8: define("\116\x34", 10); goto A5a8S; m9q_V: define("\121\122\103\x41\x50\137\x52\x45\115\x49\116\104\105\x52", 2); goto MH3zX; VZzHb: define("\x51\x52\137\x45\103\x4c\x45\x56\105\114\137\x48", 3); goto FkIbY; TTZON: define("\x4e\62", 3); goto u1hVr; SpGyE: define("\x51\122\x5f\x45\103\114\x45\126\105\x4c\x5f\x4c", 0); goto EJ24C; mEX1T: define("\x51\122\x5f\115\x4f\x44\x45\x5f\x4e\125\114", -1); goto r3nQJ; MH3zX: define("\121\x52\x43\x41\120\137\x45\x43", 3); goto qupql; ujlXi: class QRrsItem { public $mm; public $nn; public $alpha_to = array(); public $index_of = array(); public $genpoly = array(); public $nroots; public $fcr; public $prim; public $iprim; public $pad; public $gfpoly; public function modnn($x) { goto CNXtr; BJJmb: goto SXy7F; goto Mq5gS; VnE00: return $x; goto F2xDQ; mBjqp: $x -= $this->nn; goto jXTKC; Mq5gS: rUHcM: goto VnE00; CNXtr: SXy7F: goto jNlCh; jNlCh: if (!($x >= $this->nn)) { goto rUHcM; } goto mBjqp; jXTKC: $x = ($x >> $this->mm) + ($x & $this->nn); goto BJJmb; F2xDQ: } public static function init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad) { goto KL5PZ; H5A5_: if ($rs->genpoly[$j] != 0) { goto nJepl; } goto i32r6; kI9C3: if (!($i < $nroots)) { goto eS9j6; } goto b6Tu3; ZMG7k: if (!($iprim % $prim != 0)) { goto LYHpq; } goto j0oO8; JpR1C: XzcdN: goto D9gnJ; Dz_KY: Yz8Qd: goto nWVfY; KL5PZ: $rs = null; goto gxZAY; sG3l2: $i++; goto o9z03; nWVfY: if (!($nroots < 0 || $nroots >= 1 << $symsize)) { goto HLh2q; } goto PXGde; h5HMu: $rs->genpoly = array_fill(0, $nroots + 1, 0); goto WDud1; KSgqc: $A0 =& $NN; goto kcR_z; GccHm: $rs->mm = $symsize; goto C7Fyn; d_oqZ: $rs->alpha_to = array_fill(0, $rs->nn + 1, 0); goto fTf5j; mfuaJ: $rs->iprim = (int) ($iprim / $prim); goto f8vX4; OvOsO: $rs->index_of[$sr] = $i; goto zBeap; WGOfO: $rs = NULL; goto KTOB2; ydbCw: nJepl: goto cTnkX; em6dk: return $rs; goto Dz_KY; lqrow: WdIVw: goto DspXJ; PXGde: return $rs; goto W3e1w; o9z03: $root += $prim; goto RLRYh; mC3Q6: goto V7cEE; goto OgPhY; wE01O: $j--; goto BdzeA; DPOqn: return $rs; goto VayqM; b6Tu3: $rs->genpoly[$i + 1] = 1; goto gDeq5; gu19Z: L9O63: goto kI9C3; Man4o: wPI9t: goto cDIEJ; bpRHC: goto ZPJAH; goto Od4Vf; jaSxI: Qx46G: goto dRTR5; fTf5j: $rs->index_of = array_fill(0, $rs->nn + 1, 0); goto nSfUz; rMsbN: if (!($sr & 1 << $symsize)) { goto qqPGR; } goto DNYaB; FCBWG: PC8Yj: goto J_G95; XE5pX: qqPGR: goto bkzNM; i32r6: $rs->genpoly[$j] = $rs->genpoly[$j - 1]; goto bqZ9L; HEVWH: return $rs; goto Man4o; hKrmc: gR8mj: goto h5HMu; nSfUz: $NN =& $rs->nn; goto KSgqc; ckhBs: goto Z6lxm; goto qmIV1; F8WdE: $sr = 1; goto uDH_N; cDIEJ: if (!($prim <= 0 || $prim >= 1 << $symsize)) { goto Yz8Qd; } goto em6dk; Od4Vf: LYHpq: goto mfuaJ; zHBMp: return $rs; goto jaSxI; C7Fyn: $rs->nn = (1 << $symsize) - 1; goto x7i6l; sDg5i: $root = $fcr * $prim; goto gu19Z; f8vX4: $rs->genpoly[0] = 1; goto mkjH7; dRTR5: if (!($fcr < 0 || $fcr >= 1 << $symsize)) { goto wPI9t; } goto HEVWH; o_LlY: $iprim = 1; goto qw4eg; c38uG: if (!($i < $rs->nn)) { goto hYMDD; } goto OvOsO; TRY3a: if (!($pad < 0 || $pad >= (1 << $symsize) - 1 - $nroots)) { goto PC8Yj; } goto dA1RG; wjr6A: $i = 0; goto oHLVZ; zmE1C: eS9j6: goto wjr6A; qw4eg: ZPJAH: goto ZMG7k; OgPhY: RJvr1: goto DPOqn; gxZAY: if (!($symsize < 0 || $symsize > 8)) { goto Qx46G; } goto zHBMp; dA1RG: return $rs; goto FCBWG; BdzeA: goto WdIVw; goto rVfU1; kcR_z: $rs->index_of[0] = $A0; goto Tp6xm; J_G95: $rs = new QRrsItem(); goto GccHm; bkzNM: $sr &= $rs->nn; goto JpR1C; rVfU1: krPi4: goto GKcdz; sdWSg: ZEM59: goto Dv5oE; GKcdz: $rs->genpoly[0] = $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[0]] + $root)]; goto RCciR; KJb0W: $i++; goto mC3Q6; zBeap: $rs->alpha_to[$i] = $sr; goto lG5MF; nDz0B: if (!($i <= $nroots)) { goto RJvr1; } goto VNMQR; WDud1: $rs->fcr = $fcr; goto fWOSR; RCciR: ts9ac: goto sG3l2; Tp6xm: $rs->alpha_to[$A0] = 0; goto F8WdE; CHQV6: $rs->gfpoly = $gfpoly; goto o_LlY; bM3Ny: if (!($sr != 1)) { goto gR8mj; } goto WGOfO; gI95w: $rs->nroots = $nroots; goto CHQV6; KTOB2: return $rs; goto hKrmc; RLRYh: goto L9O63; goto zmE1C; j0oO8: SpaoH: goto MfEyE; W3e1w: HLh2q: goto TRY3a; x7i6l: $rs->pad = $pad; goto d_oqZ; D9gnJ: $i++; goto ckhBs; MfEyE: $iprim += $rs->nn; goto bpRHC; VNMQR: $rs->genpoly[$i] = $rs->index_of[$rs->genpoly[$i]]; goto Lh7_q; qmIV1: hYMDD: goto bM3Ny; uDH_N: $i = 0; goto SJQnX; DspXJ: if (!($j > 0)) { goto krPi4; } goto H5A5_; lG5MF: $sr <<= 1; goto rMsbN; Lh7_q: BPx9y: goto KJb0W; DNYaB: $sr ^= $gfpoly; goto XE5pX; mkjH7: $i = 0; goto sDg5i; oHLVZ: V7cEE: goto nDz0B; gDeq5: $j = $i; goto lqrow; bqZ9L: goto ZEM59; goto ydbCw; fWOSR: $rs->prim = $prim; goto gI95w; SJQnX: Z6lxm: goto c38uG; Dv5oE: yvpDk: goto wE01O; cTnkX: $rs->genpoly[$j] = $rs->genpoly[$j - 1] ^ $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[$j]] + $root)]; goto sdWSg; VayqM: } public function encode_rs_char($data, &$parity) { goto ahEdN; QYhjw: $j = 1; goto TV8on; qiV64: $INDEX_OF =& $this->index_of; goto Yihbe; X1_1o: $i++; goto qcyYw; ylFDW: $PAD =& $this->pad; goto MfYc6; oIDDC: goto h8FOj; goto N97xZ; XWbHY: $NN =& $this->nn; goto Hi1gd; QrXgz: ofpXQ: goto KDu6I; ahEdN: $MM =& $this->mm; goto XWbHY; Agast: $IPRIM =& $this->iprim; goto ylFDW; IwglP: $j++; goto oIDDC; fDQkf: $PRIM =& $this->prim; goto Agast; AgKnI: $i = 0; goto anL1L; KDu6I: array_push($parity, $ALPHA_TO[$this->modnn($feedback + $GENPOLY[0])]); goto FlIdl; anL1L: Em1vi: goto JidFo; s03k5: $parity[$j] ^= $ALPHA_TO[$this->modnn($feedback + $GENPOLY[$NROOTS - $j])]; goto kZAeT; MfYc6: $A0 =& $NN; goto dSfGi; TBZZq: o_RnB: goto YQtyi; JidFo: if (!($i < $NN - $NROOTS - $PAD)) { goto sGmQA; } goto LWkIk; fGAtt: $feedback = $this->modnn($NN - $GENPOLY[$NROOTS] + $feedback); goto QYhjw; NvTk0: DrGUd: goto X1_1o; Yihbe: $GENPOLY =& $this->genpoly; goto hZN9O; qcyYw: goto Em1vi; goto Us9fe; FlIdl: V5122: goto NvTk0; FMUjH: array_push($parity, 0); goto KcbMg; MGcUd: if (!($feedback != $A0)) { goto o_RnB; } goto fGAtt; KcbMg: goto V5122; goto QrXgz; dSfGi: $parity = array_fill(0, $NROOTS, 0); goto AgKnI; bg0JV: $FCR =& $this->fcr; goto fDQkf; kZAeT: ek6oh: goto IwglP; LWkIk: $feedback = $INDEX_OF[$data[$i] ^ $parity[0]]; goto MGcUd; N97xZ: QJlPQ: goto TBZZq; YQtyi: array_shift($parity); goto Cjgze; TV8on: h8FOj: goto ehijw; hZN9O: $NROOTS =& $this->nroots; goto bg0JV; ehijw: if (!($j < $NROOTS)) { goto QJlPQ; } goto s03k5; Cjgze: if ($feedback != $A0) { goto ofpXQ; } goto FMUjH; Us9fe: sGmQA: goto K24iR; Hi1gd: $ALPHA_TO =& $this->alpha_to; goto qiV64; K24iR: } } goto eqYhl; mN0Xt: define("\x51\x52\x43\101\120\x5f\127\x49\104\124\110", 0); goto TQRr9; HCATb: class QRrawcode { public $version; public $datacode = array(); public $ecccode = array(); public $blocks; public $rsblocks = array(); public $count; public $dataLength; public $eccLength; public $b1; public function __construct(QRinput $input) { goto o9h3d; o9h3d: $spec = array(0, 0, 0, 0, 0); goto mIkkc; om5gn: throw new Exception("\x6e\x75\x6c\154\40\x69\155\x70\165\164\40\163\x74\162\x69\x6e\147"); goto lnr7r; lnr7r: O1VKK: goto itdPn; EHKLn: return null; goto MOsnD; ELlFN: throw new Exception("\142\x6c\x6f\143\153\40\x61\154\x6c\157\x63\x20\x65\162\x72\x6f\162"); goto EHKLn; itdPn: QRspec::getEccSpec($input->getVersion(), $input->getErrorCorrectionLevel(), $spec); goto SPjr6; mIkkc: $this->datacode = $input->getByteStream(); goto yhIJa; WigvE: $this->blocks = QRspec::rsBlockNum($spec); goto eV_Z5; eV_Z5: $ret = $this->init($spec); goto GwH5v; WwQds: $this->ecccode = array_fill(0, $this->eccLength, 0); goto WigvE; MOsnD: Q03P7: goto BkhGE; yhIJa: if (!is_null($this->datacode)) { goto O1VKK; } goto om5gn; rmigu: $this->eccLength = QRspec::rsEccLength($spec); goto WwQds; l9J28: $this->dataLength = QRspec::rsDataLength($spec); goto rmigu; BkhGE: $this->count = 0; goto G6YDq; UIrLA: $this->b1 = QRspec::rsBlockNum1($spec); goto l9J28; SPjr6: $this->version = $input->getVersion(); goto UIrLA; GwH5v: if (!($ret < 0)) { goto Q03P7; } goto ELlFN; G6YDq: } public function init(array $spec) { goto sS6e0; pXluv: $i = 0; goto fFWVt; fMMOM: $i = 0; goto X6ygJ; fymiX: $blockNo++; goto iPbrZ; ew6F3: $this->rsblocks[$blockNo] = new QRrsblock($dl, array_slice($this->datacode, $dataPos), $el, $ecc, $rs); goto Y1gtg; oUwcY: $blockNo = 0; goto OccMF; OccMF: $dataPos = 0; goto n6D0s; FP4Tt: $dataPos += $dl; goto W5g2I; sBYyf: if (!($i < QRspec::rsBlockNum1($spec))) { goto XDnfW; } goto JzzCz; EaGzY: return -1; goto ibPVh; sS6e0: $dl = QRspec::rsDataCodes1($spec); goto ox5YS; oeUg0: $this->rsblocks[$blockNo] = new QRrsblock($dl, array_slice($this->datacode, $dataPos), $el, $ecc, $rs); goto fdUae; enIS2: if (!(QRspec::rsBlockNum2($spec) == 0)) { goto kkXez; } goto wL_7k; CakZ2: XDnfW: goto enIS2; V7EKf: $dataPos += $dl; goto GbK6n; sI5u0: if (!($i < QRspec::rsBlockNum2($spec))) { goto n5SP8; } goto S7AlQ; fFWVt: akirL: goto sI5u0; iPbrZ: oPU7S: goto kqcS2; whcgr: goto akirL; goto L2dIn; Tei0Q: return 0; goto jka9A; ibPVh: NJ1vA: goto pXluv; Y1gtg: $this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc); goto FP4Tt; kqcS2: $i++; goto whcgr; L2dIn: n5SP8: goto Tei0Q; GbK6n: $eccPos += $el; goto fymiX; jmhJE: kkXez: goto n2uKH; lnfo3: if (!($rs == NULL)) { goto NJ1vA; } goto EaGzY; lLIFD: euCh1: goto EOZRS; hxilX: $rs = QRrs::init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el); goto oUwcY; ox5YS: $el = QRspec::rsEccCodes1($spec); goto hxilX; cAU36: $rs = QRrs::init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el); goto lnfo3; n2uKH: $dl = QRspec::rsDataCodes2($spec); goto AOGaL; n6D0s: $eccPos = 0; goto fMMOM; JzzCz: $ecc = array_slice($this->ecccode, $eccPos); goto ew6F3; ecbZI: goto CJ0M1; goto CakZ2; W5g2I: $eccPos += $el; goto RIbdA; wL_7k: return 0; goto jmhJE; S7AlQ: $ecc = array_slice($this->ecccode, $eccPos); goto oeUg0; fdUae: $this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc); goto V7EKf; EOZRS: $i++; goto ecbZI; RIbdA: $blockNo++; goto lLIFD; AOGaL: $el = QRspec::rsEccCodes2($spec); goto cAU36; X6ygJ: CJ0M1: goto sBYyf; jka9A: } public function getCode() { goto PXenA; oPW3b: $row = ($this->count - $this->dataLength) % $this->blocks; goto bLCJz; im3pA: return $ret; goto U1Ihw; c4FII: Vv77a: goto oPW3b; gQGmo: $this->count++; goto im3pA; UfgIF: nSA0i: goto w0Rj2; KDk3j: UPATP: goto gQGmo; ZMUKS: goto Sba5Z; goto c4FII; s6Z58: if ($this->count < $this->dataLength + $this->eccLength) { goto Vv77a; } goto EB7K1; w0Rj2: $ret = $this->rsblocks[$row]->data[$col]; goto KDk3j; zyaCc: CylRr: goto q8CSr; sKkqb: if (!($col >= $this->rsblocks[0]->dataLength)) { goto nSA0i; } goto V_Qfo; V_Qfo: $row += $this->b1; goto UfgIF; pATkY: $ret = $this->rsblocks[$row]->ecc[$col]; goto LoMZW; PXenA: $ret; goto vODz2; LoMZW: Sba5Z: goto q1Tlf; EB7K1: return 0; goto ZMUKS; q8CSr: $row = $this->count % $this->blocks; goto xRxx0; xRxx0: $col = $this->count / $this->blocks; goto sKkqb; vODz2: if ($this->count < $this->dataLength) { goto CylRr; } goto s6Z58; q1Tlf: goto UPATP; goto zyaCc; bLCJz: $col = ($this->count - $this->dataLength) / $this->blocks; goto pATkY; U1Ihw: } } goto y_Mg0; qupql: class QRspec { public static $capacity = array(array(0, 0, 0, array(0, 0, 0, 0)), array(21, 26, 0, array(7, 10, 13, 17)), array(25, 44, 7, array(10, 16, 22, 28)), array(29, 70, 7, array(15, 26, 36, 44)), array(33, 100, 7, array(20, 36, 52, 64)), array(37, 134, 7, array(26, 48, 72, 88)), array(41, 172, 7, array(36, 64, 96, 112)), array(45, 196, 0, array(40, 72, 108, 130)), array(49, 242, 0, array(48, 88, 132, 156)), array(53, 292, 0, array(60, 110, 160, 192)), array(57, 346, 0, array(72, 130, 192, 224)), array(61, 404, 0, array(80, 150, 224, 264)), array(65, 466, 0, array(96, 176, 260, 308)), array(69, 532, 0, array(104, 198, 288, 352)), array(73, 581, 3, array(120, 216, 320, 384)), array(77, 655, 3, array(132, 240, 360, 432)), array(81, 733, 3, array(144, 280, 408, 480)), array(85, 815, 3, array(168, 308, 448, 532)), array(89, 901, 3, array(180, 338, 504, 588)), array(93, 991, 3, array(196, 364, 546, 650)), array(97, 1085, 3, array(224, 416, 600, 700)), array(101, 1156, 4, array(224, 442, 644, 750)), array(105, 1258, 4, array(252, 476, 690, 816)), array(109, 1364, 4, array(270, 504, 750, 900)), array(113, 1474, 4, array(300, 560, 810, 960)), array(117, 1588, 4, array(312, 588, 870, 1050)), array(121, 1706, 4, array(336, 644, 952, 1110)), array(125, 1828, 4, array(360, 700, 1020, 1200)), array(129, 1921, 3, array(390, 728, 1050, 1260)), array(133, 2051, 3, array(420, 784, 1140, 1350)), array(137, 2185, 3, array(450, 812, 1200, 1440)), array(141, 2323, 3, array(480, 868, 1290, 1530)), array(145, 2465, 3, array(510, 924, 1350, 1620)), array(149, 2611, 3, array(540, 980, 1440, 1710)), array(153, 2761, 3, array(570, 1036, 1530, 1800)), array(157, 2876, 0, array(570, 1064, 1590, 1890)), array(161, 3034, 0, array(600, 1120, 1680, 1980)), array(165, 3196, 0, array(630, 1204, 1770, 2100)), array(169, 3362, 0, array(660, 1260, 1860, 2220)), array(173, 3532, 0, array(720, 1316, 1950, 2310)), array(177, 3706, 0, array(750, 1372, 2040, 2430))); public static function getDataLength($version, $level) { return self::$capacity[$version][QRCAP_WORDS] - self::$capacity[$version][QRCAP_EC][$level]; } public static function getECCLength($version, $level) { return self::$capacity[$version][QRCAP_EC][$level]; } public static function getWidth($version) { return self::$capacity[$version][QRCAP_WIDTH]; } public static function getRemainder($version) { return self::$capacity[$version][QRCAP_REMINDER]; } public static function getMinimumVersion($size, $level) { goto mKd6_; KtejJ: return $i; goto OGiPk; mKnzj: if (!($words >= $size)) { goto L7Iv1; } goto KtejJ; Y8J7y: $words = self::$capacity[$i][QRCAP_WORDS] - self::$capacity[$i][QRCAP_EC][$level]; goto mKnzj; LhXb3: uGYQ7: goto u203t; mKd6_: $i = 1; goto LhXb3; TYxsJ: $i++; goto gt910; OGiPk: L7Iv1: goto OU6NM; Zp5KL: return -1; goto wRZZS; gt910: goto uGYQ7; goto qJ2LB; OU6NM: nj70n: goto TYxsJ; u203t: if (!($i <= QRSPEC_VERSION_MAX)) { goto RO3ph; } goto Y8J7y; qJ2LB: RO3ph: goto Zp5KL; wRZZS: } public static $lengthTableBits = array(array(10, 12, 14), array(9, 11, 13), array(8, 16, 16), array(8, 10, 12)); public static function lengthIndicator($mode, $version) { goto HRTfx; EDosI: return self::$lengthTableBits[$mode][$l]; goto Sbfgl; Ew3W2: $l = 0; goto zNZ1g; xv0eQ: HM0rz: goto A2A0r; BDxqZ: t6z63: goto Ew3W2; zNZ1g: OAjvL: goto EDosI; aKhEi: fFJi4: goto uojlJ; A2A0r: $l = 1; goto RV7yY; Zyd4T: $l = 2; goto tmJj1; uojlJ: if ($version <= 9) { goto t6z63; } goto o6aiD; o6aiD: if ($version <= 26) { goto HM0rz; } goto Zyd4T; ojOT5: return 0; goto aKhEi; cihCT: goto OAjvL; goto BDxqZ; RV7yY: YR3Eq: goto cihCT; tmJj1: goto YR3Eq; goto xv0eQ; HRTfx: if (!($mode == QR_MODE_STRUCTURE)) { goto fFJi4; } goto ojOT5; Sbfgl: } public static function maximumWords($mode, $version) { goto OtbOD; ncK6W: return 3; goto jdojf; PLNKA: goto aIXG5; goto v07li; OtbOD: if (!($mode == QR_MODE_STRUCTURE)) { goto nCfV0; } goto ncK6W; gx2d3: if (!($mode == QR_MODE_KANJI)) { goto wbiRl; } goto qjmX5; f3q3Y: $l = 1; goto pQFjX; pQFjX: aIXG5: goto cOkzM; Ohfnn: return $words; goto diAKy; LJQ_t: wbiRl: goto Ohfnn; v07li: zXU1z: goto f3q3Y; Os_id: $words = (1 << $bits) - 1; goto gx2d3; jPuxL: $l = 0; goto fsLsR; CNRiQ: $l = 2; goto PLNKA; Ttnxl: if ($version <= 26) { goto zXU1z; } goto CNRiQ; fsLsR: ZooRk: goto o4Xbo; o4Xbo: $bits = self::$lengthTableBits[$mode][$l]; goto Os_id; jdojf: nCfV0: goto uGvJS; qjmX5: $words *= 2; goto LJQ_t; UQ0p1: CSIhf: goto jPuxL; uGvJS: if ($version <= 9) { goto CSIhf; } goto Ttnxl; cOkzM: goto ZooRk; goto UQ0p1; diAKy: } public static $eccTable = array(array(array(0, 0), array(0, 0), array(0, 0), array(0, 0)), array(array(1, 0), array(1, 0), array(1, 0), array(1, 0)), array(array(1, 0), array(1, 0), array(1, 0), array(1, 0)), array(array(1, 0), array(1, 0), array(2, 0), array(2, 0)), array(array(1, 0), array(2, 0), array(2, 0), array(4, 0)), array(array(1, 0), array(2, 0), array(2, 2), array(2, 2)), array(array(2, 0), array(4, 0), array(4, 0), array(4, 0)), array(array(2, 0), array(4, 0), array(2, 4), array(4, 1)), array(array(2, 0), array(2, 2), array(4, 2), array(4, 2)), array(array(2, 0), array(3, 2), array(4, 4), array(4, 4)), array(array(2, 2), array(4, 1), array(6, 2), array(6, 2)), array(array(4, 0), array(1, 4), array(4, 4), array(3, 8)), array(array(2, 2), array(6, 2), array(4, 6), array(7, 4)), array(array(4, 0), array(8, 1), array(8, 4), array(12, 4)), array(array(3, 1), array(4, 5), array(11, 5), array(11, 5)), array(array(5, 1), array(5, 5), array(5, 7), array(11, 7)), array(array(5, 1), array(7, 3), array(15, 2), array(3, 13)), array(array(1, 5), array(10, 1), array(1, 15), array(2, 17)), array(array(5, 1), array(9, 4), array(17, 1), array(2, 19)), array(array(3, 4), array(3, 11), array(17, 4), array(9, 16)), array(array(3, 5), array(3, 13), array(15, 5), array(15, 10)), array(array(4, 4), array(17, 0), array(17, 6), array(19, 6)), array(array(2, 7), array(17, 0), array(7, 16), array(34, 0)), array(array(4, 5), array(4, 14), array(11, 14), array(16, 14)), array(array(6, 4), array(6, 14), array(11, 16), array(30, 2)), array(array(8, 4), array(8, 13), array(7, 22), array(22, 13)), array(array(10, 2), array(19, 4), array(28, 6), array(33, 4)), array(array(8, 4), array(22, 3), array(8, 26), array(12, 28)), array(array(3, 10), array(3, 23), array(4, 31), array(11, 31)), array(array(7, 7), array(21, 7), array(1, 37), array(19, 26)), array(array(5, 10), array(19, 10), array(15, 25), array(23, 25)), array(array(13, 3), array(2, 29), array(42, 1), array(23, 28)), array(array(17, 0), array(10, 23), array(10, 35), array(19, 35)), array(array(17, 1), array(14, 21), array(29, 19), array(11, 46)), array(array(13, 6), array(14, 23), array(44, 7), array(59, 1)), array(array(12, 7), array(12, 26), array(39, 14), array(22, 41)), array(array(6, 14), array(6, 34), array(46, 10), array(2, 64)), array(array(17, 4), array(29, 14), array(49, 10), array(24, 46)), array(array(4, 18), array(13, 32), array(48, 14), array(42, 32)), array(array(20, 4), array(40, 7), array(43, 22), array(10, 67)), array(array(19, 6), array(18, 31), array(34, 34), array(20, 61))); public static function getEccSpec($version, $level, array &$spec) { goto Cmb2A; vjgRI: $spec[4] = 0; goto E17Sj; zA31I: $b2 = self::$eccTable[$version][$level][1]; goto JiFGO; GJqYe: $spec[3] = $b2; goto X_c7v; JiFGO: $data = self::getDataLength($version, $level); goto d1qAl; en7Lv: $spec[2] = (int) ($ecc / ($b1 + $b2)); goto GJqYe; UNx89: $spec[0] = $b1; goto N7F9P; gZDnU: iD8x2: goto I8irQ; X1N0y: $spec = array(0, 0, 0, 0, 0); goto gZDnU; d1qAl: $ecc = self::getECCLength($version, $level); goto ynACt; I8irQ: $b1 = self::$eccTable[$version][$level][0]; goto zA31I; zgiOR: $spec[1] = (int) ($data / ($b1 + $b2)); goto en7Lv; uX2gx: goto J369d; goto YwVr0; Cmb2A: if (!(count($spec) < 5)) { goto iD8x2; } goto X1N0y; E17Sj: J369d: goto Htz4P; kWGYm: $spec[0] = $b1; goto zgiOR; WF6WN: $spec[2] = (int) ($ecc / $b1); goto fbp2S; fbp2S: $spec[3] = 0; goto vjgRI; X_c7v: $spec[4] = $spec[1] + 1; goto uX2gx; ynACt: if ($b2 == 0) { goto m5YCw; } goto kWGYm; YwVr0: m5YCw: goto UNx89; N7F9P: $spec[1] = (int) ($data / $b1); goto WF6WN; Htz4P: } public static $alignmentPattern = array(array(0, 0), array(0, 0), array(18, 0), array(22, 0), array(26, 0), array(30, 0), array(34, 0), array(22, 38), array(24, 42), array(26, 46), array(28, 50), array(30, 54), array(32, 58), array(34, 62), array(26, 46), array(26, 48), array(26, 50), array(30, 54), array(30, 56), array(30, 58), array(34, 62), array(28, 50), array(26, 50), array(30, 54), array(28, 54), array(32, 58), array(30, 58), array(34, 62), array(26, 50), array(30, 54), array(26, 52), array(30, 56), array(34, 60), array(30, 58), array(34, 62), array(30, 54), array(24, 50), array(28, 54), array(32, 58), array(26, 54), array(30, 58)); public static function putAlignmentMarker(array &$frame, $ox, $oy) { goto V8IyX; mENTp: $y++; goto Ygc_j; Lukdo: D_fxY: goto hSS7X; V8IyX: $finder = array("\xa1\241\241\241\xa1", "\xa1\240\xa0\xa0\xa1", "\241\240\241\240\xa1", "\xa1\xa0\xa0\240\xa1", "\xa1\xa1\241\xa1\241"); goto eVo3k; OeKgv: $y = 0; goto KrIT9; z83pK: $xStart = $ox - 2; goto OeKgv; lxzT8: if (!($y < 5)) { goto D_fxY; } goto EVMsA; eVo3k: $yStart = $oy - 2; goto z83pK; Ygc_j: goto KpERk; goto Lukdo; IMruo: E42PV: goto mENTp; EVMsA: QRstr::set($frame, $xStart, $yStart + $y, $finder[$y]); goto IMruo; KrIT9: KpERk: goto lxzT8; hSS7X: } public static function putAlignmentPattern($version, &$frame, $width) { goto hW8kF; kH82R: $x = 0; goto dKTaW; Lxwjy: $cx += $d; goto l0Es3; O3rPa: if (!($w * $w - 3 == 1)) { goto Dg_Dd; } goto plvgA; MBieS: self::putAlignmentMarker($frame, $x, $y); goto FW1Uj; dKTaW: SNJYG: goto xGVVS; RGzUT: RfICp: goto HQ6Eq; n_J9i: JxHOA: goto eZBeA; fde8e: Dg_Dd: goto tF8P3; Wi6wZ: $cx = self::$alignmentPattern[$version][0]; goto kH82R; plvgA: $x = self::$alignmentPattern[$version][0]; goto EeAMI; eZBeA: $cy += $d; goto S3vzm; IKp5i: $x++; goto pW38K; NmI3A: $w = (int) (($width - self::$alignmentPattern[$version][0]) / $d + 2); goto je8Sj; RJgx9: if ($d < 0) { goto D7uKr; } goto NmI3A; Y62XC: goto hJM7L; goto XihnR; S3vzm: SeiSx: goto h9kRN; tF8P3: $cx = self::$alignmentPattern[$version][0]; goto tOjGG; aKklZ: if (!($y < $w - 1)) { goto sE33d; } goto Wi6wZ; x1bB2: self::putAlignmentMarker($frame, $cx, $cy); goto Lxwjy; fjM94: bHXiM: goto IKp5i; hW8kF: if (!($version < 2)) { goto U4ZHX; } goto cuYCr; ndNc3: hJM7L: goto aKklZ; FW1Uj: return; goto fde8e; pW38K: goto RfICp; goto o_jlo; cuYCr: return; goto Uw90h; Uw90h: U4ZHX: goto Ryjv9; xGVVS: if (!($x < $w - 1)) { goto JxHOA; } goto x1bB2; o_jlo: w9Q3b: goto mWXmQ; pKx9I: self::putAlignmentMarker($frame, $cx, 6); goto dwhjT; EHzpC: $x++; goto g3RFW; g3RFW: goto SNJYG; goto n_J9i; je8Sj: goto BXr8c; goto S7L7Y; HQ6Eq: if (!($x < $w - 1)) { goto w9Q3b; } goto Czkji; tOjGG: $x = 1; goto RGzUT; l0Es3: zPjCI: goto EHzpC; Czkji: self::putAlignmentMarker($frame, 6, $cx); goto pKx9I; dwhjT: $cx += $d; goto fjM94; Ryjv9: $d = self::$alignmentPattern[$version][1] - self::$alignmentPattern[$version][0]; goto RJgx9; K1_8c: BXr8c: goto O3rPa; SH0P8: $w = 2; goto K1_8c; S7L7Y: D7uKr: goto SH0P8; h9kRN: $y++; goto Y62XC; Y8gkq: $y = 0; goto ndNc3; XihnR: sE33d: goto e0QKP; EeAMI: $y = self::$alignmentPattern[$version][0]; goto MBieS; mWXmQ: $cy = self::$alignmentPattern[$version][0]; goto Y8gkq; e0QKP: } public static $versionPattern = array(0x7c94, 0x85bc, 0x9a99, 0xa4d3, 0xbbf6, 0xc762, 0xd847, 0xe60d, 0xf928, 0x10b78, 0x1145d, 0x12a17, 0x13532, 0x149a6, 0x15683, 0x168c9, 0x177ec, 0x18ec4, 0x191e1, 0x1afab, 0x1b08e, 0x1cc1a, 0x1d33f, 0x1ed75, 0x1f250, 0x209d5, 0x216f0, 0x228ba, 0x2379f, 0x24b0b, 0x2542e, 0x26a64, 0x27541, 0x28c69); public static function getVersionPattern($version) { goto VblAR; a_XsR: return self::$versionPattern[$version - 7]; goto V5XuG; eIqeo: return 0; goto elfo9; VblAR: if (!($version < 7 || $version > QRSPEC_VERSION_MAX)) { goto P7J0h; } goto eIqeo; elfo9: P7J0h: goto a_XsR; V5XuG: } public static $formatInfo = array(array(0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976), array(0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0), array(0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed), array(0x1689, 0x13be, 0x1ce7, 0x19d0, 0x762, 0x255, 0xd0c, 0x83b)); public static function getFormatInfo($mask, $level) { goto mE5sk; DY9Su: I9rSu: goto LJ9B8; D0UHE: L1cIN: goto XqayV; XqayV: return self::$formatInfo[$level][$mask]; goto KuCQU; mE5sk: if (!($mask < 0 || $mask > 7)) { goto I9rSu; } goto t_hH5; mlKRP: return 0; goto D0UHE; LJ9B8: if (!($level < 0 || $level > 3)) { goto L1cIN; } goto mlKRP; t_hH5: return 0; goto DY9Su; KuCQU: } public static $frames = array(); public static function putFinderPattern(&$frame, $ox, $oy) { goto i8SeR; zvlwe: QRstr::set($frame, $ox, $oy + $y, $finder[$y]); goto vAzBc; r72MZ: $y++; goto t3nWi; Z_Gsr: $y = 0; goto v6t4Q; MDYQW: xHbqq: goto lQ5Fd; v6t4Q: OHRTD: goto Hwboa; vAzBc: dBvaL: goto r72MZ; t3nWi: goto OHRTD; goto MDYQW; Hwboa: if (!($y < 7)) { goto xHbqq; } goto zvlwe; i8SeR: $finder = array("\301\xc1\301\xc1\301\xc1\301", "\xc1\300\xc0\300\xc0\300\xc1", "\301\300\xc1\xc1\301\300\xc1", "\xc1\300\301\301\301\300\301", "\xc1\300\xc1\301\xc1\300\301", "\301\xc0\300\xc0\xc0\xc0\xc1", "\xc1\301\xc1\301\xc1\301\301"); goto Z_Gsr; lQ5Fd: } public static function createFrame($version) { goto T3KJs; egzQq: xZA4E: goto wQ4fS; K4mmJ: QRstr::set($frame, $width - 8, 7, $setPattern); goto l8dkm; q_hh0: K_gCC: goto tUHeP; I7N0E: goto BeO1X; goto xJ14M; J23oP: $yOffset = $width - 8; goto s7SHw; eD5wa: mTnDP: goto pHMvm; m6PjP: if (!($y < 8)) { goto mn3TX; } goto ZX1aS; T3KJs: $width = self::$capacity[$version][QRCAP_WIDTH]; goto VYbLh; JopEt: hRXP9: goto m6PjP; Zk8n9: UIqP1: goto Fpc3n; KJ2t4: $frame[7 + $i][6] = chr(0x90 | $i & 1); goto q_hh0; x3RLh: goto EhPVn; goto DoM7S; T8G9T: gvGu3: goto n5U2E; TjzYL: ccUF0: goto fOrFu; HVPHc: $y++; goto x3RLh; tb_s5: $setPattern = str_repeat("\300", 8); goto ahm_Y; O8FVu: if (!($y < 3)) { goto EN05Q; } goto gEIib; n5U2E: $y++; goto GAD1X; W3k3H: EN05Q: goto pVNX_; wQ4fS: if (!($x < 6)) { goto xar_1; } goto WKqoQ; ZX1aS: $frame[$y][8] = "\204"; goto Wgeym; BsRqj: if (!($x < 3)) { goto sKq7Y; } goto Utnr3; bZp1k: $v = $v >> 1; goto BcCyX; iHkyI: $y = 0; goto JXGpz; U9kp0: xar_1: goto ZKcSp; RNl9i: goto CzNB2; goto W3k3H; hkynQ: if (!($y < 7)) { goto L6vtB; } goto p8IiC; Kadsu: self::putFinderPattern($frame, 0, $width - 7); goto YmWGK; w3Ecg: return $frame; goto LzKH_; Utnr3: $frame[$y][$x + ($width - 11)] = chr(0x88 | $v & 1); goto bZp1k; pHMvm: $y++; goto mcXXm; mcXXm: $yOffset++; goto jcGdW; l8dkm: QRstr::set($frame, 0, $width - 8, $setPattern); goto g4ezX; BcCyX: KGPev: goto FW1As; HJ3hs: goto xZA4E; goto U9kp0; L3xuZ: $x = 0; goto QMNmS; xJ14M: C1QPG: goto wVNxa; p8IiC: $frame[$y][7] = "\300"; goto bkY58; M5a6Y: L6vtB: goto tb_s5; vl9Zt: $frame[$yOffset][7] = "\300"; goto z5ZBJ; Wgeym: $frame[$yOffset][8] = "\x84"; goto eD5wa; DoM7S: n1ev_: goto Zk8n9; wVNxa: self::putAlignmentPattern($version, $frame, $width); goto b7jRw; KR9g9: if (!($y < 6)) { goto n1ev_; } goto L3xuZ; GAD1X: goto ON17M; goto M5a6Y; pVNX_: ciOD7: goto u32H4; Fpc3n: $frame[$width - 8][8] = "\x81"; goto w3Ecg; YmWGK: $yOffset = $width - 7; goto s0R8A; gEIib: $frame[$width - 11 + $y][$x] = chr(0x88 | $v & 1); goto y_x1g; XJcr7: $frame[6][7 + $i] = chr(0x90 | $i & 1); goto KJ2t4; FW1As: $x++; goto CvIKK; ahm_Y: QRstr::set($frame, 0, 7, $setPattern); goto K4mmJ; y_x1g: $v = $v >> 1; goto TjzYL; tUHeP: $i++; goto I7N0E; PDQUA: ON17M: goto hkynQ; UEG2L: BeO1X: goto P0cRP; P0cRP: if (!($i < $width - 15)) { goto C1QPG; } goto XJcr7; fsbJ7: sKq7Y: goto T_Zze; WKqoQ: $y = 0; goto oSs_h; fOrFu: $y++; goto RNl9i; g4ezX: $setPattern = str_repeat("\204", 9); goto VsXLT; oSs_h: CzNB2: goto O8FVu; T_Zze: DvjXm: goto HVPHc; jcGdW: goto hRXP9; goto kfTnK; QMNmS: z_S2K: goto BsRqj; X4JXY: $i = 1; goto UEG2L; l0AFy: $vinf = self::getVersionPattern($version); goto HU6k2; VYbLh: $frameLine = str_repeat("\0", $width); goto k2u6F; z5ZBJ: $yOffset++; goto T8G9T; E4BbZ: $x = 0; goto egzQq; VsXLT: QRstr::set($frame, 0, 8, $setPattern); goto yLUac; k2u6F: $frame = array_fill(0, $width, $frameLine); goto eixO7; ZKcSp: $v = $vinf; goto iHkyI; yLUac: QRstr::set($frame, $width - 8, 8, $setPattern, 8); goto J23oP; kfTnK: mn3TX: goto X4JXY; am1Cc: self::putFinderPattern($frame, $width - 7, 0); goto Kadsu; u32H4: $x++; goto HJ3hs; JXGpz: EhPVn: goto KR9g9; b7jRw: if (!($version >= 7)) { goto UIqP1; } goto l0AFy; s7SHw: $y = 0; goto JopEt; eixO7: self::putFinderPattern($frame, 0, 0); goto am1Cc; CvIKK: goto z_S2K; goto fsbJ7; s0R8A: $y = 0; goto PDQUA; bkY58: $frame[$y][$width - 8] = "\xc0"; goto vl9Zt; HU6k2: $v = $vinf; goto E4BbZ; LzKH_: } public static function debug($frame, $binary_mode = false) { goto EEGMr; mgZXR: echo "\74\160\x72\x65\76\74\164\x74\x3e"; goto JKZIx; n6qSS: FlbNj: goto xQZ_b; kwNQN: echo "\74\57\x74\x74\76\x3c\x2f\160\162\145\x3e\74\142\162\x2f\x20\x3e\74\142\162\57\40\76\x3c\x62\x72\x2f\40\76\x3c\142\x72\57\x20\76\74\x62\162\x2f\x20\76\x3c\x62\x72\57\x20\76"; goto n6qSS; xN5m3: foreach ($frame as &$frameLine) { goto cPIwE; ODjzb: $frameLine = join("\46\43\x38\x39\x30\61\x3b", explode("\0", $frameLine)); goto v1uxY; cD3ZV: $frameLine = join("\74\x73\160\x61\x6e\40\x63\154\x61\163\x73\x3d\42\146\x22\x3e\46\x6e\142\163\160\x3b\x3c\x2f\163\x70\141\156\76", explode("\210", $frameLine)); goto BTF9G; v1uxY: JrUvd: goto GzGoc; VS2_x: $frameLine = join("\x3c\x73\160\x61\x6e\40\143\154\x61\x73\163\75\x22\143\x22\76\46\x6e\142\163\x70\73\74\x2f\x73\x70\141\x6e\x3e", explode("\220", $frameLine)); goto fTOxE; dBtJT: $frameLine = join("\x3c\163\160\141\x6e\40\x63\x6c\141\163\163\x3d\x22\x70\42\76\46\156\142\x73\x70\x3b\x3c\57\163\160\x61\156\x3e", explode("\240", $frameLine)); goto fLp5a; fLp5a: $frameLine = join("\74\x73\x70\141\x6e\40\143\x6c\x61\x73\163\75\42\160\42\76\46\x23\71\66\61\70\73\x3c\x2f\x73\160\141\x6e\x3e", explode("\241", $frameLine)); goto JWiCd; pWtpR: $frameLine = join("\74\x73\160\141\156\40\x63\x6c\141\163\x73\75\x22\x73\42\76\46\x23\x39\66\67\x30\x3b\74\57\x73\x70\141\156\76", explode("\x85", $frameLine)); goto kfImm; fTOxE: $frameLine = join("\74\x73\160\x61\156\40\x63\154\141\x73\x73\75\42\x63\42\76\46\x23\x39\x37\x31\x39\73\74\x2f\x73\x70\x61\x6e\x3e", explode("\221", $frameLine)); goto cD3ZV; cPIwE: $frameLine = join("\x3c\x73\160\141\156\x20\x63\154\x61\x73\163\x3d\42\x6d\x22\76\x26\x6e\x62\163\x70\73\x3c\57\x73\160\x61\x6e\76", explode("\xc0", $frameLine)); goto cBwv1; kfImm: $frameLine = join("\74\x73\x70\x61\x6e\40\x63\154\141\x73\163\75\42\170\x22\x3e\x26\43\71\67\66\62\x3b\74\57\163\x70\141\156\x3e", explode("\201", $frameLine)); goto VS2_x; BTF9G: $frameLine = join("\x3c\x73\x70\x61\x6e\x20\143\154\x61\x73\163\75\42\x66\x22\x3e\x26\43\71\66\x31\x38\x3b\74\57\163\160\x61\x6e\76", explode("\211", $frameLine)); goto VH8dw; JWiCd: $frameLine = join("\x3c\163\160\x61\156\40\143\154\141\163\x73\75\x22\x73\42\x3e\46\43\71\x36\67\x31\x3b\x3c\x2f\163\x70\141\x6e\76", explode("\204", $frameLine)); goto pWtpR; cBwv1: $frameLine = join("\74\x73\x70\141\156\40\x63\154\x61\163\163\x3d\x22\x6d\x22\x3e\x26\43\x39\x36\x31\x38\73\74\57\x73\160\141\x6e\76", explode("\xc1", $frameLine)); goto dBtJT; VH8dw: $frameLine = join("\x26\43\x39\70\x33\x30\73", explode("\x1", $frameLine)); goto ODjzb; GzGoc: } goto uJ7ib; Kg6i_: foreach ($frame as &$frameLine) { goto DpuLo; DpuLo: $frameLine = join("\x3c\x73\160\x61\x6e\x20\x63\154\141\163\x73\x3d\x22\155\42\x3e\46\x6e\142\x73\x70\x3b\46\156\x62\x73\x70\x3b\x3c\57\163\160\141\156\76", explode("\x30", $frameLine)); goto nOsqY; nOsqY: $frameLine = join("\x26\43\71\x36\x30\x38\73\46\43\x39\x36\60\x38\73", explode("\61", $frameLine)); goto fH9ls; fH9ls: kKX_V: goto oNuKN; oNuKN: } goto vkfYD; LDnD9: goto FlbNj; goto rU53A; lYyvS: ?>
                <style>
                    .m { background-color: white; }
                </style>
                <?php  goto wJoKA; LxJh3: ?>
                <style>
                    .p { background-color: yellow; }
                    .m { background-color: #00FF00; }
                    .s { background-color: #FF0000; }
                    .c { background-color: aqua; }
                    .x { background-color: pink; }
                    .f { background-color: gold; }
                </style>
                <?php  goto mgZXR; JKZIx: echo join("\74\x62\162\x2f\x20\x3e", $frame); goto QXsK5; rU53A: a2cGn: goto Kg6i_; vkfYD: suyTK: goto lYyvS; cT8K8: echo join("\x3c\142\x72\x2f\x20\x3e\46\156\142\x73\160\73\x26\x6e\x62\163\x70\73\46\156\142\x73\160\73\46\x6e\x62\163\x70\73\46\156\142\163\x70\73\x26\156\x62\x73\160\73\x26\x6e\142\163\160\73\46\x6e\142\163\x70\73", $frame); goto kwNQN; uJ7ib: O2i6y: goto LxJh3; EEGMr: if ($binary_mode) { goto a2cGn; } goto xN5m3; wJoKA: echo "\x3c\x70\x72\x65\x3e\x3c\164\x74\76\x3c\142\x72\x2f\40\x3e\x3c\142\162\57\x20\x3e\74\142\x72\57\40\x3e\46\156\142\x73\x70\73\46\x6e\142\163\160\x3b\46\156\142\163\x70\73\x26\x6e\x62\163\x70\x3b\46\156\142\163\160\73\x26\156\x62\x73\x70\73\46\x6e\142\163\x70\73\46\156\142\x73\160\x3b"; goto cT8K8; QXsK5: echo "\74\57\x74\x74\76\x3c\57\x70\x72\145\x3e"; goto LDnD9; xQZ_b: } public static function serial($frame) { return gzcompress(join("\12", $frame), 9); } public static function unserial($code) { return explode("\xa", gzuncompress($code)); } public static function newFrame($version) { goto S3LDB; nEWbc: W8IEy: goto s53x3; oax68: KXWMa: goto EWpgF; EWpgF: oGaOy: goto NNvdQ; CN4MN: if (file_exists($fileName)) { goto W8IEy; } goto nD58m; jTiTH: goto oGaOy; goto vT6vx; HfehX: return self::$frames[$version]; goto XqozH; NNvdQ: m5XVo: goto TO1ll; s53x3: self::$frames[$version] = self::unserial(file_get_contents($fileName)); goto oax68; KB2AV: $fileName = QR_CACHE_DIR . "\146\162\x61\155\145\137" . $version . "\x2e\x64\141\x74"; goto HkAR0; nD58m: self::$frames[$version] = self::createFrame($version); goto GjFX3; OsA4B: return null; goto CYz3S; B0io1: goto KXWMa; goto nEWbc; GjFX3: file_put_contents($fileName, self::serial(self::$frames[$version])); goto B0io1; grcXF: if (isset(self::$frames[$version])) { goto m5XVo; } goto KB2AV; tT7H9: self::$frames[$version] = self::createFrame($version); goto jTiTH; TO1ll: if (!is_null(self::$frames[$version])) { goto woCan; } goto OsA4B; HkAR0: if (QR_CACHEABLE) { goto mfGYQ; } goto tT7H9; WIwc0: return null; goto rzMWy; rzMWy: krzKY: goto grcXF; CYz3S: woCan: goto HfehX; S3LDB: if (!($version < 1 || $version > QRSPEC_VERSION_MAX)) { goto krzKY; } goto WIwc0; vT6vx: mfGYQ: goto CN4MN; XqozH: } public static function rsBlockNum($spec) { return $spec[0] + $spec[3]; } public static function rsBlockNum1($spec) { return $spec[0]; } public static function rsDataCodes1($spec) { return $spec[1]; } public static function rsEccCodes1($spec) { return $spec[2]; } public static function rsBlockNum2($spec) { return $spec[3]; } public static function rsDataCodes2($spec) { return $spec[4]; } public static function rsEccCodes2($spec) { return $spec[2]; } public static function rsDataLength($spec) { return $spec[0] * $spec[1] + $spec[3] * $spec[4]; } public static function rsEccLength($spec) { return ($spec[0] + $spec[3]) * $spec[2]; } } goto EDe6n; y_Mg0: class QRcode { public $version; public $width; public $data; public function encodeMask(QRinput $input, $mask) { goto RoXxm; r2eCL: goto iS8ob; goto oi3Eg; zcMU4: GMFQm: goto N8MbM; rlDsl: QRtools::markTime("\x61\146\x74\x65\162\137\162\x61\x77"); goto p6GU8; M_FDV: if (!is_null($filler)) { goto obCmM; } goto bHdf7; oi3Eg: lj6Dz: goto SYEZq; Qyc3u: $maskObj = new QRmask(); goto rV0Y3; zOu0D: XjFaO: goto vQLBE; Qrzu1: $i = 0; goto zcMU4; RoXxm: if (!($input->getVersion() < 0 || $input->getVersion() > QRSPEC_VERSION_MAX)) { goto pnhDq; } goto ucQMC; CjKKo: $width = QRspec::getWidth($version); goto HRIEM; lqaHi: $i++; goto g8PVk; nY1aY: $this->version = $version; goto QuQZI; CKm0K: AzXmL: goto jHdWB; QuQZI: $this->width = $width; goto NhTYP; hTU2J: unset($filler); goto Qyc3u; FK8R7: $j = 0; goto NdBpx; umMFA: $filler = new FrameFiller($width, $frame); goto M_FDV; UTaAX: goto cu08b; goto pCS1W; ZKpeN: if (QR_FIND_BEST_MASK) { goto lj6Dz; } goto WIGEU; S9g3s: $bit = 0x80; goto FK8R7; R2nV7: cu08b: goto pBehV; rCCWB: QRtools::markTime("\x61\146\x74\x65\162\137\x6d\x61\x73\153"); goto nY1aY; ycFVK: $i++; goto QplT7; i5ymM: iS8ob: goto R2nV7; NdBpx: Rttpw: goto DuAF1; E9yGO: $code = $raw->getCode(); goto S9g3s; zg0lS: Tm9Al: goto rCCWB; QumfS: $filler->setFrameAt($addr, 0x2 | ($bit & $code) != 0); goto C3v11; AQf0A: TNNR9: goto UOPxd; PAUsN: BR_bW: goto nu3My; aNu6n: $raw = new QRrawcode($input); goto rlDsl; evwc3: unset($raw); goto TGEx1; p6GU8: $version = $raw->version; goto CjKKo; b5UNg: obCmM: goto PR7Dh; HRIEM: $frame = QRspec::newFrame($version); goto umMFA; nu3My: $j++; goto gvmRg; DuAF1: if (!($j < 8)) { goto TNNR9; } goto K2kjK; MwgH0: wHRD3: goto bF0g2; QS6dk: $addr = $filler->next(); goto LYn0Q; gvmRg: goto Rttpw; goto AQf0A; PR7Dh: $i = 0; goto MwgH0; pCS1W: JLkfl: goto ZKpeN; C3v11: $bit = $bit >> 1; goto PAUsN; N8MbM: if (!($i < $j)) { goto XjFaO; } goto QS6dk; DQzIv: return $this; goto hj3uL; o93JC: iheEF: goto aNu6n; bF0g2: if (!($i < $raw->dataLength + $raw->eccLength)) { goto AzXmL; } goto E9yGO; rV0Y3: if ($mask < 0) { goto JLkfl; } goto RKcRt; NhTYP: $this->data = $masked; goto DQzIv; K2kjK: $addr = $filler->next(); goto QumfS; vQLBE: $frame = $filler->frame; goto hTU2J; bHdf7: return NULL; goto b5UNg; g8PVk: goto wHRD3; goto CKm0K; ucQMC: throw new Exception("\x77\x72\157\156\147\40\166\145\162\x73\x69\x6f\156"); goto GkS3R; SYEZq: $masked = $maskObj->mask($width, $frame, $input->getErrorCorrectionLevel()); goto i5ymM; jHdWB: QRtools::markTime("\x61\x66\x74\145\x72\137\x66\x69\x6c\154\x65\162"); goto evwc3; LYn0Q: $filler->setFrameAt($addr, 0x2); goto ZiSkA; QplT7: goto GMFQm; goto zOu0D; qrMOj: throw new Exception("\x77\162\157\x6e\x67\x20\x6c\x65\166\145\154"); goto o93JC; NoaEl: if (!($input->getErrorCorrectionLevel() > QR_ECLEVEL_H)) { goto iheEF; } goto qrMOj; UOPxd: P8cJ5: goto lqaHi; GkS3R: pnhDq: goto NoaEl; WIGEU: $masked = $maskObj->makeMask($width, $frame, intval(QR_DEFAULT_MASK) % 8, $input->getErrorCorrectionLevel()); goto r2eCL; TGEx1: $j = QRspec::getRemainder($version); goto Qrzu1; RKcRt: $masked = $maskObj->makeMask($width, $frame, $mask, $input->getErrorCorrectionLevel()); goto UTaAX; pBehV: if (!($masked == NULL)) { goto Tm9Al; } goto FvNgg; ZiSkA: woEUH: goto ycFVK; FvNgg: return NULL; goto zg0lS; hj3uL: } public function encodeInput(QRinput $input) { return $this->encodeMask($input, -1); } public function encodeString8bit($string, $version, $level) { goto Il0pD; i82pS: nx2ly: goto c0e16; z9AsW: return NULL; goto i82pS; l2ozj: throw new Exception("\145\x6d\x70\164\x79\x20\x73\164\x72\x69\x6e\147\x21"); goto qjbG1; XVHSt: return NULL; goto Y0xII; Y0xII: qusK4: goto yWntK; QylPU: if (!($ret < 0)) { goto qusK4; } goto suYu2; TwSaD: if (!($input == NULL)) { goto nx2ly; } goto z9AsW; UXn7P: $input = new QRinput($version, $level); goto TwSaD; suYu2: unset($input); goto XVHSt; yWntK: return $this->encodeInput($input); goto tFUr9; ixf64: TvJhA: goto UXn7P; qjbG1: return NULL; goto ixf64; Il0pD: if (!(string == NULL)) { goto TvJhA; } goto l2ozj; c0e16: $ret = $input->append($input, QR_MODE_8, strlen($string), str_split($string)); goto QylPU; tFUr9: } public function encodeString($string, $version, $level, $hint, $casesensitive) { goto l7Euq; apWVx: return $this->encodeInput($input); goto qNcFv; ymMk6: Fe0Rw: goto apWVx; tw5Ui: throw new Exception("\x62\141\x64\40\150\151\156\x74"); goto GVfhK; Xe50i: if (!($input == NULL)) { goto j3FXc; } goto ioqZG; Axrdq: $input = new QRinput($version, $level); goto Xe50i; MylcP: if (!($ret < 0)) { goto Fe0Rw; } goto SaDaG; SaDaG: return NULL; goto ymMk6; ioqZG: return NULL; goto p2DH7; l7Euq: if (!($hint != QR_MODE_8 && $hint != QR_MODE_KANJI)) { goto op74q; } goto tw5Ui; GVfhK: return NULL; goto Xlver; ncSrO: $ret = QRsplit::splitStringToQRinput($string, $input, $hint, $casesensitive); goto MylcP; p2DH7: j3FXc: goto ncSrO; Xlver: op74q: goto Axrdq; qNcFv: } public static function png($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint = false) { $enc = QRencode::factory($level, $size, $margin); return $enc->encodePNG($text, $outfile, $saveandprint = false); } public static function text($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4) { $enc = QRencode::factory($level, $size, $margin); return $enc->encode($text, $outfile); } public static function raw($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4) { $enc = QRencode::factory($level, $size, $margin); return $enc->encodeRAW($text, $outfile); } } goto i3Jes; V4_H0: define("\x51\x52\137\x4d\117\x44\105\137\x41\116", 1); goto XI9LT; TQRr9: define("\x51\122\x43\101\x50\x5f\x57\117\x52\x44\123", 1); goto m9q_V; eL4W2: class QRrsblock { public $dataLength; public $data = array(); public $eccLength; public $ecc = array(); public function __construct($dl, $data, $el, &$ecc, QRrsItem $rs) { goto GbYhv; BVH5Q: $this->ecc = $ecc; goto Kia26; GbYhv: $rs->encode_rs_char($data, $ecc); goto v2DoM; ed1hS: $this->eccLength = $el; goto BVH5Q; MR0MA: $this->data = $data; goto ed1hS; v2DoM: $this->dataLength = $dl; goto MR0MA; Kia26: } } goto HCATb; pRnjh: define("\x53\124\x52\x55\x43\x54\125\x52\x45\137\x48\105\x41\x44\x45\x52\x5f\102\111\x54\123", 20); goto v6RV2; m6gOw: QRtools::markTime("\x73\x74\x61\x72\x74"); goto sTSRW; U4s20: define("\x51\122\x5f\106\x49\x4e\104\x5f\x42\105\123\124\137\x4d\x41\x53\x4b", true); goto aa591; EDe6n: define("\x51\x52\137\x49\115\x41\x47\x45", true); goto K8c8s; i3Jes: class FrameFiller { public $width; public $frame; public $x; public $y; public $dir; public $bit; public function __construct($width, &$frame) { goto U5DEh; CKK_d: $this->frame = $frame; goto Qu1YI; Qu1YI: $this->x = $width - 1; goto Vjndc; JEBQq: $this->bit = -1; goto osWcB; RrgDU: $this->dir = -1; goto JEBQq; U5DEh: $this->width = $width; goto CKK_d; Vjndc: $this->y = $width - 1; goto RrgDU; osWcB: } public function setFrameAt($at, $val) { $this->frame[$at["\171"]][$at["\170"]] = chr($val); } public function getFrameAt($at) { return ord($this->frame[$at["\x79"]][$at["\170"]]); } public function next() { goto kDv79; VgoaV: $x--; goto YNkXD; o76Jm: if ($this->dir < 0) { goto W7901; } goto lKwYB; pxvtE: W7901: goto Kx6A0; NFSzH: if (ord($this->frame[$y][$x]) & 0x80) { goto G5_p0; } goto YMWro; VZvbo: $this->y = $y; goto NFSzH; kDv79: G5_p0: goto detlg; rkBvi: plJOy: goto LNZpB; Kx6A0: if (!($y < 0)) { goto YDo9X; } goto Pe1DF; lWQei: goto ULhsO; goto nZghH; dErau: aif7Z: goto h_7ob; Pe1DF: $y = 0; goto mbyMR; nZghH: ZUOi3: goto OGjRZ; yjxgq: $y = $w - 1; goto IktR3; f3WUs: Uzjq1: goto CZc32; x1CjB: DTF1j: goto j_XO0; IktR3: $x -= 2; goto cOght; LyY2R: if (!($x == 6)) { goto pXDz4; } goto VgoaV; CZc32: $x = $this->x; goto QjqNS; CUFI4: $x--; goto vHOPM; j_XO0: YDo9X: goto dErau; detlg: if (!($this->bit == -1)) { goto Uzjq1; } goto ScuIk; BLVmI: $this->dir = 1; goto Hg4nd; YMWro: Zbj7I: goto PpMf_; cOght: $this->dir = -1; goto LyY2R; U09xb: if ($this->bit == 0) { goto ZUOi3; } goto WveaI; vAO1n: $y += $this->dir; goto IhgW7; mbyMR: $x -= 2; goto BLVmI; Errp4: $this->x = $x; goto VZvbo; HSVPM: St0ot: goto Errp4; IC7J5: ULhsO: goto o76Jm; lKwYB: if (!($y == $w)) { goto plJOy; } goto yjxgq; l7dJ2: pXDz4: goto rkBvi; WveaI: $x++; goto vAO1n; OGjRZ: $x--; goto NWiNO; PpMf_: return array("\170" => $x, "\x79" => $y); goto Efebq; ScuIk: $this->bit = 0; goto WbFol; LNZpB: goto aif7Z; goto pxvtE; YNkXD: $y -= 8; goto l7dJ2; WbFol: return array("\x78" => $this->x, "\171" => $this->y); goto f3WUs; QjqNS: $y = $this->y; goto UrV1C; vHOPM: $y = 9; goto x1CjB; Hg4nd: if (!($x == 6)) { goto DTF1j; } goto CUFI4; UrV1C: $w = $this->width; goto U09xb; h_7ob: if (!($x < 0 || $y < 0)) { goto St0ot; } goto ih1oN; NWiNO: $this->bit++; goto IC7J5; IhgW7: $this->bit--; goto lWQei; ih1oN: return null; goto HSVPM; Efebq: } } goto Ojwy9; u1hVr: define("\116\63", 40); goto nGLa8; aa591: define("\121\122\x5f\106\x49\116\x44\137\x46\x52\117\115\x5f\122\101\x4e\104\x4f\x4d", 2); goto fNzMX; Ojwy9: class QRencode { public $casesensitive = true; public $eightbit = false; public $version = 0; public $size = 3; public $margin = 4; public $structured = 0; public $level = QR_ECLEVEL_L; public $hint = QR_MODE_8; public static function factory($level = QR_ECLEVEL_L, $size = 3, $margin = 4) { goto EGkNY; qKkY2: w6SZ7: goto pIrph; EGkNY: $enc = new QRencode(); goto FASm6; kqoX9: $enc->margin = $margin; goto Hb_oc; zJ56Y: return $enc; goto yY8IU; Hb_oc: switch ($level . '') { case "\x30": case "\61": case "\x32": case "\x33": $enc->level = $level; goto uos1I; case "\x6c": case "\114": $enc->level = QR_ECLEVEL_L; goto uos1I; case "\155": case "\115": $enc->level = QR_ECLEVEL_M; goto uos1I; case "\161": case "\x51": $enc->level = QR_ECLEVEL_Q; goto uos1I; case "\x68": case "\110": $enc->level = QR_ECLEVEL_H; goto uos1I; } goto qKkY2; pIrph: uos1I: goto zJ56Y; FASm6: $enc->size = $size; goto kqoX9; yY8IU: } public function encodeRAW($intext, $outfile = false) { goto enJR2; enJR2: $code = new QRcode(); goto H27fP; vnHpw: $code->encodeString8bit($intext, $this->version, $this->level); goto UZqOr; H27fP: if ($this->eightbit) { goto VxBQG; } goto Z3a_a; Z3a_a: $code->encodeString($intext, $this->version, $this->level, $this->hint, $this->casesensitive); goto cQSaO; ULYbc: return $code->data; goto PBlIb; cQSaO: goto i8lQn; goto U1N5y; UZqOr: i8lQn: goto ULYbc; U1N5y: VxBQG: goto vnHpw; PBlIb: } public function encode($intext, $outfile = false) { goto E2Uux; E7FBJ: if ($outfile !== false) { goto BG9Li; } goto LCBB_; NV0By: $code->encodeString8bit($intext, $this->version, $this->level); goto bwGmG; SdFnP: L1xEu: goto XoM23; RvkWz: P7Q9S: goto NV0By; bwGmG: GKM0H: goto BB_cM; BB_cM: QRtools::markTime("\141\146\x74\145\x72\x5f\145\x6e\143\157\144\x65"); goto E7FBJ; qkdNj: file_put_contents($outfile, join("\xa", QRtools::binarize($code->data))); goto SdFnP; E2Uux: $code = new QRcode(); goto vCwtg; lSBYd: BG9Li: goto qkdNj; OMU1J: goto GKM0H; goto RvkWz; vCwtg: if ($this->eightbit) { goto P7Q9S; } goto sHyDM; LCBB_: return QRtools::binarize($code->data); goto vq9Gq; sHyDM: $code->encodeString($intext, $this->version, $this->level, $this->hint, $this->casesensitive); goto OMU1J; vq9Gq: goto L1xEu; goto lSBYd; XoM23: } public function encodePNG($intext, $outfile = false, $saveandprint = false) { try { goto ADvGS; QPOZV: j1BTB: goto YZwV9; VcV19: QRtools::log($outfile, $err); goto QPOZV; YZwV9: $maxSize = (int) (QR_PNG_MAXIMUM_SIZE / (count($tab) + 2 * $this->margin)); goto SqOUC; GRDom: $tab = $this->encode($intext); goto Ewjjk; ADvGS: ob_start(); goto GRDom; Ewjjk: $err = ob_get_contents(); goto WuAq1; NQGz4: if (!($err != '')) { goto j1BTB; } goto VcV19; SqOUC: QRimage::png($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin, $saveandprint); goto ho9VZ; WuAq1: ob_end_clean(); goto NQGz4; ho9VZ: } catch (Exception $e) { QRtools::log($outfile, $e->getMessage()); } } }