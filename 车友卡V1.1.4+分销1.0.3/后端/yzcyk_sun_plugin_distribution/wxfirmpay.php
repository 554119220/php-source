<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto edmZM; qJ6as: $this->key = $key; goto MKgSZ; P8Wvv: $this->mchid = $mchid; goto qJ6as; hsqAB: $this->desc = $desc; goto a2HoU; a2HoU: $this->amount = $amount; goto CiTnz; CiTnz: $this->apiclient_cert = $apiclient_cert; goto mc0XV; edmZM: $this->mch_appid = $mch_appid; goto P8Wvv; p3zAy: $this->re_user_name = $re_user_name; goto hsqAB; mc0XV: $this->apiclient_key = $apiclient_key; goto Ntwnc; D6I5R: $this->partner_trade_no = $partner_trade_no; goto p3zAy; MKgSZ: $this->openid = $openid; goto D6I5R; Ntwnc: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto nBf4F; BNnZB: $xmlData = $this->arrayToXml($parameters); goto N7QqN; OaZRr: $parameters["\x73\x69\x67\156"] = $this->getSign($parameters); goto BNnZB; mQBgI: return $return; goto hA2Cu; OfP30: $parameters = array("\x6d\x63\x68\137\x61\160\160\151\x64" => $this->mch_appid, "\x6d\143\150\151\144" => $this->mchid, "\156\157\156\143\x65\x5f\x73\164\x72" => $this->createNoncestr(), "\x70\141\162\164\x6e\x65\162\x5f\x74\x72\141\144\x65\x5f\156\157" => $this->partner_trade_no, "\157\160\145\156\151\x64" => $this->openid, "\143\x68\x65\x63\153\x5f\x6e\x61\155\x65" => "\x4e\x4f\x5f\103\x48\x45\103\113", "\x72\x65\x5f\x75\x73\145\x72\x5f\156\141\x6d\x65" => $this->re_user_name, "\x61\x6d\157\x75\156\x74" => $this->amount, "\x64\145\163\143" => $this->desc, "\163\x70\142\151\154\x6c\137\x63\x72\145\141\x74\145\137\151\x70" => $_SERVER["\122\105\x4d\117\x54\x45\137\x41\104\x44\122"]); goto OaZRr; nBf4F: $url = "\150\164\164\x70\163\72\x2f\57\x61\x70\151\x2e\155\x63\150\56\167\145\x69\x78\151\x6e\x2e\x71\x71\56\143\x6f\155\57\155\155\160\141\x79\155\153\164\x74\162\141\156\163\x66\145\x72\163\57\160\x72\157\x6d\x6f\x74\x69\157\156\x2f\x74\x72\141\156\163\146\145\x72\x73"; goto OfP30; N7QqN: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto mQBgI; hA2Cu: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto kX7BI; KtO0k: $data = curl_exec($ch); goto xE9p5; q8Ls9: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto UcW2x; x5mmz: return $data; goto vevUd; ULYO6: curl_close($ch); goto x5mmz; GflBh: throw new WxPayException("\x63\x75\162\154\345\x87\272\351\224\231\357\xbc\214\351\x94\x99\xe8\257\257\xe7\xa0\201\x3a{$error}"); goto CKn31; vevUd: KvroJ: goto voTmg; iyDMO: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto fF1yq; xE9p5: if ($data) { goto sqgl1; } goto H8Okd; UcW2x: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto ZuG6v; aTvei: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto Ju22q; YKQLi: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto iyDMO; WranS: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto q8Ls9; f5Cnt: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto PLJUM; Ju22q: curl_setopt($ch, CURLOPT_URL, $url); goto gXXac; vglSi: sqgl1: goto ULYO6; iuD3O: set_time_limit(0); goto KtO0k; ZuG6v: curl_setopt($ch, CURLOPT_POST, TRUE); goto f5Cnt; fF1yq: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto iuD3O; CKn31: goto KvroJ; goto vglSi; PLJUM: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto YKQLi; gXXac: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto WranS; H8Okd: $error = curl_errno($ch); goto ka9gB; ka9gB: curl_close($ch); goto GflBh; kX7BI: $ch = curl_init(); goto aTvei; voTmg: } private function arrayToXml($arr) { goto MCYym; oL_Cj: foreach ($arr as $key => $val) { goto LRsg9; LoMnu: $xml .= "\74" . $key . "\76" . arrayToXml($val) . "\74\57" . $key . "\76"; goto RBZNt; rzzfT: JqN12: goto LoMnu; lpeyw: $xml .= "\x3c" . $key . "\x3e" . $val . "\74\57" . $key . "\76"; goto k3WSe; Qnaoh: T7N9r: goto A5GFE; LRsg9: if (is_array($val)) { goto JqN12; } goto lpeyw; RBZNt: pAk2b: goto Qnaoh; k3WSe: goto pAk2b; goto rzzfT; A5GFE: } goto QQDAl; QQDAl: WPwiK: goto USiCZ; MCYym: $xml = "\x3c\162\157\157\x74\x3e"; goto oL_Cj; USiCZ: $xml .= "\x3c\57\162\157\x6f\164\x3e"; goto HlO_L; HlO_L: return $xml; goto tp_5W; tp_5W: } private function xmlToArray($xml) { goto MJ_0R; FXEy0: $xmlstring = simplexml_load_string($xml, "\123\x69\x6d\160\x6c\x65\130\115\114\x45\x6c\145\155\145\156\x74", LIBXML_NOCDATA); goto HycRo; HycRo: $val = json_decode(json_encode($xmlstring), true); goto s1eXr; s1eXr: return $val; goto RJWEE; MJ_0R: libxml_disable_entity_loader(true); goto FXEy0; RJWEE: } private function createNoncestr($length = 32) { goto w4V_8; w4V_8: $chars = "\141\142\x63\x64\x65\146\147\x68\151\x6a\153\x6c\x6d\156\x6f\160\x71\x72\x73\x74\x75\x76\167\170\171\172\x30\x31\x32\x33\64\65\66\67\70\x39"; goto pqWhX; pqWhX: $str = ''; goto fs0P0; zi9J9: return $str; goto R3igu; Sc_Bc: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto yio2s; rp4rR: GJH0Y: goto zi9J9; QtkR_: goto fKnc3; goto rp4rR; fs0P0: $i = 0; goto VdwU4; Brzus: if (!($i < $length)) { goto GJH0Y; } goto Sc_Bc; fb1Nm: $i++; goto QtkR_; VdwU4: fKnc3: goto Brzus; yio2s: zS0eN: goto fb1Nm; R3igu: } private function getSign($Obj) { goto BmETP; uzRS4: $result_ = strtoupper($String); goto PK6MC; koqxl: $String = md5($String); goto uzRS4; FW3DZ: $String = $this->formatBizQueryParaMap($Parameters, false); goto tkEqp; BmETP: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; syE2i: } goto PXMWe; PXMWe: qOWrC: goto sVNA0; tkEqp: $String = $String . "\46\153\145\x79\75" . $this->key; goto koqxl; sVNA0: ksort($Parameters); goto FW3DZ; PK6MC: return $result_; goto gzv3d; gzv3d: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto tbFVP; jSjsJ: $reqPar; goto HgchW; nhgD8: ksort($paraMap); goto T0hVr; T0hVr: foreach ($paraMap as $k => $v) { goto ywFo2; ywFo2: if (!$urlencode) { goto hvekd; } goto hR0dW; hR0dW: $v = urlencode($v); goto nSpEe; B4b4C: $buff .= $k . "\75" . $v . "\x26"; goto wyMMS; wyMMS: IHJwY: goto em5Ru; nSpEe: hvekd: goto B4b4C; em5Ru: } goto FgvV5; cUSJu: return $reqPar; goto aaYOr; tbFVP: $buff = ''; goto nhgD8; ndIjb: EpJ2K: goto cUSJu; FgvV5: Oviid: goto jSjsJ; wzGca: $reqPar = substr($buff, 0, strlen($buff) - 1); goto ndIjb; HgchW: if (!(strlen($buff) > 0)) { goto EpJ2K; } goto wzGca; aaYOr: } }