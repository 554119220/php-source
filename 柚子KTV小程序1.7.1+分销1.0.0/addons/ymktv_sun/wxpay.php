<?php
 class WeixinPay { protected $appid; protected $mch_id; protected $key; protected $openid; protected $out_trade_no; protected $body; protected $total_fee; function __construct($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee) { goto S6FXG; S6FXG: $this->appid = $appid; goto PzQ9k; YtUuz: $this->key = $key; goto uD89v; rR25o: $this->mch_id = $mch_id; goto YtUuz; uD89v: $this->out_trade_no = $out_trade_no; goto odx7z; PzQ9k: $this->openid = $openid; goto rR25o; LPGDw: $this->total_fee = $total_fee; goto u6tn8; odx7z: $this->body = $body; goto LPGDw; u6tn8: } public function pay() { $return = $this->weixinapp(); return $return; } private function unifiedorder() { goto rhcuB; rhcuB: $url = "\x68\164\164\x70\x73\72\57\x2f\141\x70\x69\56\x6d\143\150\x2e\x77\145\x69\x78\151\x6e\x2e\161\161\x2e\143\157\x6d\x2f\x70\141\171\x2f\165\x6e\151\146\151\145\x64\157\162\x64\x65\x72"; goto AiJ9h; pG2yZ: return $return; goto ty3Lx; LSigF: $parameters["\163\x69\x67\156"] = $this->getSign($parameters); goto T2GK0; p9Qal: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60)); goto pG2yZ; T2GK0: $xmlData = $this->arrayToXml($parameters); goto p9Qal; AiJ9h: $parameters = array("\141\160\160\x69\144" => $this->appid, "\155\x63\x68\137\x69\x64" => $this->mch_id, "\x6e\157\x6e\143\145\x5f\x73\164\162" => $this->createNoncestr(), "\x62\x6f\144\171" => $this->body, "\x6f\x75\164\137\x74\x72\141\x64\x65\x5f\x6e\x6f" => $this->out_trade_no, "\x74\x6f\164\x61\x6c\x5f\x66\145\x65" => $this->total_fee, "\x73\160\x62\151\x6c\x6c\x5f\143\162\x65\x61\164\145\137\151\x70" => "\61\71\x32\56\61\66\x38\x2e\x30\56\x31\x36\x31", "\156\157\x74\151\x66\171\x5f\165\162\154" => "\150\164\164\160\72\x2f\57\167\x77\x77\x2e\167\x65\151\170\x69\156\56\161\161\56\143\x6f\x6d\57\167\170\160\x61\x79\x2f\x70\141\171\x2e\x70\x68\160", "\157\x70\145\156\151\144" => $this->openid, "\164\162\x61\144\x65\x5f\x74\x79\160\145" => "\112\123\x41\120\111"); goto LSigF; ty3Lx: } private static function postXmlCurl($xml, $url, $second = 30) { goto KRpm0; KRpm0: $ch = curl_init(); goto jftpg; hIbmL: if ($data) { goto Gofi1; } goto tixdK; lKPZt: Gofi1: goto oyWcw; SQk01: curl_close($ch); goto mV_9c; HlRvq: curl_setopt($ch, CURLOPT_URL, $url); goto w0jM2; T9mOu: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto I1iqy; QVbS3: curl_setopt($ch, CURLOPT_POST, TRUE); goto zZzRD; EyFOs: $data = curl_exec($ch); goto hIbmL; mV_9c: throw new WxPayException("\143\x75\162\154\xe5\x87\xba\351\224\x99\357\274\214\351\x94\231\xe8\xaf\xaf\347\xa0\x81\72{$error}"); goto qBeZc; QBJOi: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto yQqgq; yQqgq: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto CT5C8; AWqDj: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto QVbS3; RHWd9: IFjd2: goto rRRdW; CT5C8: set_time_limit(0); goto EyFOs; tixdK: $error = curl_errno($ch); goto SQk01; oyWcw: curl_close($ch); goto K0Gf8; jftpg: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto HlRvq; qBeZc: goto IFjd2; goto lKPZt; zZzRD: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto QBJOi; K0Gf8: return $data; goto RHWd9; I1iqy: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto AWqDj; w0jM2: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto T9mOu; rRRdW: } private function arrayToXml($arr) { goto X04ol; vBVpo: return $xml; goto inmz0; ZjNBt: bd4Hy: goto zvDTL; zvDTL: $xml .= "\x3c\57\x72\157\157\164\x3e"; goto vBVpo; ceq5j: foreach ($arr as $key => $val) { goto auVPD; PVRgj: $xml .= "\74" . $key . "\x3e" . arrayToXml($val) . "\74\57" . $key . "\x3e"; goto xI3Xs; auVPD: if (is_array($val)) { goto zv_MM; } goto gL926; gL926: $xml .= "\74" . $key . "\76" . $val . "\74\57" . $key . "\x3e"; goto udY4i; xI3Xs: lidF1: goto tQy8w; tQy8w: f40b8: goto ERc1i; pC64t: zv_MM: goto PVRgj; udY4i: goto lidF1; goto pC64t; ERc1i: } goto ZjNBt; X04ol: $xml = "\74\x72\157\x6f\164\76"; goto ceq5j; inmz0: } private function xmlToArray($xml) { goto pnSf9; URXq3: $val = json_decode(json_encode($xmlstring), true); goto zEeCt; pnSf9: libxml_disable_entity_loader(true); goto HSRK3; zEeCt: return $val; goto mavpF; HSRK3: $xmlstring = simplexml_load_string($xml, "\x53\x69\x6d\160\x6c\x65\130\x4d\114\x45\154\145\155\x65\x6e\x74", LIBXML_NOCDATA); goto URXq3; mavpF: } private function weixinapp() { goto PCHLZ; JiQBk: $parameters = array("\x61\x70\x70\111\x64" => $this->appid, "\164\151\x6d\x65\x53\x74\x61\155\160" => '' . time() . '', "\156\157\x6e\x63\145\123\164\162" => $this->createNoncestr(), "\160\141\143\153\141\x67\145" => "\160\x72\145\160\141\x79\x5f\151\x64\x3d" . $unifiedorder["\160\162\x65\160\141\171\137\x69\x64"], "\x73\x69\x67\x6e\124\171\160\145" => "\115\x44\x35"); goto a51zK; PCHLZ: $unifiedorder = $this->unifiedorder(); goto JiQBk; ep5Zr: return $parameters; goto fRniq; a51zK: $parameters["\160\x61\x79\123\x69\x67\x6e"] = $this->getSign($parameters); goto ep5Zr; fRniq: } private function createNoncestr($length = 32) { goto ZI0R0; LwGZ5: goto n8k3N; goto HOoiW; HOoiW: v_hGy: goto HGA4M; fQ4Iz: PcnY7: goto Kh8qy; ZI0R0: $chars = "\141\142\x63\x64\x65\146\147\x68\151\152\153\x6c\x6d\156\x6f\x70\161\x72\163\x74\x75\166\x77\170\x79\172\60\x31\62\x33\64\65\66\67\70\71"; goto cfTz_; LcwMI: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto fQ4Iz; kcKXU: if (!($i < $length)) { goto v_hGy; } goto LcwMI; iwOCA: n8k3N: goto kcKXU; cfTz_: $str = ''; goto LQsB9; Kh8qy: $i++; goto LwGZ5; HGA4M: return $str; goto JLXEM; LQsB9: $i = 0; goto iwOCA; JLXEM: } private function getSign($Obj) { goto ip28W; EXNWv: ksort($Parameters); goto UJ5Gs; OsYfk: n7kMz: goto EXNWv; sbf9C: $String = md5($String); goto pfw41; YZ6YJ: $String = $String . "\x26\x6b\x65\x79\x3d" . $this->key; goto sbf9C; Hd0fY: return $result_; goto MUnh4; UJ5Gs: $String = $this->formatBizQueryParaMap($Parameters, false); goto YZ6YJ; ip28W: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; tPOT8: } goto OsYfk; pfw41: $result_ = strtoupper($String); goto Hd0fY; MUnh4: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto K4uLM; eyMWL: $reqPar = substr($buff, 0, strlen($buff) - 1); goto En_5O; hkQOI: if (!(strlen($buff) > 0)) { goto UwjkE; } goto eyMWL; P_XUy: yVy88: goto cxyNh; Zi4Dl: foreach ($paraMap as $k => $v) { goto e1Gk1; vCvU0: YvYYs: goto GV6F3; MxbL5: Oka5I: goto axUUQ; e1Gk1: if (!$urlencode) { goto YvYYs; } goto Qvhn8; Qvhn8: $v = urlencode($v); goto vCvU0; GV6F3: $buff .= $k . "\75" . $v . "\46"; goto MxbL5; axUUQ: } goto P_XUy; En_5O: UwjkE: goto JQwpp; YWH3b: ksort($paraMap); goto Zi4Dl; cxyNh: $reqPar; goto hkQOI; K4uLM: $buff = ''; goto YWH3b; JQwpp: return $reqPar; goto cgrWW; cgrWW: } }