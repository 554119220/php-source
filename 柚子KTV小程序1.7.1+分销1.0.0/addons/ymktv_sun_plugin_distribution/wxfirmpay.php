<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto rGJj1; VoTY1: $this->partner_trade_no = $partner_trade_no; goto E272N; VgcWx: $this->apiclient_key = $apiclient_key; goto Ndy6o; E272N: $this->re_user_name = $re_user_name; goto xe3rI; vb2bK: $this->mchid = $mchid; goto okIOW; okIOW: $this->key = $key; goto lTf4a; lTf4a: $this->openid = $openid; goto VoTY1; xe3rI: $this->desc = $desc; goto CS4E0; rGJj1: $this->mch_appid = $mch_appid; goto vb2bK; G5rNa: $this->apiclient_cert = $apiclient_cert; goto VgcWx; CS4E0: $this->amount = $amount; goto G5rNa; Ndy6o: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto RAT6q; UYyZd: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto Lo6Hu; Vq9iq: $parameters = array("\x6d\x63\x68\137\x61\x70\160\151\144" => $this->mch_appid, "\155\x63\x68\x69\144" => $this->mchid, "\156\157\x6e\x63\145\137\163\164\x72" => $this->createNoncestr(), "\x70\x61\x72\x74\156\145\162\x5f\164\162\x61\144\145\x5f\156\157" => $this->partner_trade_no, "\157\160\x65\x6e\151\144" => $this->openid, "\143\150\x65\x63\153\137\x6e\141\x6d\145" => "\x4e\x4f\137\x43\110\105\x43\113", "\x72\x65\x5f\x75\x73\x65\x72\x5f\156\141\155\145" => $this->re_user_name, "\141\x6d\157\165\x6e\x74" => $this->amount, "\x64\x65\163\143" => $this->desc, "\163\160\142\151\154\x6c\x5f\x63\162\145\x61\x74\145\x5f\151\x70" => "\x31\x32\x30\56\67\71\56\x31\x35\62\56\61\x30\x35"); goto dY0Md; Mn4hc: $xmlData = $this->arrayToXml($parameters); goto UYyZd; RAT6q: $url = "\x68\164\x74\160\x73\x3a\57\x2f\x61\x70\x69\56\155\143\150\56\167\145\x69\x78\151\x6e\56\x71\x71\x2e\x63\x6f\155\x2f\155\155\160\141\171\155\x6b\164\x74\162\141\156\163\x66\145\162\163\x2f\x70\x72\157\x6d\157\x74\151\157\x6e\57\164\x72\141\x6e\x73\146\x65\162\163"; goto Vq9iq; dY0Md: $parameters["\x73\x69\x67\x6e"] = $this->getSign($parameters); goto Mn4hc; Lo6Hu: return $return; goto XF2Os; XF2Os: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto HenVj; PkLRe: set_time_limit(0); goto z3_k9; KsHDJ: curl_setopt($ch, CURLOPT_POST, TRUE); goto U8m8n; T06W8: curl_setopt($ch, CURLOPT_URL, $url); goto bch7b; C4QgT: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto n525n; O4IN3: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto PkLRe; PDcvs: curl_close($ch); goto lWzeb; Vkm93: return $data; goto pzoqH; oumLH: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto T06W8; lWzeb: throw new WxPayException("\143\165\x72\x6c\xe5\x87\xba\xe9\224\x99\xef\274\214\351\x94\x99\350\xaf\257\347\240\201\72{$error}"); goto Y5nJ9; G556O: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto bsgK3; z3_k9: $data = curl_exec($ch); goto ZOMUe; bsgK3: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto KsHDJ; pzoqH: is8kS: goto Prpje; bch7b: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto PJ27m; yKgxA: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto C4QgT; PnV5X: curl_close($ch); goto Vkm93; PJ27m: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto G556O; JE2zf: m7isv: goto PnV5X; Y5nJ9: goto is8kS; goto JE2zf; XXMyP: $error = curl_errno($ch); goto PDcvs; HenVj: $ch = curl_init(); goto oumLH; n525n: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto O4IN3; U8m8n: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto yKgxA; ZOMUe: if ($data) { goto m7isv; } goto XXMyP; Prpje: } private function arrayToXml($arr) { goto p2vMX; LKlw_: foreach ($arr as $key => $val) { goto Wn4Vi; bvlDP: $xml .= "\74" . $key . "\x3e" . $val . "\x3c\57" . $key . "\76"; goto wTpbZ; HaqJ6: Pr3wf: goto rjnIG; Mb1vc: $xml .= "\74" . $key . "\x3e" . arrayToXml($val) . "\74\57" . $key . "\x3e"; goto fjK_4; fjK_4: yHR_K: goto HaqJ6; wtHw4: yHiJB: goto Mb1vc; wTpbZ: goto yHR_K; goto wtHw4; Wn4Vi: if (is_array($val)) { goto yHiJB; } goto bvlDP; rjnIG: } goto AJfn5; O2IOE: return $xml; goto wwWcV; NKaF3: $xml .= "\74\57\162\x6f\x6f\x74\76"; goto O2IOE; p2vMX: $xml = "\x3c\162\157\157\x74\x3e"; goto LKlw_; AJfn5: eFI0y: goto NKaF3; wwWcV: } private function xmlToArray($xml) { goto Eb8Yi; glFUM: $val = json_decode(json_encode($xmlstring), true); goto sezHd; sezHd: return $val; goto Gj1uH; MvcUB: $xmlstring = simplexml_load_string($xml, "\123\151\155\x70\154\x65\x58\115\x4c\105\x6c\x65\x6d\x65\156\x74", LIBXML_NOCDATA); goto glFUM; Eb8Yi: libxml_disable_entity_loader(true); goto MvcUB; Gj1uH: } private function createNoncestr($length = 32) { goto aAjml; ltxRR: $str = ''; goto mIyq4; m9XAF: $i++; goto UeulF; hlzdQ: return $str; goto HyvPv; vK99x: nH4HJ: goto m9XAF; kKyVR: NVdS9: goto dEWGo; OibjW: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto vK99x; aAjml: $chars = "\141\x62\143\x64\145\146\147\150\151\152\153\x6c\155\156\157\x70\x71\162\163\x74\165\166\167\170\171\x7a\x30\x31\x32\x33\64\65\x36\x37\70\71"; goto ltxRR; mIyq4: $i = 0; goto kKyVR; dEWGo: if (!($i < $length)) { goto DTA25; } goto OibjW; UeulF: goto NVdS9; goto o1C_j; o1C_j: DTA25: goto hlzdQ; HyvPv: } private function getSign($Obj) { goto PHWqS; ls0Lj: $String = $this->formatBizQueryParaMap($Parameters, false); goto xidHB; xidHB: $String = $String . "\x26\x6b\145\171\x3d" . $this->key; goto CWR59; HOLe0: ksort($Parameters); goto ls0Lj; RHTuX: $result_ = strtoupper($String); goto UJ8wT; CWR59: $String = md5($String); goto RHTuX; UJ8wT: return $result_; goto IPp4k; PHWqS: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; T5wnb: } goto ajKAd; ajKAd: gUG8B: goto HOLe0; IPp4k: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto eBst5; FY1Ky: $reqPar; goto eVyNT; b7PEu: foreach ($paraMap as $k => $v) { goto CjROC; McF58: wgSRJ: goto RHYCH; ExgjS: $v = urlencode($v); goto McF58; Fpl04: W9Hzs: goto CxYRN; RHYCH: $buff .= $k . "\75" . $v . "\x26"; goto Fpl04; CjROC: if (!$urlencode) { goto wgSRJ; } goto ExgjS; CxYRN: } goto lavtv; e9X_w: $reqPar = substr($buff, 0, strlen($buff) - 1); goto fmH1l; ItiPC: ksort($paraMap); goto b7PEu; eVyNT: if (!(strlen($buff) > 0)) { goto d0F0M; } goto e9X_w; pnqpz: return $reqPar; goto ZfnyG; lavtv: DUzyJ: goto FY1Ky; fmH1l: d0F0M: goto pnqpz; eBst5: $buff = ''; goto ItiPC; ZfnyG: } }