<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto gTagd; gTagd: $this->mch_appid = $mch_appid; goto aucV_; TKDgu: $this->apiclient_cert = $apiclient_cert; goto wQYgw; aucV_: $this->mchid = $mchid; goto LrTf1; vPT3c: $this->openid = $openid; goto j0L6g; wQYgw: $this->apiclient_key = $apiclient_key; goto UcLJ7; j0L6g: $this->partner_trade_no = $partner_trade_no; goto iR006; LrTf1: $this->key = $key; goto vPT3c; UXwdh: $this->desc = $desc; goto Kolid; iR006: $this->re_user_name = $re_user_name; goto UXwdh; Kolid: $this->amount = $amount; goto TKDgu; UcLJ7: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto XYB0f; inxF1: $xmlData = $this->arrayToXml($parameters); goto L9u1B; jbkT2: $parameters["\x73\x69\x67\x6e"] = $this->getSign($parameters); goto inxF1; L9u1B: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto txKu_; XYB0f: $url = "\x68\164\x74\160\x73\x3a\57\57\x61\160\x69\x2e\x6d\x63\150\x2e\x77\x65\151\170\x69\x6e\56\161\161\56\x63\x6f\x6d\x2f\155\x6d\x70\x61\x79\x6d\153\x74\x74\x72\x61\156\x73\146\145\x72\x73\x2f\160\x72\x6f\x6d\x6f\x74\151\x6f\x6e\57\x74\x72\x61\x6e\163\x66\x65\x72\x73"; goto WkIxm; WkIxm: $parameters = array("\x6d\143\150\x5f\141\160\x70\x69\144" => $this->mch_appid, "\155\143\150\151\144" => $this->mchid, "\156\157\x6e\143\145\x5f\x73\x74\162" => $this->createNoncestr(), "\160\x61\x72\x74\156\x65\x72\137\164\162\141\144\145\x5f\156\157" => $this->partner_trade_no, "\x6f\160\x65\156\151\x64" => $this->openid, "\143\150\145\143\x6b\x5f\x6e\141\x6d\145" => "\x4e\x4f\137\103\110\105\x43\113", "\x72\145\137\x75\x73\145\162\137\x6e\x61\155\x65" => $this->re_user_name, "\141\155\x6f\165\x6e\x74" => $this->amount, "\x64\145\163\x63" => $this->desc, "\x73\x70\142\151\154\154\x5f\x63\x72\145\141\x74\145\137\151\160" => "\x31\x32\x30\x2e\x37\71\x2e\61\x35\62\56\x31\60\65"); goto jbkT2; txKu_: return $return; goto aWO81; aWO81: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto j2GMP; txAkF: osiAc: goto z3WYE; MYLEW: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto OQIel; uCHUn: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto unUKz; OQIel: set_time_limit(0); goto JyM1z; ypfZf: vF0jV: goto IPVW2; bScEW: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto J6Ub3; yYcMk: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto MYLEW; yHZGP: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto pNuIf; pJgBD: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto bNzmd; TDARt: throw new WxPayException("\143\165\162\154\345\x87\272\351\224\231\xef\274\214\351\224\x99\xe8\xaf\xaf\xe7\240\201\72{$error}"); goto FJEGP; nMWNM: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto yYcMk; cUs7R: if ($data) { goto osiAc; } goto yDPiW; Gsrze: return $data; goto ypfZf; JyM1z: $data = curl_exec($ch); goto cUs7R; bjR1C: curl_close($ch); goto TDARt; unUKz: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto nMWNM; J6Ub3: curl_setopt($ch, CURLOPT_URL, $url); goto bgfYL; bgfYL: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto pJgBD; FJEGP: goto vF0jV; goto txAkF; bNzmd: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto yHZGP; j2GMP: $ch = curl_init(); goto bScEW; pNuIf: curl_setopt($ch, CURLOPT_POST, TRUE); goto uCHUn; yDPiW: $error = curl_errno($ch); goto bjR1C; z3WYE: curl_close($ch); goto Gsrze; IPVW2: } private function arrayToXml($arr) { goto V7aZm; qPtgT: foreach ($arr as $key => $val) { goto j6ZUu; j6ZUu: if (is_array($val)) { goto omsdO; } goto Oi9HU; ORKrg: omsdO: goto v313e; FLNDw: goto bWGjm; goto ORKrg; v313e: $xml .= "\x3c" . $key . "\x3e" . arrayToXml($val) . "\x3c\x2f" . $key . "\x3e"; goto apycT; apycT: bWGjm: goto W8q9b; Oi9HU: $xml .= "\74" . $key . "\76" . $val . "\x3c\57" . $key . "\x3e"; goto FLNDw; W8q9b: QJyaS: goto FaizG; FaizG: } goto wfJ9o; wfJ9o: Iln0I: goto UXcXa; UXcXa: $xml .= "\x3c\x2f\x72\x6f\157\164\x3e"; goto RwGyF; V7aZm: $xml = "\x3c\x72\157\157\164\76"; goto qPtgT; RwGyF: return $xml; goto UsLWQ; UsLWQ: } private function xmlToArray($xml) { goto ZHUv0; ypmGj: return $val; goto e2z1x; mMJiN: $xmlstring = simplexml_load_string($xml, "\x53\x69\x6d\160\x6c\x65\130\115\x4c\105\154\x65\155\145\x6e\x74", LIBXML_NOCDATA); goto xbWSu; ZHUv0: libxml_disable_entity_loader(true); goto mMJiN; xbWSu: $val = json_decode(json_encode($xmlstring), true); goto ypmGj; e2z1x: } private function createNoncestr($length = 32) { goto hd5bu; L7Wt0: $i++; goto mIxpN; hd5bu: $chars = "\141\x62\143\144\x65\146\x67\x68\x69\x6a\153\x6c\155\156\157\160\161\x72\x73\x74\x75\166\167\x78\x79\172\60\61\62\x33\64\65\66\67\x38\71"; goto GI44c; mIxpN: goto jupnd; goto BrCyh; BrCyh: mTOB8: goto DsGeW; FEgoi: if (!($i < $length)) { goto mTOB8; } goto j5X1D; PmUlh: jupnd: goto FEgoi; GI44c: $str = ''; goto zkSgz; JJJjt: fnybO: goto L7Wt0; DsGeW: return $str; goto bBzGK; zkSgz: $i = 0; goto PmUlh; j5X1D: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto JJJjt; bBzGK: } private function getSign($Obj) { goto n55KY; Z8nA9: $result_ = strtoupper($String); goto z_1Fk; J0H4x: $String = md5($String); goto Z8nA9; STkqU: ksort($Parameters); goto kpx6H; n55KY: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; sFa_H: } goto jXy3n; s2w4V: $String = $String . "\46\153\x65\x79\75" . $this->key; goto J0H4x; z_1Fk: return $result_; goto u7gKd; jXy3n: jYEaK: goto STkqU; kpx6H: $String = $this->formatBizQueryParaMap($Parameters, false); goto s2w4V; u7gKd: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto MKObW; MdY9V: if (!(strlen($buff) > 0)) { goto PNTl_; } goto Jkerq; Jkerq: $reqPar = substr($buff, 0, strlen($buff) - 1); goto j5vbS; sCbSQ: aSs3K: goto lfznN; nC4kl: foreach ($paraMap as $k => $v) { goto ToAj4; aNhwV: MWT_E: goto vGeo_; A9AXK: uDTL1: goto SevII; njyL6: $v = urlencode($v); goto A9AXK; SevII: $buff .= $k . "\75" . $v . "\46"; goto aNhwV; ToAj4: if (!$urlencode) { goto uDTL1; } goto njyL6; vGeo_: } goto sCbSQ; DpDop: ksort($paraMap); goto nC4kl; lfznN: $reqPar; goto MdY9V; j5vbS: PNTl_: goto tWqPI; MKObW: $buff = ''; goto DpDop; tWqPI: return $reqPar; goto SYwes; SYwes: } }