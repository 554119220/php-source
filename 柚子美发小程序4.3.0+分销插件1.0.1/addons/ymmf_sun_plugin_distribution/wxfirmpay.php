<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto I57wq; FBwZs: $this->desc = $desc; goto JCZcV; EhZqN: $this->apiclient_cert = $apiclient_cert; goto H_50z; wJym3: $this->mchid = $mchid; goto QJG7F; OL9fg: $this->openid = $openid; goto hYBdn; hYBdn: $this->partner_trade_no = $partner_trade_no; goto ez_ss; ez_ss: $this->re_user_name = $re_user_name; goto FBwZs; H_50z: $this->apiclient_key = $apiclient_key; goto XI0Jz; I57wq: $this->mch_appid = $mch_appid; goto wJym3; QJG7F: $this->key = $key; goto OL9fg; JCZcV: $this->amount = $amount; goto EhZqN; XI0Jz: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto a90rZ; cSLmU: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto a5GsO; zzjV9: $xmlData = $this->arrayToXml($parameters); goto cSLmU; a5GsO: return $return; goto VDb3_; a90rZ: $url = "\x68\164\x74\x70\163\x3a\57\x2f\x61\x70\x69\56\x6d\143\150\x2e\x77\145\151\x78\151\156\x2e\x71\x71\x2e\143\157\x6d\x2f\x6d\x6d\160\x61\171\155\x6b\x74\164\x72\141\156\x73\146\145\x72\x73\x2f\160\x72\157\x6d\x6f\x74\x69\157\x6e\x2f\x74\162\x61\156\163\x66\145\x72\x73"; goto Je1GE; nOagX: $parameters["\x73\151\x67\x6e"] = $this->getSign($parameters); goto zzjV9; Je1GE: $parameters = array("\x6d\x63\150\x5f\x61\x70\x70\151\144" => $this->mch_appid, "\155\x63\x68\151\x64" => $this->mchid, "\x6e\x6f\156\143\x65\x5f\163\164\162" => $this->createNoncestr(), "\x70\141\x72\164\x6e\145\162\x5f\164\162\x61\144\x65\x5f\156\157" => $this->partner_trade_no, "\x6f\160\145\156\151\144" => $this->openid, "\x63\150\145\143\x6b\x5f\x6e\141\x6d\145" => "\x4e\x4f\137\103\110\x45\x43\x4b", "\162\x65\137\x75\163\145\162\x5f\x6e\141\x6d\145" => $this->re_user_name, "\141\155\x6f\x75\156\164" => $this->amount, "\x64\x65\x73\x63" => $this->desc, "\x73\x70\x62\x69\154\x6c\137\143\x72\x65\141\164\x65\x5f\151\x70" => "\61\x32\x30\56\x37\71\x2e\61\x35\x32\56\x31\x30\65"); goto nOagX; VDb3_: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto qSKgi; wO9Tb: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto JfOt4; IZNGJ: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto Ibjvv; JfOt4: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto x00zF; WPTMq: goto DzhsD; goto rmYlr; K2yEy: $data = curl_exec($ch); goto lb4qR; tOGZR: set_time_limit(0); goto K2yEy; rmYlr: r_8Fi: goto vhrlj; w7Zv6: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto OaWAe; CNUU9: return $data; goto IpYp1; vhrlj: curl_close($ch); goto CNUU9; Ibjvv: curl_setopt($ch, CURLOPT_POST, TRUE); goto KDhhE; lb4qR: if ($data) { goto r_8Fi; } goto mXRMH; CRySZ: curl_setopt($ch, CURLOPT_URL, $url); goto AeHhR; AeHhR: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto w7Zv6; CK0ka: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto wO9Tb; PWO0o: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto CRySZ; mXRMH: $error = curl_errno($ch); goto F3YLA; qSKgi: $ch = curl_init(); goto PWO0o; IpYp1: DzhsD: goto kt24D; F3YLA: curl_close($ch); goto Exxh8; x00zF: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto tOGZR; Exxh8: throw new WxPayException("\x63\165\x72\x6c\345\x87\272\xe9\x94\231\357\xbc\214\351\224\x99\350\xaf\257\347\xa0\x81\72{$error}"); goto WPTMq; KDhhE: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto CK0ka; OaWAe: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto IZNGJ; kt24D: } private function arrayToXml($arr) { goto DDQXa; wb4NN: foreach ($arr as $key => $val) { goto Q3u2q; Q3u2q: if (is_array($val)) { goto d4LnF; } goto g8cvg; xvGh7: goto l_G_3; goto BFZYo; g8cvg: $xml .= "\x3c" . $key . "\76" . $val . "\x3c\x2f" . $key . "\76"; goto xvGh7; O3X7j: l_G_3: goto p9Jfs; ICbDt: $xml .= "\74" . $key . "\x3e" . arrayToXml($val) . "\x3c\x2f" . $key . "\76"; goto O3X7j; BFZYo: d4LnF: goto ICbDt; p9Jfs: BzWXj: goto qUvUh; qUvUh: } goto f5zj6; DDQXa: $xml = "\74\162\x6f\x6f\164\x3e"; goto wb4NN; f5zj6: Y28yP: goto dlMcR; FM2gp: return $xml; goto letzK; dlMcR: $xml .= "\74\x2f\x72\157\x6f\x74\76"; goto FM2gp; letzK: } private function xmlToArray($xml) { goto CjyJn; AIdBx: $xmlstring = simplexml_load_string($xml, "\x53\151\155\x70\x6c\145\130\x4d\114\x45\x6c\x65\x6d\145\156\164", LIBXML_NOCDATA); goto lUnP6; CjyJn: libxml_disable_entity_loader(true); goto AIdBx; wjUZK: return $val; goto taynQ; lUnP6: $val = json_decode(json_encode($xmlstring), true); goto wjUZK; taynQ: } private function createNoncestr($length = 32) { goto vY66r; GDp8v: $i = 0; goto f2PkB; MPNa_: $str = ''; goto GDp8v; ZLeYX: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto Dcqav; Dcqav: tGCYr: goto H8Zc4; f2PkB: f9LSE: goto EoI99; EoI99: if (!($i < $length)) { goto TJl7R; } goto ZLeYX; wu4a9: TJl7R: goto hf4U7; hf4U7: return $str; goto wgLyz; GAw2s: goto f9LSE; goto wu4a9; vY66r: $chars = "\141\142\x63\144\145\x66\x67\150\151\x6a\153\x6c\155\156\x6f\160\161\162\163\164\x75\x76\x77\x78\171\x7a\x30\61\x32\x33\64\65\x36\67\70\x39"; goto MPNa_; H8Zc4: $i++; goto GAw2s; wgLyz: } private function getSign($Obj) { goto kXkT9; kXkT9: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; HrFXk: } goto TiYi_; X1WNh: $result_ = strtoupper($String); goto kd4Bh; LIH_7: ksort($Parameters); goto KiMMY; TiYi_: qQkOW: goto LIH_7; KiMMY: $String = $this->formatBizQueryParaMap($Parameters, false); goto jP80P; D9a06: $String = md5($String); goto X1WNh; kd4Bh: return $result_; goto gdz1n; jP80P: $String = $String . "\x26\x6b\x65\x79\75" . $this->key; goto D9a06; gdz1n: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto NMICI; ob0e0: return $reqPar; goto m1I2Q; QpMaT: $reqPar; goto Z5Q8R; NMICI: $buff = ''; goto M2vSE; TyqKb: $reqPar = substr($buff, 0, strlen($buff) - 1); goto kQ5Rc; M2vSE: ksort($paraMap); goto x6GTI; kQ5Rc: km7ko: goto ob0e0; joBuX: m80Jj: goto QpMaT; x6GTI: foreach ($paraMap as $k => $v) { goto QAOQ_; pBNwm: $buff .= $k . "\75" . $v . "\46"; goto jD6u2; jD6u2: q37Hz: goto UomuS; EHPQI: N3QH2: goto pBNwm; QAOQ_: if (!$urlencode) { goto N3QH2; } goto XE7Hc; XE7Hc: $v = urlencode($v); goto EHPQI; UomuS: } goto joBuX; Z5Q8R: if (!(strlen($buff) > 0)) { goto km7ko; } goto TyqKb; m1I2Q: } }