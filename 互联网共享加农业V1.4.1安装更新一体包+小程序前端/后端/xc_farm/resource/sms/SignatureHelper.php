<?php
 class SignatureHelper { public function request($accessKeyId, $accessKeySecret, $domain, $params, $security = false) { goto iJp5J; krUNM: ksort($apiParams); goto dfHt4; Nlp_h: $sign = base64_encode(hash_hmac("\x73\150\x61\x31", $stringToSign, $accessKeySecret . "\46", true)); goto sseNT; Mp2QI: try { $content = $this->fetchContent($url); return json_decode($content); } catch (\Exception $e) { return false; } goto pyyqy; JTAIR: $url = ($security ? "\150\164\x74\160\x73" : "\x68\164\164\160") . "\72\x2f\x2f{$domain}\x2f\x3f\x53\151\x67\x6e\x61\x74\165\x72\x65\x3d{$signature}{$sortedQueryStringTmp}"; goto Mp2QI; dfHt4: $sortedQueryStringTmp = ''; goto lOd2w; lOd2w: foreach ($apiParams as $key => $value) { $sortedQueryStringTmp .= "\x26" . $this->encode($key) . "\75" . $this->encode($value); fdIFG: } goto Tw8Go; sseNT: $signature = $this->encode($sign); goto JTAIR; iJp5J: $apiParams = array_merge(array("\x53\x69\x67\156\141\164\165\x72\145\115\x65\x74\150\157\144" => "\110\x4d\x41\x43\55\123\110\x41\x31", "\123\x69\147\156\141\x74\x75\x72\x65\116\157\156\x63\145" => uniqid(mt_rand(0, 0xffff), true), "\123\151\147\x6e\x61\x74\165\x72\145\x56\145\x72\163\x69\x6f\x6e" => "\61\x2e\60", "\101\143\x63\145\x73\163\113\x65\x79\x49\x64" => $accessKeyId, "\124\x69\155\145\x73\164\x61\x6d\160" => gmdate("\x59\x2d\155\x2d\144\134\124\110\x3a\x69\x3a\x73\x5c\132"), "\106\x6f\x72\155\141\164" => "\x4a\123\x4f\116"), $params); goto krUNM; Cwrw_: $stringToSign = "\107\105\124\46\45\62\106\46" . $this->encode(substr($sortedQueryStringTmp, 1)); goto Nlp_h; Tw8Go: aq5Tz: goto Cwrw_; pyyqy: } private function encode($str) { goto oOwVS; YYr5u: $res = preg_replace("\57\134\53\x2f", "\45\x32\x30", $res); goto z2x__; oOwVS: $res = urlencode($str); goto YYr5u; DNOzk: return $res; goto aZM90; z2x__: $res = preg_replace("\x2f\134\52\x2f", "\45\x32\101", $res); goto OGZry; OGZry: $res = preg_replace("\57\x25\67\x45\57", "\x7e", $res); goto DNOzk; aZM90: } private function fetchContent($url) { goto hYRLt; scH6F: curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); goto X8s4d; RVrs_: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); goto tWJtx; XJm45: $rtn = curl_exec($ch); goto tUX4U; hYRLt: $ch = curl_init(); goto brlc2; I6pMn: curl_setopt($ch, CURLOPT_TIMEOUT, 5); goto scH6F; brlc2: curl_setopt($ch, CURLOPT_URL, $url); goto I6pMn; IKNCt: curl_close($ch); goto wl4FL; wl4FL: return $rtn; goto tMX6n; uwKP0: if (!(substr($url, 0, 5) == "\150\164\x74\160\x73")) { goto H9sXh; } goto RVrs_; sGheU: aWdgk: goto IKNCt; BQBPO: H9sXh: goto XJm45; tUX4U: if (!($rtn === false)) { goto aWdgk; } goto EWrwG; tWJtx: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); goto BQBPO; EWrwG: trigger_error("\x5b\103\x55\x52\x4c\x5f" . curl_errno($ch) . "\x5d\72\x20" . curl_error($ch), E_USER_ERROR); goto sGheU; X8s4d: curl_setopt($ch, CURLOPT_HTTPHEADER, array("\x78\x2d\163\x64\153\x2d\x63\154\x69\x65\x6e\164" => "\x70\x68\x70\57\x32\x2e\60\x2e\60")); goto uwKP0; tMX6n: } }