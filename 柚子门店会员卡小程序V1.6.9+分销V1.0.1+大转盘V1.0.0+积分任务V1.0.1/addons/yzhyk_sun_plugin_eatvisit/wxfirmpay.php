<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto st2Xb; zOqL8: $this->amount = $amount; goto PK4lg; cWH0s: $this->key = $key; goto TC_gh; TC_gh: $this->openid = $openid; goto ajS_4; st2Xb: $this->mch_appid = $mch_appid; goto OsVFV; PK4lg: $this->apiclient_cert = $apiclient_cert; goto ligST; ajS_4: $this->partner_trade_no = $partner_trade_no; goto nuLuU; vgFQC: $this->desc = $desc; goto zOqL8; nuLuU: $this->re_user_name = $re_user_name; goto vgFQC; ligST: $this->apiclient_key = $apiclient_key; goto JTvqe; OsVFV: $this->mchid = $mchid; goto cWH0s; JTvqe: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto Vn8VR; FtfIt: $parameters = array("\x6d\143\x68\137\141\160\160\x69\x64" => $this->mch_appid, "\x6d\143\x68\151\144" => $this->mchid, "\156\157\x6e\x63\x65\137\163\x74\x72" => $this->createNoncestr(), "\x70\x61\162\x74\x6e\145\162\137\164\x72\141\x64\x65\x5f\156\157" => $this->partner_trade_no, "\x6f\160\x65\156\151\144" => $this->openid, "\143\x68\x65\143\x6b\137\x6e\x61\x6d\x65" => "\x4e\117\x5f\x43\x48\105\x43\x4b", "\x72\145\x5f\x75\x73\x65\x72\x5f\156\141\x6d\145" => $this->re_user_name, "\x61\x6d\157\x75\x6e\x74" => $this->amount, "\x64\145\163\x63" => $this->desc, "\x73\x70\142\x69\154\x6c\x5f\143\162\145\x61\164\x65\137\151\x70" => "\61\x32\60\x2e\x37\71\56\x31\x35\x32\56\x31\x30\65"); goto zzUEl; jQgOz: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto q1ZIq; Vn8VR: $url = "\150\x74\x74\x70\163\x3a\57\57\141\160\151\x2e\x6d\x63\150\x2e\167\145\151\x78\151\x6e\56\161\x71\x2e\143\x6f\x6d\x2f\x6d\x6d\x70\x61\x79\x6d\153\x74\x74\x72\141\156\x73\146\x65\162\x73\x2f\x70\x72\157\x6d\x6f\164\x69\x6f\x6e\x2f\164\x72\141\156\163\146\145\162\163"; goto FtfIt; q1ZIq: return $return; goto g381m; lni81: $xmlData = $this->arrayToXml($parameters); goto jQgOz; zzUEl: $parameters["\163\151\147\156"] = $this->getSign($parameters); goto lni81; g381m: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto dGfKN; RMrAM: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto FFyiU; KNTSb: FCkGu: goto K8ecY; MkJBr: curl_setopt($ch, CURLOPT_URL, $url); goto YY2DH; aNzd1: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto zTxQn; xIP5X: if ($data) { goto FCkGu; } goto ULwt9; ULwt9: $error = curl_errno($ch); goto oCCIN; CEOEU: MM_43: goto XrTa3; K8ecY: curl_close($ch); goto p3yyP; qDG_B: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto RMrAM; OLooj: curl_setopt($ch, CURLOPT_POST, TRUE); goto qDG_B; Df8oa: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto MkJBr; J0Hx0: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto OLooj; zTxQn: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto J0Hx0; oCCIN: curl_close($ch); goto TphpR; CteVq: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto T3Z90; UzF_P: goto MM_43; goto KNTSb; YY2DH: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto aNzd1; FFyiU: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto CteVq; dGfKN: $ch = curl_init(); goto Df8oa; aWQPO: set_time_limit(0); goto YJYNy; p3yyP: return $data; goto CEOEU; YJYNy: $data = curl_exec($ch); goto xIP5X; TphpR: throw new WxPayException("\x63\165\162\x6c\xe5\207\xba\xe9\224\231\357\xbc\x8c\351\224\x99\350\xaf\xaf\347\xa0\201\72{$error}"); goto UzF_P; T3Z90: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto aWQPO; XrTa3: } private function arrayToXml($arr) { goto Ne44Y; KYFar: return $xml; goto GE9Hg; Ne44Y: $xml = "\74\x72\x6f\157\x74\x3e"; goto qzOH3; cd6sp: jEd6h: goto MtPn4; qzOH3: foreach ($arr as $key => $val) { goto WgPR9; DpAPG: goto VNEqC; goto USFXv; WgPR9: if (is_array($val)) { goto vH41N; } goto o03xW; o03xW: $xml .= "\x3c" . $key . "\76" . $val . "\x3c\57" . $key . "\x3e"; goto DpAPG; p9XeR: $xml .= "\74" . $key . "\76" . arrayToXml($val) . "\74\x2f" . $key . "\x3e"; goto gUUfq; Rtjsk: rTbgX: goto dVCBe; USFXv: vH41N: goto p9XeR; gUUfq: VNEqC: goto Rtjsk; dVCBe: } goto cd6sp; MtPn4: $xml .= "\74\57\x72\x6f\x6f\x74\x3e"; goto KYFar; GE9Hg: } private function xmlToArray($xml) { goto pqd5p; pqd5p: libxml_disable_entity_loader(true); goto rSgYV; V0ZvU: return $val; goto he2x0; t_aQP: $val = json_decode(json_encode($xmlstring), true); goto V0ZvU; rSgYV: $xmlstring = simplexml_load_string($xml, "\x53\151\x6d\160\154\x65\130\115\x4c\105\154\145\x6d\145\156\164", LIBXML_NOCDATA); goto t_aQP; he2x0: } private function createNoncestr($length = 32) { goto en6GA; en6GA: $chars = "\141\142\143\x64\x65\x66\x67\x68\151\152\153\x6c\x6d\x6e\157\x70\161\x72\x73\x74\165\166\167\x78\171\172\x30\61\x32\63\64\x35\x36\x37\70\x39"; goto Xvy4Q; V2HAk: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto le1K_; zU2Gr: $i++; goto EfjZw; RmVfV: COA2U: goto T1LJy; FW6qf: return $str; goto SbhE7; Xvy4Q: $str = ''; goto ffohV; T1LJy: if (!($i < $length)) { goto KIiIb; } goto V2HAk; le1K_: WTIS1: goto zU2Gr; AatMX: KIiIb: goto FW6qf; EfjZw: goto COA2U; goto AatMX; ffohV: $i = 0; goto RmVfV; SbhE7: } private function getSign($Obj) { goto CyA88; KLO7q: $String = md5($String); goto HPPic; CyA88: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; Ta7rS: } goto qeW09; qeW09: cr4JA: goto szz6j; HPPic: $result_ = strtoupper($String); goto VrElO; Fl1ka: $String = $this->formatBizQueryParaMap($Parameters, false); goto VbLsj; VbLsj: $String = $String . "\46\153\x65\x79\75" . $this->key; goto KLO7q; VrElO: return $result_; goto so8r1; szz6j: ksort($Parameters); goto Fl1ka; so8r1: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto BOcxo; d_Pja: foreach ($paraMap as $k => $v) { goto zUcFA; h1VuP: hPSNz: goto rSNPH; zUcFA: if (!$urlencode) { goto teFEd; } goto wOnie; wOnie: $v = urlencode($v); goto tPOOW; TO2D4: $buff .= $k . "\75" . $v . "\x26"; goto h1VuP; tPOOW: teFEd: goto TO2D4; rSNPH: } goto VNClj; wGkLo: return $reqPar; goto oNJ_H; LNNyl: $reqPar = substr($buff, 0, strlen($buff) - 1); goto T0Trj; T0Trj: IDOU5: goto wGkLo; VNClj: wMg0c: goto A8SpL; CAR_5: ksort($paraMap); goto d_Pja; r85V5: if (!(strlen($buff) > 0)) { goto IDOU5; } goto LNNyl; A8SpL: $reqPar; goto r85V5; BOcxo: $buff = ''; goto CAR_5; oNJ_H: } }