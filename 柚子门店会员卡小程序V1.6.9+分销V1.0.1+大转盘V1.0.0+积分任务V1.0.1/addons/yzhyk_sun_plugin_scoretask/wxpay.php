<?php
 class WeixinPay { protected $appid; protected $mch_id; protected $key; protected $openid; protected $out_trade_no; protected $body; protected $total_fee; protected $attach; protected $notify_url; function __construct($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, $attach = 0, $notify_url = "\x68\x74\x74\x70\72\x2f\x2f\x77\167\167\x2e\167\145\151\170\151\156\x2e\x71\161\56\x63\157\155\57\x77\x78\160\141\x79\57\x70\x61\171\56\x70\x68\160") { goto Xz7PS; jBJJQ: $this->openid = $openid; goto wvy3h; WTM5S: $this->body = $body; goto ca6kr; Xz7PS: $this->appid = $appid; goto jBJJQ; klv1y: $this->notify_url = $notify_url; goto XEECK; ca6kr: $this->total_fee = $total_fee; goto rcull; wvy3h: $this->mch_id = $mch_id; goto GDOBG; rcull: $this->attach = $attach; goto klv1y; lbWc0: $this->out_trade_no = $out_trade_no; goto WTM5S; GDOBG: $this->key = $key; goto lbWc0; XEECK: } public function pay() { $return = $this->weixinapp(); return $return; } private function unifiedorder() { goto xy0ou; fYMiN: $parameters = array("\x61\x70\x70\151\144" => $this->appid, "\x6d\x63\150\137\151\144" => $this->mch_id, "\x6e\157\x6e\143\x65\x5f\x73\164\162" => $this->createNoncestr(), "\x62\157\144\x79" => $this->body, "\x61\x74\164\x61\143\x68" => $this->attach, "\x6f\x75\x74\137\x74\x72\x61\144\x65\x5f\x6e\157" => $this->out_trade_no, "\164\x6f\164\x61\154\x5f\x66\145\x65" => $this->total_fee, "\163\x70\142\151\154\154\137\143\x72\x65\141\x74\145\x5f\151\x70" => $_SERVER["\122\105\x4d\117\x54\x45\x5f\101\104\x44\x52"], "\x6e\x6f\164\151\146\x79\x5f\x75\x72\x6c" => $this->notify_url, "\x6f\x70\145\156\151\x64" => $this->openid, "\164\162\141\x64\145\137\164\x79\x70\x65" => "\112\123\101\120\111"); goto tjRA2; IVW4l: $xmlData = $this->arrayToXml($parameters); goto AZriO; tjRA2: $parameters["\x73\151\x67\x6e"] = $this->getSign($parameters); goto IVW4l; oRd1C: return $return; goto Wq1ry; AZriO: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60)); goto oRd1C; xy0ou: $url = "\x68\164\x74\x70\x73\72\x2f\x2f\141\160\151\56\155\x63\150\x2e\x77\x65\x69\x78\151\156\56\x71\161\56\143\x6f\x6d\x2f\160\x61\x79\57\x75\156\151\x66\x69\145\144\157\162\144\x65\x72"; goto fYMiN; Wq1ry: } private static function postXmlCurl($xml, $url, $second = 30) { goto t7DfQ; DpZYR: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto slmDl; DL2JP: if ($data) { goto WAp3A; } goto epYyb; epYyb: $error = curl_errno($ch); goto bpyz9; n_idP: curl_setopt($ch, CURLOPT_URL, $url); goto QOALr; YRgiv: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto mOuF8; jTPz1: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto n_idP; T1bct: goto JbsRW; goto dje9n; HqU3E: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto DEBXu; z08d_: $data = curl_exec($ch); goto DL2JP; QOALr: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto wk93q; jM8RS: return $data; goto qvySQ; IEAJB: curl_close($ch); goto jM8RS; slmDl: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto MM3ux; rzmVK: throw new WxPayException("\x63\165\162\154\xe5\x87\272\xe9\224\x99\xef\274\x8c\351\224\x99\xe8\257\xaf\347\240\x81\x3a{$error}"); goto T1bct; mOuF8: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto HqU3E; MM3ux: curl_setopt($ch, CURLOPT_POST, TRUE); goto YRgiv; DEBXu: set_time_limit(0); goto z08d_; t7DfQ: $ch = curl_init(); goto jTPz1; dje9n: WAp3A: goto IEAJB; bpyz9: curl_close($ch); goto rzmVK; wk93q: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto DpZYR; qvySQ: JbsRW: goto pGQaK; pGQaK: } private function arrayToXml($arr) { goto ofyK3; VthrH: $xml .= "\74\x2f\162\157\x6f\164\76"; goto WkAb1; UY5A7: oeQxh: goto VthrH; WkAb1: return $xml; goto ysjQk; ofyK3: $xml = "\74\162\157\157\164\x3e"; goto vYVX9; vYVX9: foreach ($arr as $key => $val) { goto A__BI; sivqe: $xml .= "\x3c" . $key . "\76" . arrayToXml($val) . "\x3c\x2f" . $key . "\x3e"; goto h82tF; xI0OE: rP6rB: goto sivqe; jDiYk: hYVDy: goto aK72_; SoF4R: goto IOOGL; goto xI0OE; A__BI: if (is_array($val)) { goto rP6rB; } goto xN8xj; h82tF: IOOGL: goto jDiYk; xN8xj: $xml .= "\x3c" . $key . "\76" . $val . "\x3c\x2f" . $key . "\x3e"; goto SoF4R; aK72_: } goto UY5A7; ysjQk: } private function xmlToArray($xml) { goto o5tqt; o5tqt: libxml_disable_entity_loader(true); goto gk1mP; uiT5I: $val = json_decode(json_encode($xmlstring), true); goto fpMRF; gk1mP: $xmlstring = simplexml_load_string($xml, "\123\151\155\x70\154\x65\130\115\x4c\105\154\145\155\145\156\164", LIBXML_NOCDATA); goto uiT5I; fpMRF: return $val; goto MkCBB; MkCBB: } private function weixinapp() { goto HcUX0; adZzZ: return $parameters; goto Ai0Sl; HcUX0: $unifiedorder = $this->unifiedorder(); goto LjEK_; xEWtu: $parameters["\160\x61\171\123\x69\x67\156"] = $this->getSign($parameters); goto Azjbw; Azjbw: $parameters["\160\x72\x65\x70\x61\171\x5f\151\x64"] = $unifiedorder["\x70\162\145\160\141\171\x5f\x69\144"]; goto adZzZ; LjEK_: $parameters = array("\141\160\160\111\x64" => $this->appid, "\164\x69\155\x65\123\x74\141\155\160" => '' . time() . '', "\x6e\157\156\x63\145\123\x74\x72" => $this->createNoncestr(), "\x70\x61\x63\x6b\x61\147\145" => "\160\162\145\x70\x61\171\137\151\x64\x3d" . $unifiedorder["\x70\x72\145\160\x61\x79\x5f\x69\x64"], "\163\x69\147\x6e\x54\171\x70\x65" => "\115\104\x35"); goto xEWtu; Ai0Sl: } private function createNoncestr($length = 32) { goto emmBn; emmBn: $chars = "\x61\142\143\144\x65\146\x67\x68\151\x6a\153\x6c\x6d\156\157\160\161\x72\x73\x74\165\x76\x77\170\171\x7a\x30\x31\x32\63\64\65\x36\x37\x38\x39"; goto pRFEB; leIid: goto L6kCz; goto Xm9_v; ypSbL: L6kCz: goto iCQuH; yu5y2: SjXBV: goto KsnQc; iCQuH: if (!($i < $length)) { goto sMIG0; } goto L2_oQ; KsnQc: $i++; goto leIid; l2mbf: return $str; goto tdOGE; pRFEB: $str = ''; goto Aal8y; L2_oQ: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto yu5y2; Xm9_v: sMIG0: goto l2mbf; Aal8y: $i = 0; goto ypSbL; tdOGE: } private function getSign($Obj) { goto mivuh; xHGjW: $String = $this->formatBizQueryParaMap($Parameters, false); goto FJlKX; ilW0g: nvGip: goto p5R8r; p5R8r: ksort($Parameters); goto xHGjW; qSyDL: return $result_; goto thvAM; eVDuF: $result_ = strtoupper($String); goto qSyDL; mivuh: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; bDm6x: } goto ilW0g; L50Ex: $String = md5($String); goto eVDuF; FJlKX: $String = $String . "\x26\153\145\171\75" . $this->key; goto L50Ex; thvAM: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto t4RmO; t4RmO: $buff = ''; goto NYqDw; FMxad: b1xkt: goto Q2xFL; cVSEg: if (!(strlen($buff) > 0)) { goto b1xkt; } goto kjIRJ; NYqDw: ksort($paraMap); goto upy0I; kjIRJ: $reqPar = substr($buff, 0, strlen($buff) - 1); goto FMxad; TIZ8t: gervM: goto opmf9; Q2xFL: return $reqPar; goto oalNu; upy0I: foreach ($paraMap as $k => $v) { goto BMIPX; BMIPX: if (!$urlencode) { goto aC3dL; } goto h4u5f; LlG9C: aC3dL: goto ubmeJ; h4u5f: $v = urlencode($v); goto LlG9C; ubmeJ: $buff .= $k . "\x3d" . $v . "\46"; goto TKIm_; TKIm_: TStac: goto eZpb1; eZpb1: } goto TIZ8t; opmf9: $reqPar; goto cVSEg; oalNu: } }