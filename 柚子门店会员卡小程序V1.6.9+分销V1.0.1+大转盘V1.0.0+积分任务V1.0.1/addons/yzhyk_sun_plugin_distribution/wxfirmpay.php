<?php
 class WeixinfirmPay { protected $mch_appid; protected $mchid; protected $key; protected $openid; protected $partner_trade_no; protected $re_user_name; protected $desc; protected $amount; protected $apiclient_cert; protected $apiclient_key; function __construct($mch_appid, $mchid, $key, $openid, $partner_trade_no, $re_user_name, $desc, $amount, $apiclient_cert, $apiclient_key) { goto CaS45; aR3SI: $this->re_user_name = $re_user_name; goto HKOtO; DQd5q: $this->mchid = $mchid; goto cq0G3; u9PuZ: $this->amount = $amount; goto mJjYR; n0aZc: $this->openid = $openid; goto deoRK; deoRK: $this->partner_trade_no = $partner_trade_no; goto aR3SI; CaS45: $this->mch_appid = $mch_appid; goto DQd5q; mJjYR: $this->apiclient_cert = $apiclient_cert; goto VpFvN; cq0G3: $this->key = $key; goto n0aZc; VpFvN: $this->apiclient_key = $apiclient_key; goto VjaCf; HKOtO: $this->desc = $desc; goto u9PuZ; VjaCf: } public function pay() { $return = $this->unifiedorder(); return $return; } private function unifiedorder() { goto p67o_; Y0zeT: $parameters["\163\151\147\156"] = $this->getSign($parameters); goto zkcp8; p67o_: $url = "\x68\x74\x74\160\163\x3a\57\x2f\x61\160\151\56\155\x63\150\56\167\145\x69\x78\x69\156\x2e\161\161\56\143\157\155\x2f\155\x6d\x70\x61\x79\155\x6b\164\164\x72\141\x6e\x73\x66\145\x72\x73\57\160\x72\157\155\157\164\x69\x6f\x6e\x2f\164\162\141\156\163\x66\145\162\x73"; goto A3__f; A3__f: $parameters = array("\155\143\150\x5f\x61\160\x70\151\144" => $this->mch_appid, "\x6d\143\150\151\x64" => $this->mchid, "\156\x6f\156\143\x65\x5f\x73\164\162" => $this->createNoncestr(), "\160\141\x72\164\x6e\x65\x72\x5f\164\x72\x61\144\145\x5f\x6e\x6f" => $this->partner_trade_no, "\157\x70\145\x6e\x69\x64" => $this->openid, "\143\150\145\x63\x6b\x5f\156\141\155\x65" => "\x4e\x4f\x5f\x43\110\x45\x43\x4b", "\x72\145\x5f\x75\163\x65\162\137\156\x61\x6d\145" => $this->re_user_name, "\x61\x6d\x6f\165\x6e\x74" => $this->amount, "\x64\145\x73\143" => $this->desc, "\163\160\142\151\x6c\154\137\x63\x72\x65\141\x74\x65\137\x69\160" => "\61\62\x30\56\x37\x39\56\61\x35\62\56\x31\x30\x35"); goto Y0zeT; zkcp8: $xmlData = $this->arrayToXml($parameters); goto wXS73; wXS73: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60, $this->apiclient_cert, $this->apiclient_key)); goto oBPVr; oBPVr: return $return; goto cJ1AR; cJ1AR: } private static function postXmlCurl($xml, $url, $second = 30, $apiclient_cert, $apiclient_key) { goto imvQg; HCK5k: curl_setopt($ch, CURLOPT_SSLKEY, $apiclient_key); goto aOoj8; d7NRs: T3Pgw: goto sPeGt; R_f_2: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto znVr3; UZgvh: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto HLiL5; c4oka: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto HA9Xz; EdK9l: $data = curl_exec($ch); goto gr_Y0; gr_Y0: if ($data) { goto MUhNL; } goto yjtdT; HA9Xz: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto aWtUr; WPL49: curl_setopt($ch, CURLOPT_POST, TRUE); goto c4oka; aWtUr: curl_setopt($ch, CURLOPT_SSLCERT, $apiclient_cert); goto HCK5k; pRKpY: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto R_f_2; FapED: throw new WxPayException("\143\x75\162\x6c\345\x87\xba\xe9\224\231\xef\xbc\x8c\351\x94\231\350\xaf\xaf\xe7\240\x81\x3a{$error}"); goto nvu2J; nvu2J: goto T3Pgw; goto l0T0a; RiX60: curl_close($ch); goto FapED; OCv2n: set_time_limit(0); goto EdK9l; l0T0a: MUhNL: goto PLfS4; lbpsD: return $data; goto d7NRs; iBvyY: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto pRKpY; yjtdT: $error = curl_errno($ch); goto RiX60; aOoj8: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto OCv2n; PLfS4: curl_close($ch); goto lbpsD; imvQg: $ch = curl_init(); goto UZgvh; znVr3: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto WPL49; HLiL5: curl_setopt($ch, CURLOPT_URL, $url); goto iBvyY; sPeGt: } private function arrayToXml($arr) { goto EgMlx; m17uA: XNXc3: goto TKBRz; EgMlx: $xml = "\x3c\162\x6f\x6f\x74\x3e"; goto s4PTY; s4PTY: foreach ($arr as $key => $val) { goto Jeiui; Yq7Ri: DogDe: goto vhWuA; A3dxd: $xml .= "\x3c" . $key . "\x3e" . arrayToXml($val) . "\74\57" . $key . "\x3e"; goto Cwhr0; FdO1l: WgQMa: goto A3dxd; rU01y: goto fVOkY; goto FdO1l; Cwhr0: fVOkY: goto Yq7Ri; Jeiui: if (is_array($val)) { goto WgQMa; } goto CMjct; CMjct: $xml .= "\x3c" . $key . "\x3e" . $val . "\x3c\57" . $key . "\x3e"; goto rU01y; vhWuA: } goto m17uA; TKBRz: $xml .= "\x3c\57\x72\157\x6f\x74\76"; goto VVbyd; VVbyd: return $xml; goto gjEKk; gjEKk: } private function xmlToArray($xml) { goto PDWfp; K4mVt: $xmlstring = simplexml_load_string($xml, "\x53\x69\155\x70\154\145\x58\115\114\x45\154\145\x6d\x65\156\164", LIBXML_NOCDATA); goto xX5K8; PDWfp: libxml_disable_entity_loader(true); goto K4mVt; Ei7vq: return $val; goto WR0n5; xX5K8: $val = json_decode(json_encode($xmlstring), true); goto Ei7vq; WR0n5: } private function createNoncestr($length = 32) { goto N0_1p; D6PR0: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto Q31fj; kptfF: Ci10i: goto qWwzA; Q31fj: c8z6h: goto m1VME; Verph: goto Ci10i; goto LvV1u; WcD5b: $i = 0; goto kptfF; qWwzA: if (!($i < $length)) { goto eCx1b; } goto D6PR0; GE0Cs: $str = ''; goto WcD5b; m1VME: $i++; goto Verph; ejyg7: return $str; goto SQJ2I; LvV1u: eCx1b: goto ejyg7; N0_1p: $chars = "\141\142\143\x64\145\x66\147\x68\x69\x6a\153\x6c\155\156\x6f\x70\x71\x72\x73\164\165\166\x77\170\171\x7a\60\61\62\x33\x34\65\66\67\x38\71"; goto GE0Cs; SQJ2I: } private function getSign($Obj) { goto UZvUq; PndSb: $String = $this->formatBizQueryParaMap($Parameters, false); goto Efljj; jtr0f: HqByu: goto BN1rs; T15I_: $String = md5($String); goto msCzs; msCzs: $result_ = strtoupper($String); goto twurI; UZvUq: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; hieqI: } goto jtr0f; BN1rs: ksort($Parameters); goto PndSb; twurI: return $result_; goto TcCo1; Efljj: $String = $String . "\46\x6b\x65\171\x3d" . $this->key; goto T15I_; TcCo1: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto xJ_RC; xJ_RC: $buff = ''; goto CH6ML; sZW0Z: $reqPar = substr($buff, 0, strlen($buff) - 1); goto yEhgw; VyCjH: aDaOp: goto fL2Pb; yEhgw: aJRfo: goto IBvlP; ifFnZ: if (!(strlen($buff) > 0)) { goto aJRfo; } goto sZW0Z; hqrHB: foreach ($paraMap as $k => $v) { goto d6gGY; iA0b3: zXAG3: goto l7qQ0; o7DLF: fP4E0: goto xOelw; uq4e0: $v = urlencode($v); goto iA0b3; l7qQ0: $buff .= $k . "\x3d" . $v . "\x26"; goto o7DLF; d6gGY: if (!$urlencode) { goto zXAG3; } goto uq4e0; xOelw: } goto VyCjH; fL2Pb: $reqPar; goto ifFnZ; IBvlP: return $reqPar; goto EsuVb; CH6ML: ksort($paraMap); goto hqrHB; EsuVb: } }