<?php
 class WeixinPay { protected $appid; protected $mch_id; protected $key; protected $openid; protected $out_trade_no; protected $body; protected $total_fee; protected $attach; protected $notify_url; function __construct($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, $attach = 0, $notify_url = "\150\164\164\x70\x3a\57\57\x77\167\x77\x2e\167\145\151\x78\151\156\x2e\161\x71\56\x63\157\155\x2f\x77\170\160\x61\171\57\160\141\171\x2e\160\150\x70") { goto W345X; bT0uI: $this->total_fee = $total_fee; goto U8WiQ; rh1rI: $this->mch_id = $mch_id; goto P5VWC; IAoIk: $this->notify_url = $notify_url; goto kRsV8; dgmfm: $this->out_trade_no = $out_trade_no; goto ldZR9; ldZR9: $this->body = $body; goto bT0uI; W345X: $this->appid = $appid; goto CEdfP; U8WiQ: $this->attach = $attach; goto IAoIk; P5VWC: $this->key = $key; goto dgmfm; CEdfP: $this->openid = $openid; goto rh1rI; kRsV8: } public function pay() { $return = $this->weixinapp(); return $return; } private function unifiedorder() { goto gPvse; KjEgt: $parameters["\x73\151\x67\156"] = $this->getSign($parameters); goto she_q; A2fbq: return $return; goto MZvWl; v9IRj: $parameters = array("\141\x70\x70\151\144" => $this->appid, "\x6d\143\150\x5f\x69\144" => $this->mch_id, "\156\157\156\x63\x65\137\x73\x74\x72" => $this->createNoncestr(), "\142\x6f\144\171" => $this->body, "\141\164\x74\x61\143\150" => $this->attach, "\157\x75\x74\137\x74\162\141\144\145\137\x6e\x6f" => $this->out_trade_no, "\x74\x6f\x74\x61\x6c\137\x66\x65\x65" => $this->total_fee, "\x73\x70\x62\x69\154\154\137\x63\162\x65\141\x74\145\x5f\x69\x70" => $_SERVER["\122\x45\x4d\117\124\x45\x5f\101\x44\x44\122"], "\x6e\x6f\164\151\146\171\x5f\165\162\x6c" => $this->notify_url, "\x6f\160\x65\156\x69\x64" => $this->openid, "\164\x72\x61\144\145\x5f\164\x79\160\145" => "\112\x53\x41\120\x49"); goto KjEgt; yxBT2: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60)); goto A2fbq; gPvse: $url = "\150\164\164\160\x73\72\x2f\x2f\x61\x70\x69\56\155\x63\150\x2e\x77\x65\x69\x78\x69\x6e\56\x71\x71\x2e\x63\157\x6d\57\160\x61\171\x2f\x75\156\151\146\x69\145\144\x6f\162\144\145\x72"; goto v9IRj; she_q: $xmlData = $this->arrayToXml($parameters); goto yxBT2; MZvWl: } private static function postXmlCurl($xml, $url, $second = 30) { goto Ue4UF; S731U: QVc7B: goto ivfBo; Ue4UF: $ch = curl_init(); goto Qibm5; GlssC: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto ZX3HM; t4yoY: goto QVc7B; goto sTQpS; GNeaU: $data = curl_exec($ch); goto AV4dJ; GnysC: curl_close($ch); goto rjLLC; tJkhR: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto tNdBX; GXLGd: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto GlssC; uFLWZ: $error = curl_errno($ch); goto QKV79; bJGXb: curl_setopt($ch, CURLOPT_URL, $url); goto GXLGd; Qibm5: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto bJGXb; QKV79: curl_close($ch); goto dLQmZ; sTQpS: o6B5e: goto GnysC; ypZZM: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto CZ6rr; tNdBX: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto ypZZM; AV4dJ: if ($data) { goto o6B5e; } goto uFLWZ; egRKH: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto wAXSt; ZX3HM: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto egRKH; CZ6rr: set_time_limit(0); goto GNeaU; wAXSt: curl_setopt($ch, CURLOPT_POST, TRUE); goto tJkhR; dLQmZ: throw new WxPayException("\143\165\162\x6c\xe5\207\xba\xe9\x94\x99\xef\xbc\x8c\xe9\x94\x99\xe8\257\xaf\xe7\240\201\x3a{$error}"); goto t4yoY; rjLLC: return $data; goto S731U; ivfBo: } private function arrayToXml($arr) { goto q8xIZ; q8xIZ: $xml = "\x3c\x72\157\157\x74\76"; goto EOBv3; EOBv3: foreach ($arr as $key => $val) { goto KOerx; KOerx: if (is_array($val)) { goto MHVFQ; } goto zxg7a; zxg7a: $xml .= "\74" . $key . "\76" . $val . "\74\57" . $key . "\x3e"; goto B3o_z; aqr0e: pnSES: goto PtJ8y; l5V_K: $xml .= "\74" . $key . "\76" . arrayToXml($val) . "\74\57" . $key . "\x3e"; goto qPtl1; cdbcC: MHVFQ: goto l5V_K; B3o_z: goto TU5bq; goto cdbcC; qPtl1: TU5bq: goto aqr0e; PtJ8y: } goto rr00H; pBrik: return $xml; goto LNqxT; EnFwz: $xml .= "\x3c\57\162\157\157\x74\x3e"; goto pBrik; rr00H: otvqY: goto EnFwz; LNqxT: } private function xmlToArray($xml) { goto XaBjs; gimSW: return $val; goto rGcUl; Nb2BA: $xmlstring = simplexml_load_string($xml, "\x53\151\x6d\160\154\x65\x58\115\114\105\154\x65\155\145\156\x74", LIBXML_NOCDATA); goto EJBzI; EJBzI: $val = json_decode(json_encode($xmlstring), true); goto gimSW; XaBjs: libxml_disable_entity_loader(true); goto Nb2BA; rGcUl: } private function weixinapp() { goto MdDZf; MdDZf: $unifiedorder = $this->unifiedorder(); goto yQnhM; thI38: return $parameters; goto ujoz4; xsyZQ: $parameters["\x70\162\145\x70\141\x79\x5f\151\144"] = $unifiedorder["\160\x72\x65\160\141\171\137\x69\x64"]; goto thI38; yQnhM: $parameters = array("\141\x70\x70\111\x64" => $this->appid, "\164\x69\x6d\x65\x53\164\141\155\160" => '' . time() . '', "\156\x6f\156\143\145\x53\x74\x72" => $this->createNoncestr(), "\160\141\143\x6b\141\147\x65" => "\x70\x72\x65\x70\141\171\x5f\x69\x64\75" . $unifiedorder["\x70\x72\145\x70\141\x79\x5f\151\x64"], "\x73\x69\x67\x6e\124\x79\160\x65" => "\115\x44\65"); goto pWPMK; pWPMK: $parameters["\160\x61\x79\123\151\x67\x6e"] = $this->getSign($parameters); goto xsyZQ; ujoz4: } private function createNoncestr($length = 32) { goto qaAnG; C1QFW: XXyZk: goto FMmBN; cxGMK: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto C1QFW; Gpvkb: goto oTnFm; goto loAox; u2OIl: oTnFm: goto wxYyI; qaAnG: $chars = "\x61\142\143\x64\145\x66\x67\150\x69\152\x6b\154\155\156\157\160\x71\x72\x73\x74\x75\x76\x77\170\171\172\60\x31\x32\x33\64\x35\66\x37\70\x39"; goto SbHzB; loAox: p0Wst: goto MMiVZ; SbHzB: $str = ''; goto BCPtN; wxYyI: if (!($i < $length)) { goto p0Wst; } goto cxGMK; MMiVZ: return $str; goto TVNLi; BCPtN: $i = 0; goto u2OIl; FMmBN: $i++; goto Gpvkb; TVNLi: } private function getSign($Obj) { goto J1X6M; Nr2QI: vYBkS: goto L9QVU; vWuGD: return $result_; goto EhlG6; L9QVU: ksort($Parameters); goto ozS0k; Rw_LG: $result_ = strtoupper($String); goto vWuGD; hZNCY: $String = md5($String); goto Rw_LG; J1X6M: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; YvF1f: } goto Nr2QI; ozS0k: $String = $this->formatBizQueryParaMap($Parameters, false); goto LYnMI; LYnMI: $String = $String . "\x26\x6b\145\171\x3d" . $this->key; goto hZNCY; EhlG6: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto y535s; YUWfr: $reqPar = substr($buff, 0, strlen($buff) - 1); goto vXhWf; oYlTQ: if (!(strlen($buff) > 0)) { goto SOSNw; } goto YUWfr; itcyW: ksort($paraMap); goto Po4Jj; y535s: $buff = ''; goto itcyW; JFYsc: return $reqPar; goto QCm4s; vXhWf: SOSNw: goto JFYsc; uWGjB: $reqPar; goto oYlTQ; MZv73: rpNf5: goto uWGjB; Po4Jj: foreach ($paraMap as $k => $v) { goto rSGWy; XjaOh: $v = urlencode($v); goto dg7gH; rSGWy: if (!$urlencode) { goto xgFz6; } goto XjaOh; dg7gH: xgFz6: goto Usgg8; URLIO: ypNbE: goto WPjb4; Usgg8: $buff .= $k . "\75" . $v . "\x26"; goto URLIO; WPjb4: } goto MZv73; QCm4s: } }