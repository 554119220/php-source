<?php
 class WeixinTake { protected $appid; protected $mch_id; protected $openid; protected $key; protected $out_trade_no; protected $money; protected $check_name; protected $desc; function __construct($appid, $openid, $mch_id, $key, $out_trade_no, $money, $check_name = "\116\117\x5f\x43\110\x45\x43\113", $desc = "\xe6\x8f\x90\347\216\260") { goto OGLX2; hK6Bt: $this->key = $key; goto aef51; aef51: $this->out_trade_no = $out_trade_no; goto soxOD; drd3B: $this->desc = $desc; goto JgW3M; q5Xcp: $this->mch_id = $mch_id; goto hK6Bt; uKRKW: $this->openid = $openid; goto q5Xcp; OGLX2: $this->appid = $appid; goto uKRKW; TTCzX: $this->check_name = $check_name; goto drd3B; soxOD: $this->money = $money; goto TTCzX; JgW3M: } public function take() { goto tjxhh; kkpgl: return $return; goto naaL3; F3h2V: $xmlData = $this->arrayToXml($data); goto yC09C; QfteQ: $return["\143\157\144\x65"] = $return["\145\162\162\137\143\157\144\x65"]; goto NBjTJ; yC09C: $xml_ret = $this->postXmlCurl($xmlData, $url, 60); goto q38sI; q38sI: $return = $this->xmlToArray($xml_ret); goto amVy9; StSi8: $data = array("\x6d\143\x68\x5f\x61\x70\x70\x69\x64" => $this->appid, "\x6d\143\x68\x69\144" => $this->mch_id, "\160\x61\162\164\x6e\x65\162\x5f\x74\162\x61\x64\x65\x5f\x6e\157" => $this->out_trade_no, "\x6f\x70\x65\x6e\151\144" => $this->openid, "\141\x6d\x6f\x75\x6e\x74" => $this->money, "\x63\x68\145\143\153\x5f\x6e\x61\155\145" => $this->check_name, "\144\x65\163\143" => $this->desc, "\x6e\x6f\156\x63\145\x5f\163\x74\x72" => $this->createNoncestr(), "\163\x70\142\x69\154\154\137\x63\x72\x65\x61\164\x65\x5f\x69\x70" => $_SERVER["\122\x45\x4d\x4f\124\105\137\x41\x44\104\x52"]); goto oupqh; oupqh: $data["\163\x69\147\156"] = $this->getSign($data); goto F3h2V; Dhf3u: hSdvE: goto kkpgl; tjxhh: $url = "\x68\x74\164\160\163\72\x2f\57\x61\160\151\56\155\x63\x68\x2e\x77\x65\151\170\x69\x6e\56\x71\161\56\x63\157\x6d\x2f\x6d\155\x70\141\171\155\x6b\x74\x74\162\x61\156\163\146\x65\x72\163\x2f\160\162\x6f\x6d\x6f\x74\x69\157\156\57\164\162\x61\156\163\146\145\x72\163"; goto StSi8; NBjTJ: $return["\x6d\x73\147"] = $return["\145\162\x72\137\x63\157\x64\x65\x5f\144\145\x73"]; goto Dhf3u; amVy9: if ($return["\162\x65\164\x75\162\x6e\x5f\143\157\144\145"] == "\123\125\x43\x43\x45\x53\x53" && $return["\162\145\x73\165\154\164\x5f\x63\x6f\144\x65"] == "\123\x55\x43\x43\x45\x53\123") { goto hSdvE; } goto QfteQ; naaL3: } private static function postXmlCurl($xml, $url, $second = 30) { goto P3OQB; FdquT: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 1); goto i_aCL; i_aCL: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2); goto KnFVK; uoPsp: goto qLKjG; goto NwK0W; XIZFr: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto ud4YT; Bv4Jg: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto Sga1G; zL2fU: throw new ZhyException("\143\x75\x72\x6c\xe5\207\xba\xe9\224\x99\357\274\x8c\351\x94\x99\xe8\xaf\257\347\240\201\72{$error}"); goto uoPsp; VQoM1: if ($data) { goto X7_K_; } goto JWR56; s1NYy: $ch = curl_init(); goto P4sEL; JWR56: $error = curl_errno($ch); goto c4s3h; qxUIs: qLKjG: goto vvukj; P3OQB: global $_W; goto s1NYy; X0Rpg: $data = curl_exec($ch); goto VQoM1; CcOGM: curl_close($ch); goto KoOiB; ud4YT: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto au7LY; Sga1G: curl_setopt($ch, CURLOPT_POST, TRUE); goto n08p1; c4s3h: curl_close($ch); goto zL2fU; KnFVK: curl_setopt($ch, CURLOPT_SSLCERTTYPE, "\120\x45\x4d"); goto JdEgv; JdEgv: curl_setopt($ch, CURLOPT_SSLCERT, IA_ROOT . "\57\x61\x64\x64\x6f\156\x73\57\171\x7a\150\171\153\x5f\163\165\x6e\57\143\x65\x72\164\x2f\141\x70\151\x63\154\151\145\156\x74\x5f\143\x65\x72\x74\x5f" . $_W["\x75\156\151\141\143\151\x64"] . "\56\x70\x65\x6d"); goto jtthm; n08p1: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto XIZFr; NwK0W: X7_K_: goto CcOGM; K0ETB: curl_setopt($ch, CURLOPT_URL, $url); goto FdquT; dhitI: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto Bv4Jg; au7LY: set_time_limit(0); goto X0Rpg; P4sEL: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto K0ETB; jtthm: curl_setopt($ch, CURLOPT_SSLKEYTYPE, "\x50\x45\x4d"); goto nYKbt; KoOiB: return $data; goto qxUIs; nYKbt: curl_setopt($ch, CURLOPT_SSLKEY, IA_ROOT . "\57\141\x64\144\x6f\x6e\x73\57\x79\x7a\150\x79\153\137\163\x75\x6e\57\143\x65\x72\164\x2f\x61\160\x69\143\154\151\x65\x6e\x74\137\153\x65\x79\137" . $_W["\x75\x6e\151\x61\143\x69\x64"] . "\x2e\x70\145\x6d"); goto dhitI; vvukj: } private function arrayToXml($arr) { goto k0UpA; bR6eO: $xml .= "\x3c\x2f\162\x6f\157\x74\x3e"; goto Cnvll; zRLkc: JHyqV: goto bR6eO; Cnvll: return $xml; goto EiVB1; k0UpA: $xml = "\74\162\157\157\x74\x3e"; goto cgEPJ; cgEPJ: foreach ($arr as $key => $val) { goto FnCaw; wJAHU: $xml .= "\x3c" . $key . "\76" . arrayToXml($val) . "\74\57" . $key . "\76"; goto MSk6X; P3Yy_: goto K2JHn; goto BY5kV; feaNe: $xml .= "\74" . $key . "\x3e" . $val . "\74\57" . $key . "\76"; goto P3Yy_; FnCaw: if (is_array($val)) { goto eu3FT; } goto feaNe; FA3MU: lmM6q: goto AJnHL; MSk6X: K2JHn: goto FA3MU; BY5kV: eu3FT: goto wJAHU; AJnHL: } goto zRLkc; EiVB1: } private function xmlToArray($xml) { goto k4DTx; hEZXQ: $xmlstring = simplexml_load_string($xml, "\123\x69\x6d\160\x6c\x65\x58\115\114\105\154\x65\x6d\145\156\x74", LIBXML_NOCDATA); goto mjiQG; mjiQG: $val = json_decode(json_encode($xmlstring), true); goto LbKrr; k4DTx: libxml_disable_entity_loader(true); goto hEZXQ; LbKrr: return $val; goto cc8QX; cc8QX: } private function createNoncestr($length = 32) { goto LkKUH; XvQnm: $str = ''; goto Lma_g; cRMLb: goto a2Lhi; goto w2yc7; W3Fo_: if (!($i < $length)) { goto nhGDI; } goto jP4qn; gAMLV: a2Lhi: goto W3Fo_; w2yc7: nhGDI: goto plEB2; jP4qn: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto OemqZ; BabGt: $i++; goto cRMLb; LkKUH: $chars = "\x61\x62\x63\144\x65\146\147\150\x69\x6a\153\x6c\x6d\x6e\x6f\x70\161\x72\x73\164\x75\166\167\170\171\x7a\60\61\62\x33\x34\65\66\67\70\71"; goto XvQnm; plEB2: return $str; goto lciDE; OemqZ: zEeNT: goto BabGt; Lma_g: $i = 0; goto gAMLV; lciDE: } private function getSign($Obj) { goto ktJ86; VwGCj: $String = md5($String); goto n0KZZ; n0KZZ: $result_ = strtoupper($String); goto kheau; ktJ86: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; Jyeg9: } goto T8gZi; jySSY: $String = $String . "\46\153\145\171\x3d" . $this->key; goto VwGCj; T8gZi: zy3mP: goto skybD; kheau: return $result_; goto g9FtA; skybD: ksort($Parameters); goto GgGP5; GgGP5: $String = $this->formatBizQueryParaMap($Parameters, false); goto jySSY; g9FtA: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto O3FlJ; AKLKj: if (!(strlen($buff) > 0)) { goto RW_A9; } goto M7DFY; M7DFY: $reqPar = substr($buff, 0, strlen($buff) - 1); goto TuXNq; TuXNq: RW_A9: goto hi2_m; kEDry: UYy5N: goto ZFE4T; O3FlJ: $buff = ''; goto m395t; ZFE4T: $reqPar; goto AKLKj; ObiFB: foreach ($paraMap as $k => $v) { goto OhEsf; B_DeE: $v = urlencode($v); goto ZthbB; X5qmv: $buff .= $k . "\x3d" . $v . "\x26"; goto TDmuA; ZthbB: dSEst: goto X5qmv; TDmuA: Md5G3: goto ftR6m; OhEsf: if (!$urlencode) { goto dSEst; } goto B_DeE; ftR6m: } goto kEDry; hi2_m: return $reqPar; goto FJ3dm; m395t: ksort($paraMap); goto ObiFB; FJ3dm: } }