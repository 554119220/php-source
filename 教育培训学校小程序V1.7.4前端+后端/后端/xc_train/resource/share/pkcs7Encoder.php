<?php
 goto xB08f; CmUJv: class PKCS7Encoder { public static $block_size = 16; function encode($text) { goto Vhm2z; X6JzJ: $text_length = strlen($text); goto Hfvg0; nsDva: $pad_chr = chr($amount_to_pad); goto OnbVQ; nPpQx: $tmp .= $pad_chr; goto Qf2Ik; a_saK: $index = 0; goto NmgSW; NmgSW: UQoZY: goto rGV60; LrZN3: T4OUj: goto Z8zxA; ysTOc: $index++; goto LCPhm; eJTYl: NIWQZ: goto nsDva; Hfvg0: $amount_to_pad = PKCS7Encoder::$block_size - $text_length % PKCS7Encoder::$block_size; goto bCpsV; riRF8: $amount_to_pad = PKCS7Encoder::block_size; goto eJTYl; OnbVQ: $tmp = ''; goto a_saK; Vhm2z: $block_size = PKCS7Encoder::$block_size; goto X6JzJ; Qf2Ik: cbeaE: goto ysTOc; bCpsV: if (!($amount_to_pad == 0)) { goto NIWQZ; } goto riRF8; LCPhm: goto UQoZY; goto LrZN3; Z8zxA: return $text . $tmp; goto kcO4V; rGV60: if (!($index < $amount_to_pad)) { goto T4OUj; } goto nPpQx; kcO4V: } function decode($text) { goto trof9; nbMNw: return substr($text, 0, strlen($text) - $pad); goto VGGJM; tkd2a: Ct3Sn: goto nbMNw; y5TjF: if (!($pad < 1 || $pad > 32)) { goto Ct3Sn; } goto KvfEt; KvfEt: $pad = 0; goto tkd2a; trof9: $pad = ord(substr($text, -1)); goto y5TjF; VGGJM: } } goto eIlEB; xB08f: include_once "\145\162\x72\157\162\103\157\x64\x65\56\x70\150\160"; goto CmUJv; eIlEB: class Prpcrypt { public $key; function Prpcrypt($k) { $this->key = $k; } public function decrypt($aesCipher, $aesIV) { goto pOjEK; Ilyfu: return array(0, $result); goto SoaK1; o7a9h: try { $pkc_encoder = new PKCS7Encoder(); $result = $pkc_encoder->decode($decrypted); } catch (Exception $e) { return array(ErrorCode::$IllegalBuffer, null); } goto Ilyfu; pOjEK: try { goto XIexQ; S0z7Q: mcrypt_generic_init($module, $this->key, $aesIV); goto keC9u; JLNPt: mcrypt_module_close($module); goto zMyAr; keC9u: $decrypted = mdecrypt_generic($module, $aesCipher); goto ey23I; ey23I: mcrypt_generic_deinit($module); goto JLNPt; XIexQ: $module = mcrypt_module_open(MCRYPT_RIJNDAEL_128, '', MCRYPT_MODE_CBC, ''); goto S0z7Q; zMyAr: } catch (Exception $e) { return array(ErrorCode::$IllegalBuffer, null); } goto o7a9h; SoaK1: } }