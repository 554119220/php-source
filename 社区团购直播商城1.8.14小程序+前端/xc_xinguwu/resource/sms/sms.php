<?php
 goto tvnbK; hKLN6: interface IAcsClient { public function doAction($requst); } goto yjhPO; nngWE: class SendSmsRequest extends RpcAcsRequest { public function __construct() { parent::__construct("\x44\x79\x73\x6d\163\x61\x70\151", "\62\60\x31\67\x2d\x30\65\x2d\62\65", "\123\145\156\144\123\155\x73"); $this->setMethod("\120\x4f\x53\124"); } private $templateCode; private $phoneNumbers; private $signName; private $resourceOwnerAccount; private $templateParam; private $resourceOwnerId; private $ownerId; private $outId; private $smsUpExtendCode; public function getTemplateCode() { return $this->templateCode; } public function setTemplateCode($templateCode) { $this->templateCode = $templateCode; $this->queryParameters["\124\145\x6d\160\154\x61\164\x65\x43\x6f\x64\145"] = $templateCode; } public function getPhoneNumbers() { return $this->phoneNumbers; } public function setPhoneNumbers($phoneNumbers) { $this->phoneNumbers = $phoneNumbers; $this->queryParameters["\120\x68\157\156\145\x4e\165\155\142\145\162\x73"] = $phoneNumbers; } public function getSignName() { return $this->signName; } public function setSignName($signName) { $this->signName = $signName; $this->queryParameters["\x53\x69\147\156\x4e\141\x6d\x65"] = $signName; } public function getResourceOwnerAccount() { return $this->resourceOwnerAccount; } public function setResourceOwnerAccount($resourceOwnerAccount) { $this->resourceOwnerAccount = $resourceOwnerAccount; $this->queryParameters["\x52\145\x73\157\165\162\x63\145\117\x77\156\x65\x72\101\143\x63\157\x75\156\164"] = $resourceOwnerAccount; } public function getTemplateParam() { return $this->templateParam; } public function setTemplateParam($templateParam) { $this->templateParam = $templateParam; $this->queryParameters["\x54\x65\x6d\160\154\x61\164\145\x50\141\162\141\x6d"] = $templateParam; } public function getResourceOwnerId() { return $this->resourceOwnerId; } public function setResourceOwnerId($resourceOwnerId) { $this->resourceOwnerId = $resourceOwnerId; $this->queryParameters["\x52\145\x73\x6f\x75\x72\x63\145\117\167\x6e\145\x72\x49\144"] = $resourceOwnerId; } public function getOwnerId() { return $this->ownerId; } public function setOwnerId($ownerId) { $this->ownerId = $ownerId; $this->queryParameters["\117\167\156\x65\x72\111\144"] = $ownerId; } public function getOutId() { return $this->outId; } public function setOutId($outId) { $this->outId = $outId; $this->queryParameters["\x4f\165\x74\111\x64"] = $outId; } public function getSmsUpExtendCode() { return $this->smsUpExtendCode; } public function setSmsUpExtendCode($smsUpExtendCode) { $this->smsUpExtendCode = $smsUpExtendCode; $this->queryParameters["\x53\155\x73\x55\160\x45\170\164\145\x6e\x64\103\157\x64\145"] = $smsUpExtendCode; } } goto xVt1z; xPhuX: interface IClientProfile { public function getSigner(); public function getRegionId(); public function getFormat(); public function getCredential(); } goto IOfg0; SPwps: abstract class AcsRequest { protected $version; protected $product; protected $actionName; protected $regionId; protected $acceptFormat; protected $method; protected $protocolType = "\x68\x74\x74\160"; protected $content; protected $queryParameters = array(); protected $headers = array(); function __construct($product, $version, $actionName) { goto lvi41; LSXEL: $this->actionName = $actionName; goto uLZUH; iUU0_: $this->version = $version; goto LSXEL; lvi41: $this->headers["\170\55\163\144\x6b\x2d\143\154\151\x65\x6e\x74"] = "\160\x68\160\x2f\62\x2e\60\x2e\x30"; goto kl8Rc; kl8Rc: $this->product = $product; goto iUU0_; uLZUH: } public abstract function composeUrl($iSigner, $credential, $domain); public function getVersion() { return $this->version; } public function setVersion($version) { $this->version = $version; } public function getProduct() { return $this->product; } public function setProduct($product) { $this->product = $product; } public function getActionName() { return $this->actionName; } public function setActionName($actionName) { $this->actionName = $actionName; } public function getAcceptFormat() { return $this->acceptFormat; } public function setAcceptFormat($acceptFormat) { $this->acceptFormat = $acceptFormat; } public function getQueryParameters() { return $this->queryParameters; } public function getHeaders() { return $this->headers; } public function getMethod() { return $this->method; } public function setMethod($method) { $this->method = $method; } public function getProtocol() { return $this->protocolType; } public function setProtocol($protocol) { $this->protocolType = $protocol; } public function getRegionId() { return $this->regionId; } public function setRegionId($region) { $this->regionId = $region; } public function getContent() { return $this->content; } public function setContent($content) { $this->content = $content; } public function addHeader($headerKey, $headerValue) { $this->headers[$headerKey] = $headerValue; } } goto sv6cs; NjU1F: set_time_limit(0); goto SxV7O; ZUYwv: class HttpResponse { public $curlErrorCode; public $curlErrorMessage; public $statusCode; public $headers; public $body; } goto C53cK; OA3qh: ini_set("\144\x69\163\160\154\141\x79\137\145\x72\162\157\162\x73", "\x31"); goto XU12P; SxV7O: header("\103\157\156\x74\x65\156\164\55\x54\171\x70\145\x3a\40\164\145\x78\x74\57\x70\154\x61\x69\x6e\x3b\40\x63\x68\x61\162\x73\145\164\75\165\164\146\x2d\x38"); goto kgqZe; IOfg0: class DefaultProfile implements IClientProfile { private static $profile; private static $endpoints; private static $credential; private static $regionId; private static $acceptFormat; private static $isigner; private static $iCredential; private function __construct($regionId, $credential) { self::$regionId = $regionId; self::$credential = $credential; } public static function getProfile($regionId, $accessKeyId, $accessSecret) { goto Oglw7; EMw15: return self::$profile; goto nFG3j; Oglw7: $credential = new Credential($accessKeyId, $accessSecret); goto VxqUn; VxqUn: self::$profile = new DefaultProfile($regionId, $credential); goto EMw15; nFG3j: } public function getSigner() { goto QkrJ1; QkrJ1: if (!(null == self::$isigner)) { goto zQJBH; } goto DKOG5; DKOG5: self::$isigner = new ShaHmac1Signer(); goto EFIk7; pO9dr: return self::$isigner; goto HvQTm; EFIk7: zQJBH: goto pO9dr; HvQTm: } public function getRegionId() { return self::$regionId; } public function getFormat() { return self::$acceptFormat; } public function getCredential() { goto UJEHk; UJEHk: if (!(null == self::$credential && null != self::$iCredential)) { goto iVvo6; } goto SkSsP; zfLcm: iVvo6: goto sfYsY; SkSsP: self::$credential = self::$iCredential; goto zfLcm; sfYsY: return self::$credential; goto YH4KT; YH4KT: } public static function getEndpoints() { goto t_qR5; t_qR5: if (!(null == self::$endpoints)) { goto ln0BE; } goto cH4uy; dCD4C: ln0BE: goto Y7ZYy; Y7ZYy: return self::$endpoints; goto dMzTV; cH4uy: self::$endpoints = EndpointProvider::getEndpoints(); goto dCD4C; dMzTV: } public static function addEndpoint($endpointName, $regionId, $product, $domain) { goto vy7nl; icaEC: self::updateEndpoint($regionId, $product, $domain, $endpoint); goto WVoz0; B_qkY: JlpxZ: goto WR7Tb; WVoz0: goto k1iKL; goto NoTzI; WR7Tb: $endpoint = self::findEndpointByName($endpointName); goto bW0o1; zse_L: self::addEndpoint_($endpointName, $regionId, $product, $domain); goto uE4B1; vy7nl: if (!(null == self::$endpoints)) { goto JlpxZ; } goto lwMiw; lwMiw: self::$endpoints = self::getEndpoints(); goto B_qkY; NoTzI: meblR: goto zse_L; bW0o1: if (null == $endpoint) { goto meblR; } goto icaEC; uE4B1: k1iKL: goto nbiEX; nbiEX: } public static function findEndpointByName($endpointName) { foreach (self::$endpoints as $key => $endpoint) { goto zg1e6; wUyQ3: Gdm5Q: goto Sz6Fe; hNqMd: return $endpoint; goto wUyQ3; zg1e6: if (!($endpoint->getName() == $endpointName)) { goto Gdm5Q; } goto hNqMd; Sz6Fe: E_K4L: goto i_3lf; i_3lf: } gfPlf: } private static function addEndpoint_($endpointName, $regionId, $product, $domain) { goto RQAQb; fvzHr: $productDomains = array(new ProductDomain($product, $domain)); goto YSOUe; YSOUe: $endpoint = new Endpoint($endpointName, $regionIds, $productDomains); goto L72cK; RQAQb: $regionIds = array($regionId); goto fvzHr; L72cK: array_push(self::$endpoints, $endpoint); goto AZjgW; AZjgW: } private static function updateEndpoint($regionId, $product, $domain, $endpoint) { goto irdoa; WlkxG: $endpoint->setRegionIds($regionIds); goto RlHhM; L8_pD: if (in_array($regionId, $regionIds)) { goto xMd0R; } goto r25r4; r25r4: array_push($regionIds, $regionId); goto WlkxG; st2g3: array_push($productDomains, new ProductDomain($product, $domain)); goto aSEWG; irdoa: $regionIds = $endpoint->getRegionIds(); goto L8_pD; sWPxX: if (!(null == self::findProductDomain($productDomains, $product, $domain))) { goto jeUKF; } goto st2g3; DCYh_: $endpoint->setProductDomains($productDomains); goto ZEb92; aSEWG: jeUKF: goto DCYh_; RlHhM: xMd0R: goto pZypR; pZypR: $productDomains = $endpoint->getProductDomains(); goto sWPxX; ZEb92: } private static function findProductDomain($productDomains, $product, $domain) { goto rY37T; rY37T: foreach ($productDomains as $key => $productDomain) { goto kaxYF; FuJk1: return $productDomain; goto TYuZV; WhQyQ: ahLdy: goto qjyHG; kaxYF: if (!($productDomain->getProductName() == $product && $productDomain->getDomainName() == $domain)) { goto MHOwX; } goto FuJk1; TYuZV: MHOwX: goto WhQyQ; qjyHG: } goto SU1Wv; iVvPe: return null; goto acR21; SU1Wv: Ut2F1: goto iVvPe; acR21: } } goto SPwps; sv6cs: abstract class RpcAcsRequest extends AcsRequest { private $dateTimeFormat = "\131\55\x6d\x2d\x64\134\124\110\x3a\x69\72\x73\x5c\x5a"; private $domainParameters = array(); function __construct($product, $version, $actionName) { parent::__construct($product, $version, $actionName); $this->initialize(); } private function initialize() { $this->setMethod("\107\105\x54"); $this->setAcceptFormat("\112\x53\117\x4e"); } private function prepareValue($value) { goto jz5j8; SQJM2: dLXN1: goto zbkiq; E3EcY: IR11O: goto plnvw; ZoZnG: if ($value) { goto dLXN1; } goto QFwtw; kRJvI: goto IR11O; goto SQJM2; plnvw: Op_IR: goto p4LiZ; QFwtw: return "\146\x61\x6c\163\145"; goto kRJvI; zbkiq: return "\164\162\165\x65"; goto E3EcY; IeJZB: return $value; goto V1y8Y; jz5j8: if (is_bool($value)) { goto s4B19; } goto IeJZB; V1y8Y: goto Op_IR; goto Wwzma; Wwzma: s4B19: goto ZoZnG; p4LiZ: } public function composeUrl($iSigner, $credential, $domain) { goto jScZm; PMleo: $apiParams["\x56\x65\x72\163\x69\157\x6e"] = $this->getVersion(); goto ceTUR; Ih0qK: $apiParams["\123\151\x67\x6e\x61\x74\x75\162\x65\126\x65\x72\163\151\x6f\x6e"] = $iSigner->getSignatureVersion(); goto uBb1V; LupUr: $apiParams["\x41\143\x63\145\x73\x73\113\145\171\111\x64"] = $credential->getAccessKeyId(); goto BQe5T; jW24g: $requestUrl = $this->getProtocol() . "\72\57\x2f" . $domain . "\x2f\x3f"; goto Mscx6; PSmNS: return $requestUrl; goto Mj_3w; oq9S9: return substr($requestUrl, 0, -1); goto KL38k; vy3fV: $apiParams["\x54\151\x6d\145\x73\x74\x61\155\x70"] = date($this->dateTimeFormat); goto OflYd; YXG8k: $apiParams["\122\145\147\151\x6f\156\111\x64"] = $this->getRegionId(); goto LupUr; Mscx6: foreach ($apiParams as $apiParamKey => $apiParamValue) { $requestUrl .= "{$apiParamKey}\x3d" . urlencode($apiParamValue) . "\x26"; khnSQ: } goto EAO7e; af1kN: s_84z: goto PSmNS; hy2Gi: date_default_timezone_set("\107\x4d\x54"); goto vy3fV; F629i: $apiParams["\123\151\x67\x6e\141\164\x75\162\145\x4d\x65\164\x68\157\144"] = $iSigner->getSignatureMethod(); goto Ih0qK; tfPUH: $requestUrl = $this->getProtocol() . "\x3a\57\x2f" . $domain . "\57"; goto Vef4K; FA8r2: if (parent::getMethod() == "\x50\117\x53\x54") { goto luLhU; } goto jW24g; OflYd: $apiParams["\101\143\x74\151\x6f\x6e"] = $this->getActionName(); goto PMleo; KL38k: goto KGNeH; goto VGg_X; VGg_X: luLhU: goto tfPUH; EAO7e: nEFVg: goto oq9S9; uBb1V: $apiParams["\123\x69\x67\x6e\x61\x74\x75\x72\145\116\157\156\143\145"] = uniqid(mt_rand(0, 0xffff), true); goto hy2Gi; jScZm: $apiParams = parent::getQueryParameters(); goto ajp_9; Mj_3w: KGNeH: goto RF9zq; ajp_9: foreach ($apiParams as $key => $value) { $apiParams[$key] = $this->prepareValue($value); VslQ4: } goto MZISo; Vef4K: foreach ($apiParams as $apiParamKey => $apiParamValue) { $this->putDomainParameters($apiParamKey, $apiParamValue); efU80: } goto af1kN; MZISo: da76m: goto YXG8k; ceTUR: $apiParams["\x53\151\x67\x6e\141\164\165\162\145"] = $this->computeSignature($apiParams, $credential->getAccessSecret(), $iSigner); goto FA8r2; BQe5T: $apiParams["\x46\157\162\155\x61\164"] = $this->getAcceptFormat(); goto F629i; RF9zq: } private function computeSignature($parameters, $accessKeySecret, $iSigner) { goto n7snS; cyyeu: foreach ($parameters as $key => $value) { $canonicalizedQueryString .= "\x26" . $this->percentEncode($key) . "\75" . $this->percentEncode($value); yVl1V: } goto eE6Lg; TIfeX: return $signature; goto rpOJG; eE6Lg: e7VtB: goto gJz2g; n7snS: ksort($parameters); goto iqfw0; Vkc3h: $signature = $iSigner->signString($stringToSign, $accessKeySecret . "\x26"); goto TIfeX; iqfw0: $canonicalizedQueryString = ''; goto cyyeu; gJz2g: $stringToSign = parent::getMethod() . "\46\x25\x32\106\46" . $this->percentencode(substr($canonicalizedQueryString, 1)); goto Vkc3h; rpOJG: } protected function percentEncode($str) { goto abNLY; r0gsE: $res = preg_replace("\57\45\67\x45\57", "\x7e", $res); goto Isg8h; PKumF: $res = preg_replace("\x2f\134\x2b\57", "\x25\x32\60", $res); goto hcKSA; Isg8h: return $res; goto b5IHf; hcKSA: $res = preg_replace("\x2f\x5c\52\57", "\x25\62\101", $res); goto r0gsE; abNLY: $res = urlencode($str); goto PKumF; b5IHf: } public function getDomainParameter() { return $this->domainParameters; } public function putDomainParameters($name, $value) { $this->domainParameters[$name] = $value; } } goto nngWE; SlI2X: class HttpRequest { public $timeoutMs; public $url; public $method; public $customHeaders; public $dataToPost; public $userData; } goto ZUYwv; SScca: class HttpHelper { public static $connectTimeout = 30; public static $readTimeout = 80; public static function curl($url, $httpMethod = "\107\105\x54", $postFields = null, $headers = null) { goto f2aam; c9YCJ: if (!ENABLE_HTTP_PROXY) { goto WfTnR; } goto QJ0vK; HzMup: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); goto wPQFP; WkyOg: curl_setopt($ch, CURLOPT_POSTFIELDS, is_array($postFields) ? self::getPostHttpBody($postFields) : $postFields); goto I7s8a; mN2zg: curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); goto WkyOg; tm8Wq: return $httpResponse; goto TLxfX; ObgLG: if (!curl_errno($ch)) { goto umwi0; } goto sMyMu; wPQFP: LzkVZ: goto BpdIl; ix53b: $httpResponse = new xcHttpResponse(); goto SHB8Z; pv5SP: if (!(is_array($headers) && 0 < count($headers))) { goto Db1gc; } goto D15qn; vP2Lc: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); goto gOC_7; c_dqZ: $httpResponse->setStatus(curl_getinfo($ch, CURLINFO_HTTP_CODE)); goto ObgLG; V3IKZ: curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $httpMethod); goto c9YCJ; wurhu: curl_setopt($ch, CURLOPT_HTTPHEADER, $httpHeaders); goto pRxMg; f2aam: $ch = curl_init(); goto V3IKZ; BpdIl: if (!(strlen($url) > 5 && strtolower(substr($url, 0, 5)) == "\150\x74\x74\160\x73")) { goto x1cRV; } goto TJcD9; I0jCs: umwi0: goto vTlue; TJcD9: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); goto vP2Lc; SHB8Z: $httpResponse->setBody(curl_exec($ch)); goto c_dqZ; D15qn: $httpHeaders = self::getHttpHearders($headers); goto wurhu; cfAp4: curl_setopt($ch, CURLOPT_TIMEOUT, self::$readTimeout); goto W1cuB; vTlue: curl_close($ch); goto tm8Wq; XYytf: WfTnR: goto BJAW4; gOC_7: x1cRV: goto pv5SP; BJAW4: curl_setopt($ch, CURLOPT_URL, $url); goto r6iKx; MnUI4: curl_setopt($ch, CURLOPT_PROXY, HTTP_PROXY_IP); goto yZkwi; x7Koo: if (!self::$connectTimeout) { goto LzkVZ; } goto HzMup; W1cuB: kTgow: goto x7Koo; r6iKx: curl_setopt($ch, CURLOPT_FAILONERROR, false); goto mN2zg; I7s8a: if (!self::$readTimeout) { goto kTgow; } goto cfAp4; yZkwi: curl_setopt($ch, CURLOPT_PROXYPORT, HTTP_PROXY_PORT); goto FF1d9; sMyMu: throw new ClientException("\x53\x65\162\166\145\162\40\x75\156\162\145\141\x63\150\x61\142\x6c\145\x3a\x20\x45\x72\x72\x6e\157\x3a\40" . curl_errno($ch) . "\40" . curl_error($ch), "\x53\104\x4b\x2e\x53\x65\x72\166\145\162\x55\156\x72\145\141\x63\x68\x61\x62\154\x65"); goto I0jCs; QJ0vK: curl_setopt($ch, CURLOPT_PROXYAUTH, CURLAUTH_BASIC); goto MnUI4; pRxMg: Db1gc: goto ix53b; FF1d9: curl_setopt($ch, CURLOPT_PROXYTYPE, CURLPROXY_HTTP); goto XYytf; TLxfX: } static function getPostHttpBody($postFildes) { goto gsaO4; k5Vj_: kIWwC: goto hcQbt; hcQbt: return substr($content, 0, -1); goto wcwu3; S9jPF: foreach ($postFildes as $apiParamKey => $apiParamValue) { $content .= "{$apiParamKey}\x3d" . urlencode($apiParamValue) . "\x26"; DSxuG: } goto k5Vj_; gsaO4: $content = ''; goto S9jPF; wcwu3: } static function getHttpHearders($headers) { goto ZXQpF; N4aKy: foreach ($headers as $key => $value) { array_push($httpHeader, $key . "\72" . $value); GW2R2: } goto NbGU2; q8deu: return $httpHeader; goto n2c9T; ZXQpF: $httpHeader = array(); goto N4aKy; NbGU2: irQJ0: goto q8deu; n2c9T: } } goto ODllE; yjhPO: class DefaultAcsClient implements IAcsClient { public $iClientProfile; public $__urlTestFlag__; function __construct($iClientProfile) { $this->iClientProfile = $iClientProfile; $this->__urlTestFlag__ = false; } public function getAcsResponse($request, $iSigner = null, $credential = null, $autoRetry = true, $maxRetryNumber = 3) { goto GZ5eN; ehiPx: $respObject = $this->parseAcsResponse($httpResponse->getBody(), $request->getAcceptFormat()); goto LAKB_; V06u9: $this->buildApiException($respObject, $httpResponse->getStatus()); goto ybym1; ybym1: UeTb3: goto e2pkI; e2pkI: return $respObject; goto KSBJe; LAKB_: if (!(false == $httpResponse->isSuccess())) { goto UeTb3; } goto V06u9; GZ5eN: $httpResponse = $this->doActionImpl($request, $iSigner, $credential, $autoRetry, $maxRetryNumber); goto ehiPx; KSBJe: } private function doActionImpl($request, $iSigner = null, $credential = null, $autoRetry = true, $maxRetryNumber = 3) { goto udxQ8; VvMbX: p2pjW: goto EwSf6; Dykzr: Vg1g6: goto qhm2i; qhm2i: $requestUrl = $request->composeUrl($iSigner, $credential, $domain); goto XMbDS; Xcc9r: throw new ClientException("\103\141\156\x20\156\157\164\x20\x66\x69\156\144\x20\145\x6e\144\160\x6f\x69\156\164\40\x74\157\x20\141\143\x63\145\163\163\x2e", "\123\x44\113\x2e\111\156\166\141\154\151\x64\122\145\x67\151\157\156\111\144"); goto Dykzr; qGnww: if (!(null == $credential)) { goto l4o7i; } goto Zr4om; D9xLf: $retryTimes = 1; goto utfUq; utfUq: Da_RO: goto Zx62e; Q_bC7: MgCCM: goto CWIZT; neXW3: throw new ClientException($requestUrl, "\125\x52\114\x54\145\x73\x74\x46\x6c\x61\x67\111\163\123\145\164"); goto VvMbX; IN76t: $iSigner = $this->iClientProfile->getSigner(); goto fAivK; RWSrd: if (count($request->getDomainParameter()) > 0) { goto Fiw5N; } goto is1Ct; Rfq51: $httpResponse = HttpHelper::curl($requestUrl, $request->getDomainParameter(), $request->getHeaders()); goto QAacw; ERmg3: l4o7i: goto MugNi; VAaHA: if (!(null == $iSigner)) { goto lFzbE; } goto IN76t; qcbPj: throw new ClientException("\x4e\157\40\141\143\x74\x69\166\145\x20\160\162\x6f\146\151\154\x65\40\x66\157\165\x6e\144\x2e", "\x53\104\113\x2e\111\156\x76\141\x6c\x69\x64\x50\x72\157\x66\x69\154\145"); goto f4tHz; CWIZT: $httpResponse = HttpHelper::curl($requestUrl, $request->getMethod(), $request->getDomainParameter(), $request->getHeaders()); goto sehPg; EwSf6: if (count($request->getDomainParameter()) > 0) { goto MgCCM; } goto yVzIN; MugNi: $request = $this->prepareRequest($request); goto gqsBi; is1Ct: $httpResponse = HttpHelper::curl($requestUrl, $request->getMethod(), $request->getContent(), $request->getHeaders()); goto x0M7Y; w6LpY: return $httpResponse; goto Yy10Y; f4tHz: ssgqY: goto VAaHA; fAivK: lFzbE: goto qGnww; sehPg: AxB0w: goto D9xLf; Zr4om: $credential = $this->iClientProfile->getCredential(); goto ERmg3; ko9u1: goto AxB0w; goto Q_bC7; oa9PY: $retryTimes++; goto rATRd; TM6nO: if (!(null == $domain)) { goto Vg1g6; } goto Xcc9r; yVzIN: $httpResponse = HttpHelper::curl($requestUrl, $request->getMethod(), $request->getContent(), $request->getHeaders()); goto ko9u1; Zx62e: if (!(500 <= $httpResponse->getStatus() && $autoRetry && $retryTimes < $maxRetryNumber)) { goto f_FKU; } goto w1b0u; QAacw: wNW4B: goto oa9PY; wjUaa: f_FKU: goto w6LpY; rATRd: goto Da_RO; goto wjUaa; x0M7Y: goto wNW4B; goto EJywz; EJywz: Fiw5N: goto Rfq51; gqsBi: $domain = EndpointProvider::findProductDomain($request->getRegionId(), $request->getProduct()); goto TM6nO; udxQ8: if (!(null == $this->iClientProfile && (null == $iSigner || null == $credential || null == $request->getRegionId() || null == $request->getAcceptFormat()))) { goto ssgqY; } goto qcbPj; XMbDS: if (!$this->__urlTestFlag__) { goto p2pjW; } goto neXW3; w1b0u: $requestUrl = $request->composeUrl($iSigner, $credential, $domain); goto RWSrd; Yy10Y: } public function doAction($request, $iSigner = null, $credential = null, $autoRetry = true, $maxRetryNumber = 3) { trigger_error("\x64\157\x41\143\164\151\157\x6e\50\51\x20\x69\163\x20\144\145\x70\162\145\143\x61\164\x65\x64\x2e\40\x50\x6c\145\x61\163\145\40\x75\163\145\40\x67\x65\164\x41\143\163\122\x65\163\160\x6f\x6e\x73\x65\50\x29\x20\151\156\163\x74\145\141\x64\x2e", E_USER_NOTICE); return $this->doActionImpl($request, $iSigner, $credential, $autoRetry, $maxRetryNumber); } private function prepareRequest($request) { goto fGVgY; bWD5m: i6lOZ: goto YQnaZ; jjWjs: yHhKZ: goto dd0HJ; n149o: QEFYh: goto Ne0eA; YQnaZ: if (!(null == $request->getAcceptFormat())) { goto yHhKZ; } goto RkynE; RkynE: $request->setAcceptFormat($this->iClientProfile->getFormat()); goto jjWjs; wissI: $request->setRegionId($this->iClientProfile->getRegionId()); goto bWD5m; Ne0eA: return $request; goto uJJ8Q; fGVgY: if (!(null == $request->getRegionId())) { goto i6lOZ; } goto wissI; jNZgG: $request->setMethod("\x47\x45\124"); goto n149o; dd0HJ: if (!(null == $request->getMethod())) { goto QEFYh; } goto jNZgG; uJJ8Q: } private function buildApiException($respObject, $httpStatus) { throw new ServerException($respObject->Message, $respObject->Code, $httpStatus, $respObject->RequestId); } private function parseAcsResponse($body, $format) { goto IpKWf; Rc1ja: o7P7z: goto bnJYZ; Ofk51: return $respObject; goto b_X80; JHz_8: xKy0Q: goto Ofk51; yRP8H: goto Yj0Tz; goto Rc1ja; sAQdz: if (!("\122\101\x57" == $format)) { goto kD_MG; } goto En9WO; qtgdQ: goto xKy0Q; goto X9KXV; IpKWf: if ("\112\x53\x4f\116" == $format) { goto ZRwgE; } goto prTWS; bnJYZ: $respObject = @simplexml_load_string($body); goto Ads1S; prTWS: if ("\x58\x4d\x4c" == $format) { goto o7P7z; } goto sAQdz; X9KXV: ZRwgE: goto hSem5; RutJH: kD_MG: goto yRP8H; Ads1S: Yj0Tz: goto qtgdQ; hSem5: $respObject = json_decode($body); goto JHz_8; En9WO: $respObject = $body; goto RutJH; b_X80: } } goto rUGKB; tvnbK: error_reporting(E_ALL); goto OA3qh; ttkDQ: $xml = simplexml_load_string(file_get_contents($endpoint_filename)); goto Tgej7; XU12P: define("\x45\116\101\x42\114\105\137\110\124\x54\x50\x5f\120\122\x4f\130\x59", FALSE); goto vE2Ws; e475z: define("\110\124\124\120\137\120\x52\x4f\130\x59\137\120\x4f\122\124", "\x38\x38\70\x38"); goto SlI2X; FL3RD: $json_array = json_decode($json, TRUE); goto AlKAh; FU0BE: interface ISigner { public function getSignatureMethod(); public function getSignatureVersion(); public function signString($source, $accessSecret); } goto hJg17; vE2Ws: define("\x48\124\124\120\137\120\122\x4f\x58\x59\x5f\111\120", "\x31\x32\67\x2e\x30\x2e\60\56\x31"); goto e475z; hJg17: class ShaHmac1Signer implements ISigner { public function signString($source, $accessSecret) { return base64_encode(hash_hmac("\x73\x68\x61\61", $source, $accessSecret, true)); } public function getSignatureMethod() { return "\x48\x4d\x41\x43\x2d\123\x48\101\61"; } public function getSignatureVersion() { return "\61\x2e\x30"; } } goto hKLN6; Tgej7: $json = json_encode($xml); goto FL3RD; o9Hxl: class ProductDomain { private $productName; private $domainName; function __construct($product, $domain) { $this->productName = $product; $this->domainName = $domain; } public function getProductName() { return $this->productName; } public function setProductName($productName) { $this->productName = $productName; } public function getDomainName() { return $this->domainName; } public function setDomainName($domainName) { $this->domainName = $domainName; } } goto Jabkp; Jabkp: class EndpointProvider { private static $endpoints; public static function findProductDomain($regionId, $product) { goto cuMEe; cuMEe: if (!(null == $regionId || null == $product || null == self::$endpoints)) { goto cG_Jo; } goto jz4gn; YCAdA: foreach (self::$endpoints as $key => $endpoint) { goto mzACq; CbWJa: pZOpf: goto nlww0; W8nxQ: rATGc: goto CbWJa; mzACq: if (!in_array($regionId, $endpoint->getRegionIds())) { goto rATGc; } goto lAimR; lAimR: return self::findProductDomainByProduct($endpoint->getProductDomains(), $product); goto W8nxQ; nlww0: } goto Qfyr0; bRmQ3: return null; goto KOZcO; Qfyr0: R7gJX: goto bRmQ3; nU1ku: cG_Jo: goto YCAdA; jz4gn: return null; goto nU1ku; KOZcO: } private static function findProductDomainByProduct($productDomains, $product) { goto nbs1X; dwuRA: gEIMP: goto aDc7_; nbs1X: if (!(null == $productDomains)) { goto uERYr; } goto uRdIY; aDc7_: return null; goto SNR8o; Mymm9: uERYr: goto z2ZV3; z2ZV3: foreach ($productDomains as $key => $productDomain) { goto sJrXi; HXbpi: OMvTo: goto ivPYV; Okt6F: WBuw3: goto HXbpi; sJrXi: if (!($product == $productDomain->getProductName())) { goto WBuw3; } goto HSFf7; HSFf7: return $productDomain->getDomainName(); goto Okt6F; ivPYV: } goto dwuRA; uRdIY: return null; goto Mymm9; SNR8o: } public static function getEndpoints() { return self::$endpoints; } public static function setEndpoints($endpoints) { self::$endpoints = $endpoints; } } goto O40GI; O40GI: class Credential { private $dateTimeFormat = "\x59\55\155\x2d\144\134\124\x48\x3a\151\x3a\163\134\x5a"; private $refreshDate; private $expiredDate; private $accessKeyId; private $accessSecret; private $securityToken; function __construct($accessKeyId, $accessSecret) { goto sCXY2; wh3Kv: $this->refreshDate = date($this->dateTimeFormat); goto q_Pux; x0M1W: $this->accessSecret = $accessSecret; goto wh3Kv; sCXY2: $this->accessKeyId = $accessKeyId; goto x0M1W; q_Pux: } public function isExpired() { goto xsbw9; QEFRQ: v2033: goto pNTLZ; xsbw9: if (!($this->expiredDate == null)) { goto v2033; } goto shvIz; pNTLZ: if (!(strtotime($this->expiredDate) > date($this->dateTimeFormat))) { goto IdmvE; } goto Df2oY; Df2oY: return false; goto jYHds; yDmbU: return true; goto i2Srh; shvIz: return false; goto QEFRQ; jYHds: IdmvE: goto yDmbU; i2Srh: } public function getRefreshDate() { return $this->refreshDate; } public function getExpiredDate() { return $this->expiredDate; } public function setExpiredDate($expiredHours) { goto NK7xM; IXPBX: z5ejE: goto D8f8D; HIoSW: return $this->expiredDate = date($this->dateTimeFormat, strtotime("\x2b" . $expiredHours . "\40\150\x6f\x75\x72")); goto IXPBX; NK7xM: if (!($expiredHours > 0)) { goto z5ejE; } goto HIoSW; D8f8D: } public function getAccessKeyId() { return $this->accessKeyId; } public function setAccessKeyId($accessKeyId) { $this->accessKeyId = $accessKeyId; } public function getAccessSecret() { return $this->accessSecret; } public function setAccessSecret($accessSecret) { $this->accessSecret = $accessSecret; } } goto xPhuX; ODllE: class ClientException extends \Exception { function __construct($errorMessage, $errorCode) { goto KNA2A; KNA2A: parent::__construct($errorMessage); goto qmTrY; Mdj7F: $this->setErrorType("\103\x6c\151\x65\156\164"); goto PL3k0; GPv11: $this->errorCode = $errorCode; goto Mdj7F; qmTrY: $this->errorMessage = $errorMessage; goto GPv11; PL3k0: } private $errorCode; private $errorMessage; private $errorType; public function getErrorCode() { return $this->errorCode; } public function setErrorCode($errorCode) { $this->errorCode = $errorCode; } public function getErrorMessage() { return $this->errorMessage; } public function setErrorMessage($errorMessage) { $this->errorMessage = $errorMessage; } public function getErrorType() { return $this->errorType; } public function setErrorType($errorType) { $this->errorType = $errorType; } } goto FU0BE; C53cK: class LibcurlWrapper { private $curlMultiHandle; private $curlHandleInfo; private $idleCurlHandle; public function __construct() { $this->curlMultiHandle = curl_multi_init(); $this->idleCurlHandle = array(); } public function __destruct() { goto qbgH2; FsASt: $this->idleCurlHandle = array(); goto c7Xtj; qbgH2: curl_multi_close($this->curlMultiHandle); goto M7AHN; M7AHN: foreach ($this->idleCurlHandle as $handle) { curl_close($handle); QtHSo: } goto HNIpZ; HNIpZ: cPG31: goto FsASt; c7Xtj: } public function startSendingRequest($httpRequest, $done) { goto Xd62h; rsOfJ: QNu3G: goto HuTFG; p2m59: curl_setopt($curlHandle, CURLOPT_POSTFIELDS, $arr[1]); goto hWwVW; bGvfv: curl_setopt($curlHandle, CURLOPT_URL, $httpRequest->url); goto NZcfx; Xd62h: if (count($this->idleCurlHandle) !== 0) { goto lglch; } goto aF4j6; hWwVW: AcSjc: goto Nmg7X; KBQid: curl_setopt($curlHandle, CURLOPT_POST, true); goto vxrW3; MvhoG: array_push($headers, "\x45\170\160\x65\x63\x74\x3a\x20\x31\60\x30\55\143\157\x6e\x74\151\x6e\x75\x65"); goto Kmros; UPrxT: return false; goto rsOfJ; pJ2kE: curl_setopt($curlHandle, CURLOPT_RETURNTRANSFER, 1); goto uZFKw; YnQdg: b3XsT: goto KBQid; PVz8F: $this->curlHandleInfo[$curlHandle]["\162\145\161\x75\145\163\x74"] = $httpRequest; goto GOq6A; Vbuwt: curl_setopt($curlHandle, CURLOPT_SAFE_UPLOAD, true); goto YnQdg; uZFKw: $headers = $httpRequest->customHeaders; goto jziZZ; Nmg7X: curl_setopt($curlHandle, CURLOPT_HTTPHEADER, $headers); goto swHsd; swHsd: curl_multi_add_handle($this->curlMultiHandle, $curlHandle); goto RJY9E; HuTFG: goto JpXvL; goto Pfxu7; r1Qp8: if (!defined("\103\x55\x52\x4c\x4f\x50\x54\x5f\123\101\x46\105\137\x55\120\114\117\101\104")) { goto b3XsT; } goto Vbuwt; jziZZ: array_push($headers, "\x55\x73\145\162\55\101\x67\145\x6e\x74\72" . Conf::getUserAgent()); goto zU7Tq; PQWcJ: JpXvL: goto na2HQ; L8B1a: $curlHandle = array_pop($this->idleCurlHandle); goto PQWcJ; zU7Tq: if (!($httpRequest->method === "\120\x4f\x53\x54")) { goto AcSjc; } goto r1Qp8; na2HQ: curl_setopt($curlHandle, CURLOPT_TIMEOUT_MS, $httpRequest->timeoutMs); goto bGvfv; Pfxu7: lglch: goto L8B1a; Kmros: array_push($headers, "\103\x6f\x6e\x74\x65\x6e\164\x2d\124\x79\x70\x65\72\40\155\165\154\164\151\160\x61\x72\x74\x2f\x66\157\162\155\55\144\141\164\141\73\40\x62\x6f\x75\x6e\x64\141\x72\x79\x3d" . $arr[0]); goto p2m59; tJtDY: if (!($curlHandle === false)) { goto QNu3G; } goto UPrxT; aF4j6: $curlHandle = curl_init(); goto tJtDY; NZcfx: curl_setopt($curlHandle, CURLOPT_HEADER, 1); goto pJ2kE; vxrW3: $arr = buildCustomPostFields($httpRequest->dataToPost); goto MvhoG; RJY9E: $this->curlHandleInfo[$curlHandle]["\144\x6f\156\145"] = $done; goto PVz8F; GOq6A: } public function performSendingRequest() { goto TDO3v; HsT4u: LrLJC: goto bmuqc; QgWob: vo3sq: goto th0g9; CW8TS: $info = curl_multi_info_read($this->curlMultiHandle); goto xg7TP; AJfNI: cPN6k: goto aSsWM; DP_Ha: $mrc = curl_multi_exec($this->curlMultiHandle, $active); goto fUUCC; YKuDh: f8EP3: goto DP_Ha; fkxq2: oID6b: goto YKuDh; mt3yu: $this->processResult($info); goto mUn3g; USnK0: ovPGI: goto lK5C8; nh23X: $this->processResult($info); goto USnK0; gy3Df: dcsuy: goto Fu7lR; DQUOU: RjCzS: goto QgWob; xg7TP: if (!($info !== false)) { goto ovPGI; } goto nh23X; S1CdB: goto cO3A3; goto DQUOU; lK5C8: if ($mrc == CURLM_CALL_MULTI_PERFORM) { goto ik3zx; } goto yZvv_; bjTr8: cO3A3: goto rpAJp; yZvv_: R5_WH: goto gy3Df; WowqN: usleep(1); goto fkxq2; TDO3v: sEl1W: goto oz22d; aSsWM: goto dcsuy; goto HsT4u; QyLtS: if (!(curl_multi_select($this->curlMultiHandle) == -1)) { goto oID6b; } goto WowqN; mUn3g: jhLff: goto TSaJJ; oz22d: $active = null; goto fKKiw; brRT_: $mrc = curl_multi_exec($this->curlMultiHandle, $active); goto CW8TS; fKKiw: ik3zx: goto brRT_; Fu7lR: if (!($active && $mrc == CURLM_OK)) { goto LrLJC; } goto QyLtS; th0g9: goto sEl1W; goto bjTr8; fUUCC: $info = curl_multi_info_read($this->curlMultiHandle); goto VR_js; VR_js: if (!($info !== false)) { goto jhLff; } goto mt3yu; TSaJJ: if ($mrc == CURLM_CALL_MULTI_PERFORM) { goto f8EP3; } goto AJfNI; bmuqc: if (!(count($this->curlHandleInfo) == 0)) { goto RjCzS; } goto S1CdB; rpAJp: } private function processResult($info) { goto jwO9F; kHjh9: $body = substr($responseStr, $headerSize); goto lBEQn; PvfsT: call_user_func($done, $request, $response); goto xmlCn; DTcLs: UMdNA: goto yswQ3; DPWaB: $responseStr = curl_multi_getcontent($handle); goto TGlOS; fJLhs: $response->curlErrorMessage = curl_error($handle); goto X26he; xmlCn: goto leFuA; goto mea0O; yswQ3: $response->body = $body; goto PvfsT; Ysobo: $response->curlErrorCode = $result; goto Lgzp4; d1DVC: $response = new HttpResponse(); goto VFYTO; X26he: $response->statusCode = curl_getinfo($handle, CURLINFO_HTTP_CODE); goto kMdaY; faOzs: array_push($this->idleCurlHandle, $handle); goto yDCQ7; TGlOS: $headerSize = curl_getinfo($handle, CURLINFO_HEADER_SIZE); goto Xe8Nv; jwO9F: $result = $info["\x72\145\163\x75\154\164"]; goto WLzYU; WLzYU: $handle = $info["\x68\x61\x6e\x64\x6c\x65"]; goto YCV7t; Xe8Nv: $headerStr = substr($responseStr, 0, $headerSize); goto kHjh9; lBEQn: $response->curlErrorCode = curl_errno($handle); goto fJLhs; kMdaY: $headLines = explode("\15\12", $headerStr); goto Jm1bZ; Alg1l: leFuA: goto UJp7T; FS0kc: call_user_func($done, $request, $response); goto Alg1l; Jm1bZ: foreach ($headLines as $head) { goto GerbG; oXTw5: $response->headers[trim($arr[0])] = trim($arr[1]); goto YFQ9W; YFQ9W: csc9a: goto BDJmI; uPiWG: if (!(count($arr) >= 2)) { goto csc9a; } goto oXTw5; GerbG: $arr = explode("\72", $head); goto uPiWG; BDJmI: m2VfD: goto JDm_p; JDm_p: } goto DTcLs; iyRdI: curl_multi_remove_handle($this->curlMultiHandle, $handle); goto faOzs; Lgzp4: $response->curlErrorMessage = curl_error($handle); goto FS0kc; VFYTO: if ($result !== CURLE_OK) { goto Xw_YI; } goto DPWaB; YCV7t: $request = $this->curlHandleInfo[$handle]["\162\145\161\165\145\163\x74"]; goto FnAqe; UJp7T: unset($this->curlHandleInfo[$handle]); goto iyRdI; mea0O: Xw_YI: goto Ysobo; FnAqe: $done = $this->curlHandleInfo[$handle]["\144\x6f\156\145"]; goto d1DVC; yDCQ7: } private function resetCurl($handle) { goto Buifd; yfsd2: curl_setopt($handler, CURLOPT_TIMEOUT, 0); goto rqTAx; Buifd: if (function_exists("\143\x75\162\x6c\137\162\145\163\x65\x74")) { goto HvV60; } goto tZB_I; Sr_fY: HvV60: goto Bw3mR; W9qXj: curl_setopt($handler, CURLOPT_POSTFIELDS, array()); goto yfsd2; B8RFA: curl_setopt($handler, CURLOPT_HTTPHEADER, array()); goto W9qXj; tZB_I: curl_setopt($handler, CURLOPT_URL, ''); goto B8RFA; DLVd_: curl_setopt($handler, CURLOPT_SSL_VERIFYHOST, 0); goto VT4qO; Bw3mR: curl_reset($handle); goto LsJYq; LsJYq: XuNeH: goto BWUvn; VT4qO: goto XuNeH; goto Sr_fY; rqTAx: curl_setopt($handler, CURLOPT_SSL_VERIFYPEER, false); goto DLVd_; BWUvn: } } goto ledLr; ledLr: class xcHttpResponse { private $body; private $status; public function getBody() { return $this->body; } public function setBody($body) { $this->body = $body; } public function getStatus() { return $this->status; } public function setStatus($status) { $this->status = $status; } public function isSuccess() { goto N3sc4; Ri6IH: return false; goto REW8a; N3sc4: if (!(200 <= $this->status && 300 > $this->status)) { goto zOUSV; } goto vwnKZ; B9gPY: zOUSV: goto Ri6IH; vwnKZ: return true; goto B9gPY; REW8a: } } goto SScca; kOgcm: CHFAW: goto y_AfL; rUGKB: class Endpoint { private $name; private $regionIds; private $productDomains; function __construct($name, $regionIds, $productDomains) { goto ocFLG; ocFLG: $this->name = $name; goto epOwe; srkxL: $this->productDomains = $productDomains; goto q7ypL; epOwe: $this->regionIds = $regionIds; goto srkxL; q7ypL: } public function getName() { return $this->name; } public function setName($name) { $this->name = $name; } public function getRegionIds() { return $this->regionIds; } public function setRegionIds($regionIds) { $this->regionIds = $regionIds; } public function getProductDomains() { return $this->productDomains; } public function setProductDomains($productDomains) { $this->productDomains = $productDomains; } } goto o9Hxl; xVt1z: class xcap_SmsDemo { static $acsClient = null; public static function getAcsClient($AccessKeyId, $AccessKeySecret) { goto d46vV; FgnZj: if (!(static::$acsClient == null)) { goto PF0rb; } goto pHPDI; XKC_l: DefaultProfile::addEndpoint($endPointName, $region, $product, $domain); goto RfVlh; PiP1j: $region = "\x63\x6e\x2d\150\x61\x6e\147\172\150\157\x75"; goto Oah1r; Mh9s4: $domain = "\x64\171\x73\155\163\x61\160\151\56\x61\154\151\x79\165\156\143\x73\x2e\143\157\155"; goto X6aNC; XWyS_: return static::$acsClient; goto jJoo8; X6aNC: $accessKeyId = $AccessKeyId; goto I7yYM; Oah1r: $endPointName = "\143\x6e\55\150\x61\x6e\x67\172\x68\x6f\x75"; goto FgnZj; d46vV: $product = "\104\171\x73\x6d\x73\141\x70\151"; goto Mh9s4; pHPDI: $profile = DefaultProfile::getProfile($region, $accessKeyId, $accessKeySecret); goto XKC_l; I7yYM: $accessKeySecret = $AccessKeySecret; goto PiP1j; RfVlh: static::$acsClient = new DefaultAcsClient($profile); goto m2G5K; m2G5K: PF0rb: goto XWyS_; jJoo8: } public static function sendSms($AccessKeyId, $AccessKeySecret, $signName, $templateCode, $phoneNumbers, $templateParam = null, $outId = null, $smsUpExtendCode = null) { goto dOwZr; OaiWM: $request->setPhoneNumbers($phoneNumbers); goto PQZaQ; UwWDW: $request->setSmsUpExtendCode($smsUpExtendCode); goto C8KcA; jlstk: if (!$templateParam) { goto G3wA8; } goto ZxMww; LynzU: $request->setOutId($outId); goto rRXLE; it3gq: G3wA8: goto jIRyH; yAaU1: return $acsResponse; goto e6KSP; dOwZr: $request = new SendSmsRequest(); goto OaiWM; fzTnX: $request->setTemplateCode($templateCode); goto jlstk; SSqaf: if (!$smsUpExtendCode) { goto kETWR; } goto UwWDW; C8KcA: kETWR: goto Oakvy; Oakvy: $acsResponse = static::getAcsClient($AccessKeyId, $AccessKeySecret)->getAcsResponse($request); goto yAaU1; ZxMww: $request->setTemplateParam(json_encode($templateParam)); goto it3gq; rRXLE: uPIxe: goto SSqaf; PQZaQ: $request->setSignName($signName); goto fzTnX; jIRyH: if (!$outId) { goto uPIxe; } goto LynzU; e6KSP: } public function queryDetails($phoneNumbers, $sendDate, $pageSize = 10, $currentPage = 1, $bizId = null) { goto rS450; tDV7L: $request->setPhoneNumber($phoneNumbers); goto jOgW1; gXZTI: $acsResponse = static::getAcsClient()->getAcsResponse($request); goto bpo1d; bpo1d: return $acsResponse; goto RL2kX; VGCSA: $request->setCurrentPage($currentPage); goto gXZTI; jOgW1: $request->setBizId($bizId); goto kq7dI; RfkCB: $request->setPageSize($pageSize); goto VGCSA; rS450: $request = new QuerySendDetailsRequest(); goto tDV7L; kq7dI: $request->setSendDate($sendDate); goto RfkCB; RL2kX: } } goto NjU1F; K1bNO: foreach ($json_array["\x45\x6e\144\160\x6f\x69\x6e\x74"] as $json_endpoint) { goto FfcAf; bRURn: goto W_xUc; goto MOnD1; v4Ayh: O25Np: goto t2yM6; MOnD1: z689w: goto eXFtu; HfuMk: $products = array(); goto AHLdr; l80SA: P1owb: goto cuFtO; sKUfd: if (array() === $json_products or !is_array($json_products)) { goto h2nru; } goto DRorN; FfcAf: if (!array_key_exists("\122\x65\x67\151\157\x6e\111\x64", $json_endpoint["\122\x65\x67\x69\157\156\111\x64\x73"])) { goto P1owb; } goto mj7xv; askFd: SpOpj: goto Nj91A; G7QKS: $products = $json_products; goto IXFHM; V3Ehi: array_push($endpoints, $endpoint); goto v4Ayh; eXFtu: $region_ids = array($json_region_ids); goto zxOnI; jKwft: $endpoint = new Endpoint($region_ids[0], $region_ids, $product_domains); goto V3Ehi; UKr1Q: $region_ids = $json_region_ids; goto bRURn; bBF5e: oekI6: goto jKwft; BOLqv: $products = array($json_products); goto jcGWy; Z0H3s: h2nru: goto HfuMk; knrcS: goto zlQxM; goto l80SA; mj7xv: $json_region_ids = $json_endpoint["\122\145\x67\151\157\156\x49\x64\163"]["\122\x65\147\151\157\x6e\111\x64"]; goto wsb63; H8Y0m: foreach ($products as $product) { goto yyYyP; OPfwZ: BwcIp: goto uBDLe; VoDcq: array_push($product_domains, $product_domain); goto OPfwZ; yyYyP: $product_domain = new ProductDomain($product["\x50\162\157\144\x75\143\x74\116\141\x6d\145"], $product["\104\157\x6d\x61\x69\156\116\x61\155\x65"]); goto VoDcq; uBDLe: } goto bBF5e; DRorN: if (array_keys($json_products) !== range(0, count($json_products) - 1)) { goto oREQn; } goto G7QKS; Erhgv: oREQn: goto BOLqv; IXFHM: goto IT6iD; goto Erhgv; jcGWy: IT6iD: goto xG1oF; xG1oF: goto yKR5q; goto Z0H3s; XrnA7: if (!array_key_exists("\120\x72\x6f\x64\x75\x63\x74", $json_endpoint["\120\x72\x6f\144\165\143\x74\x73"])) { goto SpOpj; } goto ryVDe; UGRgn: goto Pxzs5; goto askFd; WLlHw: $product_domains = array(); goto H8Y0m; Y63Ie: zlQxM: goto XrnA7; cuFtO: $region_ids = array(); goto Y63Ie; ryVDe: $json_products = $json_endpoint["\120\162\157\144\x75\x63\164\163"]["\x50\162\157\144\165\x63\164"]; goto sKUfd; xYzP2: Pxzs5: goto WLlHw; zxOnI: W_xUc: goto knrcS; AHLdr: yKR5q: goto UGRgn; wsb63: if (!is_array($json_region_ids)) { goto z689w; } goto UKr1Q; Nj91A: $products = array(); goto xYzP2; t2yM6: } goto kOgcm; kgqZe: $endpoint_filename = dirname(__FILE__) . DIRECTORY_SEPARATOR . "\145\156\x64\160\x6f\151\156\164\163\x2e\x78\155\x6c"; goto ttkDQ; AlKAh: $endpoints = array(); goto K1bNO; y_AfL: EndpointProvider::setEndpoints($endpoints);