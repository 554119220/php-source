<?php
 goto N1gQh; jtjek: yw3kk: goto K8KpK; zDx7v: CnYNQ: goto MkKks; EjuKW: trigger_error("\x6e\x65\x65\144\x20\x6f\x70\145\x6e\x73\163\154\x20\163\165\160\160\x6f\162\x74\40\x73\150\x61\x32\x35\x36", E_USER_ERROR); goto zDx7v; N1gQh: if (extension_loaded("\x6f\x70\145\x6e\x73\x73\154")) { goto yw3kk; } goto doEfL; K8KpK: if (in_array("\163\x68\x61\62\x35\66", openssl_get_md_methods(), true)) { goto CnYNQ; } goto EjuKW; doEfL: trigger_error("\x6e\145\145\144\40\157\x70\145\x6e\x73\x73\154\40\145\170\x74\x65\156\x73\151\x6f\156", E_USER_ERROR); goto jtjek; MkKks: class TLSSigAPI { private $private_key = false; private $public_key = false; private $appid = 0; public function setAppid($appid) { $this->appid = $appid; } public function setPrivateKey($private_key) { goto fWdYl; Pol4X: Yl2Yl: goto p6v8s; V2T5Q: if (!($this->private_key === false)) { goto Yl2Yl; } goto FFwdI; FFwdI: throw new Exception(openssl_error_string()); goto Pol4X; fWdYl: $this->private_key = openssl_pkey_get_private($private_key); goto V2T5Q; p6v8s: return true; goto Y3HWo; Y3HWo: } public function setPublicKey($public_key) { goto hcoWX; rXxjs: KePU5: goto OV5RR; OV5RR: return true; goto sMi0o; hcoWX: $this->public_key = openssl_pkey_get_public($public_key); goto gsWuK; gsWuK: if (!($this->public_key === false)) { goto KePU5; } goto BlWHR; BlWHR: throw new Exception(openssl_error_string()); goto rXxjs; sMi0o: } private function base64Encode($string) { goto ZrCNx; tyDUr: return str_replace(array_keys($replace), array_values($replace), $base64); goto cZPEq; tcuqZ: VHQTM: goto tyDUr; HCyMA: throw new Exception("\x62\x61\163\145\66\64\137\145\156\143\157\144\x65\x20\145\162\162\x6f\162"); goto tcuqZ; ZrCNx: static $replace = array("\x2b" => "\x2a", "\57" => "\55", "\75" => "\137"); goto CcOZp; CcOZp: $base64 = base64_encode($string); goto V0unQ; V0unQ: if (!($base64 === false)) { goto VHQTM; } goto HCyMA; cZPEq: } private function base64Decode($base64) { goto RcJ6X; ZXslN: if (!($result == false)) { goto E1kHr; } goto QPeIC; tgjq2: $string = str_replace(array_values($replace), array_keys($replace), $base64); goto L1WfV; RcJ6X: static $replace = array("\x2b" => "\x2a", "\x2f" => "\55", "\75" => "\137"); goto tgjq2; QPeIC: throw new Exception("\x62\x61\163\145\66\64\x5f\x64\x65\x63\x6f\144\x65\40\x65\162\x72\157\x72"); goto FQis4; RCMv0: return $result; goto Q1oxl; L1WfV: $result = base64_decode($string); goto ZXslN; FQis4: E1kHr: goto RCMv0; Q1oxl: } private function genSignContent(array $json) { goto qLF21; NpQvX: $content = ''; goto bsEnb; J2A0_: return $content; goto kuQ2N; W0JWd: bsi3j: goto J2A0_; bsEnb: foreach ($members as $member) { goto qYRKW; ADfWw: p9DdE: goto u3Qt9; JFJ3F: CB3tS: goto T__Pn; qYRKW: if (isset($json[$member])) { goto CB3tS; } goto NR2U8; NR2U8: throw new Exception("\152\x73\157\x6e\40\x6e\145\x65\144\x20" . $member); goto JFJ3F; T__Pn: $content .= "{$member}\x3a{$json[$member]}\xa"; goto ADfWw; u3Qt9: } goto W0JWd; qLF21: static $members = array("\124\x4c\123\56\x61\x70\160\151\x64\x5f\x61\164\x5f\63\x72\144", "\124\114\x53\56\x61\x63\x63\157\x75\156\x74\137\164\x79\x70\145", "\x54\x4c\123\x2e\x69\144\x65\x6e\164\151\146\151\x65\x72", "\x54\114\x53\56\x73\144\x6b\x5f\x61\160\160\151\144", "\x54\x4c\123\x2e\164\x69\155\x65", "\x54\x4c\123\56\x65\x78\x70\151\162\x65\137\141\146\x74\x65\x72"); goto NpQvX; kuQ2N: } private function sign($data) { goto pf11z; pf11z: $signature = ''; goto LY1wm; hU60K: ED68L: goto SQNeA; iVQZU: throw new Exception(openssl_error_string()); goto hU60K; SQNeA: return $signature; goto F_P44; LY1wm: if (openssl_sign($data, $signature, $this->private_key, "\163\150\x61\62\x35\66")) { goto ED68L; } goto iVQZU; F_P44: } private function verify($data, $sig) { goto Kbptp; gFhwV: if (!($ret == -1)) { goto UftoZ; } goto jcsjn; jcsjn: throw new Exception(openssl_error_string()); goto KMwry; W5XVW: return $ret; goto rxUHO; KMwry: UftoZ: goto W5XVW; Kbptp: $ret = openssl_verify($data, $sig, $this->public_key, "\x73\x68\x61\62\x35\x36"); goto gFhwV; rxUHO: } public function genSig($identifier, $expire = 15552000) { goto SsEm4; PzKn7: $compressed = gzcompress($json_text); goto xhN2E; srDW4: Kioog: goto PzKn7; Ntl15: throw new Exception("\142\x61\163\x65\x36\x34\x5f\145\156\x63\x6f\144\x65\x20\x65\x72\x72\x6f\x72"); goto fIoNY; miWdM: $err = ''; goto R6rnN; IRnpd: $signature = $this->sign($content, $err); goto Bdd7u; xhN2E: if (!($compressed === false)) { goto JEHEL; } goto mxZbo; V4WxR: throw new Exception("\152\163\157\x6e\137\145\156\143\157\144\x65\40\x65\162\x72\x6f\x72"); goto srDW4; b39Wi: if (!($json_text === false)) { goto Kioog; } goto V4WxR; SsEm4: $json = array("\124\x4c\123\x2e\141\x63\143\157\165\x6e\x74\x5f\164\x79\x70\145" => "\x30", "\x54\x4c\123\56\151\x64\145\x6e\164\151\146\151\145\x72" => (string) $identifier, "\x54\x4c\123\x2e\x61\x70\x70\151\x64\137\x61\x74\x5f\x33\x72\144" => "\60", "\124\114\x53\x2e\x73\x64\x6b\x5f\x61\x70\160\x69\144" => (string) $this->appid, "\124\x4c\x53\56\x65\x78\160\151\162\x65\x5f\141\146\x74\145\x72" => (string) $expire, "\124\114\123\56\166\145\162\x73\151\157\156" => "\62\60\61\x35\x31\62\x33\x30\60\x30\x30\x30", "\x54\114\x53\x2e\164\x69\155\x65" => (string) time()); goto miWdM; xPJVQ: $json_text = json_encode($json); goto b39Wi; o52Br: return $this->base64Encode($compressed); goto FY8MH; R6rnN: $content = $this->genSignContent($json, $err); goto IRnpd; XyWN7: if (!($json["\124\114\123\x2e\163\151\x67"] === false)) { goto Gowjr; } goto Ntl15; mxZbo: throw new Exception("\147\172\143\157\155\x70\162\x65\x73\163\x20\x65\162\x72\157\162"); goto RLOX3; Bdd7u: $json["\124\114\x53\56\x73\x69\147"] = base64_encode($signature); goto XyWN7; RLOX3: JEHEL: goto o52Br; fIoNY: Gowjr: goto xPJVQ; FY8MH: } public function verifySig($sig, $identifier, &$init_time, &$expire_time, &$error_msg) { try { goto Hkwqo; NuZgu: $uncompressed_sig = gzuncompress($decoded_sig); goto AP35W; P8kR4: return true; goto uihDg; A1C2e: $decoded_sig = $this->base64Decode($sig); goto NuZgu; H_klU: throw new Exception("\x61\x70\160\151\144\x20\x65\162\x72\157\x72\40\163\151\147\141\160\x70\x69\x64\x3a{$json["\x54\114\123\56\141\x70\160\151\144"]}\x20\164\x68\151\163\x61\x70\160\x69\x64\x3a{$this->appid}"); goto Y3K3K; x4nuU: i_ppG: goto oz_70; oz_70: $json = (array) $json; goto UNfEl; BOR3O: throw new Exception("\152\163\157\156\137\144\x65\x63\x6f\144\145\40\x65\x72\162\157\162"); goto x4nuU; mwuIy: throw new Exception("\163\151\x67\x20\152\x73\x6f\x6e\137\x64\145\143\x6f\144\x65\40\145\x72\x72\x6f\162"); goto XIqz1; XIqz1: JcXD_: goto Xkz1v; Hkwqo: $error_msg = ''; goto A1C2e; UZoHg: if (!($signature == false)) { goto JcXD_; } goto mwuIy; lGP1T: if (!($json == false)) { goto i_ppG; } goto BOR3O; CyWHU: if ($succ) { goto CTrVv; } goto alrGQ; LTTd2: jK2wM: goto oyTR7; Y3K3K: RH4PL: goto Cixs7; x008Y: CTrVv: goto LmzjX; gGpjC: throw new Exception("\x67\x7a\165\156\x63\157\155\x70\x72\145\163\163\40\145\x72\162\157\162"); goto LTTd2; bwhlb: DupIi: goto YvA9L; BEctp: $expire_time = $json["\x54\114\123\56\x65\170\x70\x69\162\x65\x5f\x61\x66\x74\145\x72"]; goto P8kR4; alrGQ: throw new Exception("\x76\x65\x72\x69\x66\x79\x20\x66\141\x69\154\x65\144"); goto x008Y; Cixs7: $content = $this->genSignContent($json); goto OlzcA; UNfEl: if (!($json["\x54\x4c\x53\x2e\151\x64\145\x6e\x74\151\x66\x69\145\162"] !== $identifier)) { goto DupIi; } goto lrFmo; AP35W: if (!($uncompressed_sig === false)) { goto jK2wM; } goto gGpjC; Xkz1v: $succ = $this->verify($content, $signature); goto CyWHU; oyTR7: $json = json_decode($uncompressed_sig); goto lGP1T; OlzcA: $signature = base64_decode($json["\x54\114\123\x2e\x73\x69\147"]); goto UZoHg; lrFmo: throw new Exception("\x69\x64\145\156\164\151\146\151\145\x72\40\x65\x72\162\157\162\x20\x73\151\147\151\x64\x3a{$json["\124\114\123\x2e\x69\144\145\x6e\x74\x69\146\x69\x65\x72"]}\x20\x69\x64\x3a{$identifier}"); goto bwhlb; LmzjX: $init_time = $json["\124\114\123\56\x74\151\155\145"]; goto BEctp; YvA9L: if (!($json["\x54\x4c\x53\x2e\x73\144\x6b\137\141\160\x70\151\144"] != $this->appid)) { goto RH4PL; } goto H_klU; uihDg: } catch (Exception $ex) { $error_msg = $ex->getMessage(); return false; } } }